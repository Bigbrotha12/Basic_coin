/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  Registration,
  RegistrationInterface,
} from "../../../../../contracts/G_Upgradable_NFT/IMXBridge/IMX_Bridge.sol/Registration";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IMX",
        name: "_imx",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "imx",
    outputs: [
      {
        internalType: "contract IMX",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "starkKey",
        type: "uint256",
      },
    ],
    name: "isRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ethKey",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "starkKey",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "assetType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
    ],
    name: "registerAndDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ethKey",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "starkKey",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "assetType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantizedAmount",
        type: "uint256",
      },
    ],
    name: "registerAndDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ethKey",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "starkKey",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "assetType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "registerAndDepositNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ethKey",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "starkKey",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "assetType",
        type: "uint256",
      },
    ],
    name: "registerAndWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ethKey",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "starkKey",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "assetType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "registerAndWithdrawNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ethKey",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "starkKey",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "assetType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "registerAndWithdrawNftTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ethKey",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "starkKey",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "assetType",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "registerAndWithdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ethKey",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "starkKey",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "assetType",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "mintingBlob",
        type: "bytes",
      },
    ],
    name: "regsiterAndWithdrawAndMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e00380380610e0083398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610d6d806100936000396000f3fe6080604052600436106100915760003560e01c80634627d598116100595780634627d59814610155578063579a6988146101755780638bdb9f80146101a5578063ea864adf146101b8578063ef4ae27f146101d857600080fd5b80630a9c3beb146100965780630f08025f146100b85780631259cc6c146100f5578063352eb84c146101155780634280d50a14610135575b600080fd5b3480156100a257600080fd5b506100b66100b136600461096e565b6101f8565b005b3480156100c457600080fd5b506000546100d8906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561010157600080fd5b506100b6610110366004610a04565b6102d1565b34801561012157600080fd5b506100b6610130366004610a8b565b610380565b34801561014157600080fd5b506100b6610150366004610af9565b61045c565b34801561016157600080fd5b506100b6610170366004610b70565b61050a565b34801561018157600080fd5b50610195610190366004610bec565b6105b2565b60405190151581526020016100ec565b6100b66101b3366004610a8b565b610631565b3480156101c457600080fd5b506100b66101d3366004610c05565b61078b565b3480156101e457600080fd5b506100b66101f3366004610af9565b61085f565b600054604051633749053560e21b81526001600160a01b039091169063dd2414d49061022e908a908a908a908a90600401610c92565b600060405180830381600087803b15801561024857600080fd5b505af115801561025c573d6000803e3d6000fd5b505060005460405163d91443b760e01b81526001600160a01b03909116925063d91443b79150610296908990879087908790600401610cc4565b600060405180830381600087803b1580156102b057600080fd5b505af11580156102c4573d6000803e3d6000fd5b5050505050505050505050565b600054604051633749053560e21b81526001600160a01b039091169063dd2414d490610307908a908a908a908a90600401610c92565b600060405180830381600087803b15801561032157600080fd5b505af1158015610335573d6000803e3d6000fd5b5050600054604051630ebef0fd60e41b8152600481018a905260248101879052604481018690526001600160a01b038581166064830152909116925063ebef0fd09150608401610296565b600054604051633749053560e21b81526001600160a01b039091169063dd2414d4906103b6908990899089908990600401610c92565b600060405180830381600087803b1580156103d057600080fd5b505af11580156103e4573d6000803e3d6000fd5b505060005460405162cda0bd60e11b81526004810189905260248101869052604481018590526001600160a01b03909116925063019b417a91506064015b600060405180830381600087803b15801561043c57600080fd5b505af1158015610450573d6000803e3d6000fd5b50505050505050505050565b600054604051633749053560e21b81526001600160a01b039091169063dd2414d490610492908a908a908a908a90600401610c92565b600060405180830381600087803b1580156104ac57600080fd5b505af11580156104c0573d6000803e3d6000fd5b505060005460405163570e6ef360e11b8152600481018a90526024810187905260448101869052606481018590526001600160a01b03909116925063ae1cdde69150608401610296565b600054604051633749053560e21b81526001600160a01b039091169063dd2414d490610540908990899089908990600401610c92565b600060405180830381600087803b15801561055a57600080fd5b505af115801561056e573d6000803e3d6000fd5b50506000546040516305335c3960e21b815260048101899052602481018690526001600160a01b03858116604483015290911692506314cd70e49150606401610422565b60008054604051631dbd1da760e01b81526004810184905282916001600160a01b031690631dbd1da790602401602060405180830381865afa1580156105fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106209190610ce4565b6001600160a01b0316141592915050565b600054604051633749053560e21b81526001600160a01b039091169063dd2414d490610667908990899089908990600401610c92565b600060405180830381600087803b15801561068157600080fd5b505af1158015610695573d6000803e3d6000fd5b505060008054604051602481018a905260448101879052606481018690529193506001600160a01b03169150349060840160408051601f198184030181529181526020820180516001600160e01b0316625777c560e11b179052516106fa9190610d08565b60006040518083038185875af1925050503d8060008114610737576040519150601f19603f3d011682016040523d82523d6000602084013e61073c565b606091505b50509050806107825760405162461bcd60e51b815260206004820152600e60248201526d11195c1bdcda5d0811985a5b195960921b604482015260640160405180910390fd5b50505050505050565b600054604051633749053560e21b81526001600160a01b039091169063dd2414d4906107c1908890889088908890600401610c92565b600060405180830381600087803b1580156107db57600080fd5b505af11580156107ef573d6000803e3d6000fd5b5050600054604051630441a3e760e41b815260048101889052602481018590526001600160a01b03909116925063441a3e709150604401600060405180830381600087803b15801561084057600080fd5b505af1158015610854573d6000803e3d6000fd5b505050505050505050565b600054604051633749053560e21b81526001600160a01b039091169063dd2414d490610895908a908a908a908a90600401610c92565b600060405180830381600087803b1580156108af57600080fd5b505af11580156108c3573d6000803e3d6000fd5b5050600054604051632505c3d960e01b8152600481018a90526024810187905260448101869052606481018590526001600160a01b039091169250632505c3d99150608401610296565b6001600160a01b038116811461092257600080fd5b50565b60008083601f84011261093757600080fd5b50813567ffffffffffffffff81111561094f57600080fd5b60208301915083602082850101111561096757600080fd5b9250929050565b600080600080600080600060a0888a03121561098957600080fd5b87356109948161090d565b965060208801359550604088013567ffffffffffffffff808211156109b857600080fd5b6109c48b838c01610925565b909750955060608a0135945060808a01359150808211156109e457600080fd5b506109f18a828b01610925565b989b979a50959850939692959293505050565b600080600080600080600060c0888a031215610a1f57600080fd5b8735610a2a8161090d565b965060208801359550604088013567ffffffffffffffff811115610a4d57600080fd5b610a598a828b01610925565b909650945050606088013592506080880135915060a0880135610a7b8161090d565b8091505092959891949750929550565b60008060008060008060a08789031215610aa457600080fd5b8635610aaf8161090d565b955060208701359450604087013567ffffffffffffffff811115610ad257600080fd5b610ade89828a01610925565b979a9699509760608101359660809091013595509350505050565b600080600080600080600060c0888a031215610b1457600080fd5b8735610b1f8161090d565b965060208801359550604088013567ffffffffffffffff811115610b4257600080fd5b610b4e8a828b01610925565b989b979a50986060810135976080820135975060a09091013595509350505050565b60008060008060008060a08789031215610b8957600080fd5b8635610b948161090d565b955060208701359450604087013567ffffffffffffffff811115610bb757600080fd5b610bc389828a01610925565b909550935050606087013591506080870135610bde8161090d565b809150509295509295509295565b600060208284031215610bfe57600080fd5b5035919050565b600080600080600060808688031215610c1d57600080fd5b8535610c288161090d565b945060208601359350604086013567ffffffffffffffff811115610c4b57600080fd5b610c5788828901610925565b96999598509660600135949350505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60018060a01b0385168152836020820152606060408201526000610cba606083018486610c69565b9695505050505050565b848152836020820152606060408201526000610cba606083018486610c69565b600060208284031215610cf657600080fd5b8151610d018161090d565b9392505050565b6000825160005b81811015610d295760208186018101518583015201610d0f565b50600092019182525091905056fea26469706673582212205112413fa1e6c4896f0712324421a48ee378555bb2f13d1f24f695c95adc47c564736f6c63430008110033";

type RegistrationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistrationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Registration__factory extends ContractFactory {
  constructor(...args: RegistrationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _imx: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Registration> {
    return super.deploy(_imx, overrides || {}) as Promise<Registration>;
  }
  override getDeployTransaction(
    _imx: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_imx, overrides || {});
  }
  override attach(address: string): Registration {
    return super.attach(address) as Registration;
  }
  override connect(signer: Signer): Registration__factory {
    return super.connect(signer) as Registration__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistrationInterface {
    return new utils.Interface(_abi) as RegistrationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registration {
    return new Contract(address, _abi, signerOrProvider) as Registration;
  }
}
