/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FamiliarAdmin,
  FamiliarAdminInterface,
} from "../../../contracts/G_Upgradable_NFT/FamiliarAdmin";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "fee",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "royaltyUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "deleteDefaultRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "resetTokenRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_feeNumerator",
        type: "uint96",
      },
    ],
    name: "setDefaultRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_feeNumerator",
        type: "uint96",
      },
    ],
    name: "setTokenRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ff2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301ffc9a71461006757806304634d8d146100975780632a55205a146100b35780635944c753146100e45780638a616bc014610100578063aa1b103f1461011c575b600080fd5b610081600480360381019061007c91906109ee565b610126565b60405161008e9190610a36565b60405180910390f35b6100b160048036038101906100ac9190610af3565b610190565b005b6100cd60048036038101906100c89190610b69565b6101ef565b6040516100db929190610bc7565b60405180910390f35b6100fe60048036038101906100f99190610bf0565b6103d9565b005b61011a60048036038101906101159190610c43565b610439565b005b610124610543565b005b60007f2a55205a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61019a828261059f565b8173ffffffffffffffffffffffffffffffffffffffff167fc10da2032b8388ba43414451574b17b18b976a4a2f64a289dfcfbbdf219732898260006040516101e3929190610cc4565b60405180910390a25050565b6000806000600a60008681526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16036103845760096040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff168152505090505b600061038e610734565b6bffffffffffffffffffffffff1682602001516bffffffffffffffffffffffff16866103ba9190610d1c565b6103c49190610d8d565b90508160000151819350935050509250929050565b6103e483838361073e565b8173ffffffffffffffffffffffffffffffffffffffff167fc10da2032b8388ba43414451574b17b18b976a4a2f64a289dfcfbbdf21973289828560405161042c929190610dbe565b60405180910390a2505050565b610442816108e5565b600060096040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff16815250509050806000015173ffffffffffffffffffffffffffffffffffffffff167fc10da2032b8388ba43414451574b17b18b976a4a2f64a289dfcfbbdf21973289826020015184604051610537929190610dbe565b60405180910390a25050565b61054b610944565b600073ffffffffffffffffffffffffffffffffffffffff167fc10da2032b8388ba43414451574b17b18b976a4a2f64a289dfcfbbdf21973289600080604051610595929190610e18565b60405180910390a2565b6105a7610734565b6bffffffffffffffffffffffff16816bffffffffffffffffffffffff161115610605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fc90610ec4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066b90610f30565b60405180910390fd5b60405180604001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001826bffffffffffffffffffffffff16815250600960008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055509050505050565b6000612710905090565b610746610734565b6bffffffffffffffffffffffff16816bffffffffffffffffffffffff1611156107a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079b90610ec4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080a90610f9c565b60405180910390fd5b60405180604001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001826bffffffffffffffffffffffff16815250600a600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550905050505050565b600a6000828152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a8154906bffffffffffffffffffffffff0219169055505050565b6009600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a8154906bffffffffffffffffffffffff02191690555050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6109cb81610996565b81146109d657600080fd5b50565b6000813590506109e8816109c2565b92915050565b600060208284031215610a0457610a03610991565b5b6000610a12848285016109d9565b91505092915050565b60008115159050919050565b610a3081610a1b565b82525050565b6000602082019050610a4b6000830184610a27565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7c82610a51565b9050919050565b610a8c81610a71565b8114610a9757600080fd5b50565b600081359050610aa981610a83565b92915050565b60006bffffffffffffffffffffffff82169050919050565b610ad081610aaf565b8114610adb57600080fd5b50565b600081359050610aed81610ac7565b92915050565b60008060408385031215610b0a57610b09610991565b5b6000610b1885828601610a9a565b9250506020610b2985828601610ade565b9150509250929050565b6000819050919050565b610b4681610b33565b8114610b5157600080fd5b50565b600081359050610b6381610b3d565b92915050565b60008060408385031215610b8057610b7f610991565b5b6000610b8e85828601610b54565b9250506020610b9f85828601610b54565b9150509250929050565b610bb281610a71565b82525050565b610bc181610b33565b82525050565b6000604082019050610bdc6000830185610ba9565b610be96020830184610bb8565b9392505050565b600080600060608486031215610c0957610c08610991565b5b6000610c1786828701610b54565b9350506020610c2886828701610a9a565b9250506040610c3986828701610ade565b9150509250925092565b600060208284031215610c5957610c58610991565b5b6000610c6784828501610b54565b91505092915050565b610c7981610aaf565b82525050565b6000819050919050565b6000819050919050565b6000610cae610ca9610ca484610c7f565b610c89565b610b33565b9050919050565b610cbe81610c93565b82525050565b6000604082019050610cd96000830185610c70565b610ce66020830184610cb5565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d2782610b33565b9150610d3283610b33565b9250828202610d4081610b33565b91508282048414831517610d5757610d56610ced565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d9882610b33565b9150610da383610b33565b925082610db357610db2610d5e565b5b828204905092915050565b6000604082019050610dd36000830185610c70565b610de06020830184610bb8565b9392505050565b6000610e02610dfd610df884610c7f565b610c89565b610aaf565b9050919050565b610e1281610de7565b82525050565b6000604082019050610e2d6000830185610e09565b610e3a6020830184610cb5565b9392505050565b600082825260208201905092915050565b7f455243323938313a20726f79616c7479206665652077696c6c2065786365656460008201527f2073616c65507269636500000000000000000000000000000000000000000000602082015250565b6000610eae602a83610e41565b9150610eb982610e52565b604082019050919050565b60006020820190508181036000830152610edd81610ea1565b9050919050565b7f455243323938313a20696e76616c696420726563656976657200000000000000600082015250565b6000610f1a601983610e41565b9150610f2582610ee4565b602082019050919050565b60006020820190508181036000830152610f4981610f0d565b9050919050565b7f455243323938313a20496e76616c696420706172616d65746572730000000000600082015250565b6000610f86601b83610e41565b9150610f9182610f50565b602082019050919050565b60006020820190508181036000830152610fb581610f79565b905091905056fea264697066735822122097c3169a8e249829c59913a80734b67d32c45120ce04b69317ffe8eaed4182fe64736f6c63430008110033";

type FamiliarAdminConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FamiliarAdminConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FamiliarAdmin__factory extends ContractFactory {
  constructor(...args: FamiliarAdminConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FamiliarAdmin> {
    return super.deploy(overrides || {}) as Promise<FamiliarAdmin>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FamiliarAdmin {
    return super.attach(address) as FamiliarAdmin;
  }
  override connect(signer: Signer): FamiliarAdmin__factory {
    return super.connect(signer) as FamiliarAdmin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FamiliarAdminInterface {
    return new utils.Interface(_abi) as FamiliarAdminInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FamiliarAdmin {
    return new Contract(address, _abi, signerOrProvider) as FamiliarAdmin;
  }
}
