/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AirdropClaim,
  AirdropClaimInterface,
} from "../../../contracts/B_Airdrop/AirdropClaim";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [],
    name: "airdropToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610add806100206000396000f3fe60806040526004361061007f5760003560e01c806373b2e80e1161004e57806373b2e80e146101275780637c0f1ee7146101675780638da5cb5b1461017c578063b79092fd1461019c57600080fd5b806329dcb0cf1461008e5780632eb4a7ab146100b75780633d13f874146100cd5780634d06068a146100ef57600080fd5b3661008957600080fd5b600080fd5b34801561009a57600080fd5b506100a460035481565b6040519081526020015b60405180910390f35b3480156100c357600080fd5b506100a460005481565b3480156100d957600080fd5b506100ed6100e83660046108fe565b6101bc565b005b3480156100fb57600080fd5b5060025461010f906001600160a01b031681565b6040516001600160a01b0390911681526020016100ae565b34801561013357600080fd5b50610157610142366004610988565b60046020526000908152604090205460ff1681565b60405190151581526020016100ae565b34801561017357600080fd5b506100ed6103d9565b34801561018857600080fd5b5060015461010f906001600160a01b031681565b3480156101a857600080fd5b506100ed6101b73660046109a3565b61052d565b6001600160a01b03841660009081526004602052604090205460ff161561022a5760405162461bcd60e51b815260206004820152601d60248201527f41697264726f70436c61696d3a20416c726561647920636c61696d656400000060448201526064015b60405180910390fd5b60035443111561028a5760405162461bcd60e51b815260206004820152602560248201527f41697264726f70436c61696d3a20436c61696d696e6720706572696f642065786044820152641c1a5c995960da1b6064820152608401610221565b6040516bffffffffffffffffffffffff19606086901b16602082015260348101849052600090605401604051602081830303815290604052805190602001209050600061030c84848080602002602001604051908101604052809392919081815260200183836020028082843760009201829052505492508691506105459050565b90508061035b5760405162461bcd60e51b815260206004820152601d60248201527f41697264726f70436c61696d3a20496e76616c696420416464726573730000006044820152606401610221565b6001600160a01b038087166000908152600460205260409020805460ff1916600117905560025461038e9116878761055b565b856001600160a01b03167fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a866040516103c991815260200190565b60405180910390a2505050505050565b6001546001600160a01b031633146104475760405162461bcd60e51b815260206004820152602b60248201527f41697264726f70436c61696d3a204f6e6c79206f776e65722063616e2072656360448201526a6f76657220746f6b656e7360a81b6064820152608401610221565b60035443116104a35760405162461bcd60e51b815260206004820152602260248201527f41697264726f70436c61696d3a2041697264726f70207374696c6c2061637469604482015261766560f01b6064820152608401610221565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156104ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051091906109bc565b60025490915061052a906001600160a01b0316338361055b565b50565b60025461052a906001600160a01b03163330846105c3565b6000826105528584610601565b14949350505050565b6040516001600160a01b0383166024820152604481018290526105be90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261064e565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526105fb9085906323b872dd60e01b90608401610587565b50505050565b600081815b84518110156106465761063282868381518110610625576106256109d5565b6020026020010151610720565b91508061063e816109eb565b915050610606565b509392505050565b60006106a3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107529092919063ffffffff16565b8051909150156105be57808060200190518101906106c19190610a12565b6105be5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610221565b600081831061073c57600082815260208490526040902061074b565b60008381526020839052604090205b9392505050565b60606107618484600085610769565b949350505050565b6060824710156107ca5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610221565b600080866001600160a01b031685876040516107e69190610a58565b60006040518083038185875af1925050503d8060008114610823576040519150601f19603f3d011682016040523d82523d6000602084013e610828565b606091505b509150915061083987838387610844565b979650505050505050565b606083156108b35782516000036108ac576001600160a01b0385163b6108ac5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610221565b5081610761565b61076183838151156108c85781518083602001fd5b8060405162461bcd60e51b81526004016102219190610a74565b80356001600160a01b03811681146108f957600080fd5b919050565b6000806000806060858703121561091457600080fd5b61091d856108e2565b935060208501359250604085013567ffffffffffffffff8082111561094157600080fd5b818701915087601f83011261095557600080fd5b81358181111561096457600080fd5b8860208260051b850101111561097957600080fd5b95989497505060200194505050565b60006020828403121561099a57600080fd5b61074b826108e2565b6000602082840312156109b557600080fd5b5035919050565b6000602082840312156109ce57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060018201610a0b57634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215610a2457600080fd5b8151801515811461074b57600080fd5b60005b83811015610a4f578181015183820152602001610a37565b50506000910152565b60008251610a6a818460208701610a34565b9190910192915050565b6020815260008251806020840152610a93816040850160208701610a34565b601f01601f1916919091016040019291505056fea2646970667358221220a8e8e2f41ff9ab3b06ac67671d812747ddd95e8fc3b29d995c81dc45b3a978d664736f6c63430008110033";

type AirdropClaimConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropClaimConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AirdropClaim__factory extends ContractFactory {
  constructor(...args: AirdropClaimConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AirdropClaim> {
    return super.deploy(overrides || {}) as Promise<AirdropClaim>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AirdropClaim {
    return super.attach(address) as AirdropClaim;
  }
  override connect(signer: Signer): AirdropClaim__factory {
    return super.connect(signer) as AirdropClaim__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropClaimInterface {
    return new utils.Interface(_abi) as AirdropClaimInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AirdropClaim {
    return new Contract(address, _abi, signerOrProvider) as AirdropClaim;
  }
}
