/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AirdropDemo,
  AirdropDemoInterface,
} from "../../../contracts/B_Airdrop/AirdropDemo";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "createAirdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "demoToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611344806100616000396000f3fe6080604052600436106100745760003560e01c806373b2e80e1161004e57806373b2e80e146101005780638da5cb5b1461013d578063e211158614610168578063fabed412146101a55761007e565b8063144fa6d7146100835780631b530294146100ac57806328ea6a35146100d75761007e565b3661007e57600080fd5b600080fd5b34801561008f57600080fd5b506100aa60048036038101906100a59190610a33565b6101ce565b005b3480156100b857600080fd5b506100c16102a2565b6040516100ce9190610abf565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f99190610b10565b6102c8565b005b34801561010c57600080fd5b5061012760048036038101906101229190610b69565b61030e565b6040516101349190610bb1565b60405180910390f35b34801561014957600080fd5b5061015261032e565b60405161015f9190610bdb565b60405180910390f35b34801561017457600080fd5b5061018f600480360381019061018a9190610b69565b610354565b60405161019c9190610c05565b60405180910390f35b3480156101b157600080fd5b506101cc60048036038101906101c79190610cbb565b61036c565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025590610da0565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60036020528060005260406000206000915054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156103f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f090610e0c565b60405180910390fd5b6000848460405160200161040e929190610e95565b60405160208183030381529060405280519060200120905060006104b2848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054846105f0565b9050806104f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104eb90610f0d565b60405180910390fd5b6001600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506105998686600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166106079092919063ffffffff16565b8573ffffffffffffffffffffffffffffffffffffffff167fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a866040516105df9190610f3c565b60405180910390a250505050505050565b6000826105fd858461068d565b1490509392505050565b6106888363a9059cbb60e01b8484604051602401610626929190610f57565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106e3565b505050565b60008082905060005b84518110156106d8576106c3828683815181106106b6576106b5610f80565b5b60200260200101516107aa565b915080806106d090610fde565b915050610696565b508091505092915050565b6000610745826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166107d59092919063ffffffff16565b90506000815111156107a557808060200190518101906107659190611052565b6107a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079b906110f1565b60405180910390fd5b5b505050565b60008183106107c2576107bd82846107ed565b6107cd565b6107cc83836107ed565b5b905092915050565b60606107e48484600085610804565b90509392505050565b600082600052816020526040600020905092915050565b606082471015610849576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084090611183565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516108729190611214565b60006040518083038185875af1925050503d80600081146108af576040519150601f19603f3d011682016040523d82523d6000602084013e6108b4565b606091505b50915091506108c5878383876108d1565b92505050949350505050565b6060831561093357600083510361092b576108eb85610946565b61092a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092190611277565b60405180910390fd5b5b82905061093e565b61093d8383610969565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561097c5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b091906112ec565b60405180910390fd5b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109ee826109c3565b9050919050565b6000610a00826109e3565b9050919050565b610a10816109f5565b8114610a1b57600080fd5b50565b600081359050610a2d81610a07565b92915050565b600060208284031215610a4957610a486109b9565b5b6000610a5784828501610a1e565b91505092915050565b6000819050919050565b6000610a85610a80610a7b846109c3565b610a60565b6109c3565b9050919050565b6000610a9782610a6a565b9050919050565b6000610aa982610a8c565b9050919050565b610ab981610a9e565b82525050565b6000602082019050610ad46000830184610ab0565b92915050565b6000819050919050565b610aed81610ada565b8114610af857600080fd5b50565b600081359050610b0a81610ae4565b92915050565b600060208284031215610b2657610b256109b9565b5b6000610b3484828501610afb565b91505092915050565b610b46816109e3565b8114610b5157600080fd5b50565b600081359050610b6381610b3d565b92915050565b600060208284031215610b7f57610b7e6109b9565b5b6000610b8d84828501610b54565b91505092915050565b60008115159050919050565b610bab81610b96565b82525050565b6000602082019050610bc66000830184610ba2565b92915050565b610bd5816109e3565b82525050565b6000602082019050610bf06000830184610bcc565b92915050565b610bff81610ada565b82525050565b6000602082019050610c1a6000830184610bf6565b92915050565b6000819050919050565b610c3381610c20565b8114610c3e57600080fd5b50565b600081359050610c5081610c2a565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610c7b57610c7a610c56565b5b8235905067ffffffffffffffff811115610c9857610c97610c5b565b5b602083019150836020820283011115610cb457610cb3610c60565b5b9250929050565b600080600080600060808688031215610cd757610cd66109b9565b5b6000610ce588828901610b54565b9550506020610cf688828901610b54565b9450506040610d0788828901610c41565b935050606086013567ffffffffffffffff811115610d2857610d276109be565b5b610d3488828901610c65565b92509250509295509295909350565b600082825260208201905092915050565b7f41697264726f7044656d6f3a20556e617574686f72697a656400000000000000600082015250565b6000610d8a601983610d43565b9150610d9582610d54565b602082019050919050565b60006020820190508181036000830152610db981610d7d565b9050919050565b7f41697264726f70436c61696d3a20416c726561647920636c61696d6564000000600082015250565b6000610df6601d83610d43565b9150610e0182610dc0565b602082019050919050565b60006020820190508181036000830152610e2581610de9565b9050919050565b60008160601b9050919050565b6000610e4482610e2c565b9050919050565b6000610e5682610e39565b9050919050565b610e6e610e69826109e3565b610e4b565b82525050565b6000819050919050565b610e8f610e8a82610c20565b610e74565b82525050565b6000610ea18285610e5d565b601482019150610eb18284610e7e565b6020820191508190509392505050565b7f41697264726f70436c61696d3a20496e76616c69642041646472657373000000600082015250565b6000610ef7601d83610d43565b9150610f0282610ec1565b602082019050919050565b60006020820190508181036000830152610f2681610eea565b9050919050565b610f3681610c20565b82525050565b6000602082019050610f516000830184610f2d565b92915050565b6000604082019050610f6c6000830185610bcc565b610f796020830184610f2d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fe982610c20565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361101b5761101a610faf565b5b600182019050919050565b61102f81610b96565b811461103a57600080fd5b50565b60008151905061104c81611026565b92915050565b600060208284031215611068576110676109b9565b5b60006110768482850161103d565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006110db602a83610d43565b91506110e68261107f565b604082019050919050565b6000602082019050818103600083015261110a816110ce565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061116d602683610d43565b915061117882611111565b604082019050919050565b6000602082019050818103600083015261119c81611160565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156111d75780820151818401526020810190506111bc565b60008484015250505050565b60006111ee826111a3565b6111f881856111ae565b93506112088185602086016111b9565b80840191505092915050565b600061122082846111e3565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611261601d83610d43565b915061126c8261122b565b602082019050919050565b6000602082019050818103600083015261129081611254565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b60006112be82611297565b6112c88185610d43565b93506112d88185602086016111b9565b6112e1816112a2565b840191505092915050565b6000602082019050818103600083015261130681846112b3565b90509291505056fea2646970667358221220092d8fde2268896e4abd490c891658c4c94d5a2dcbd72355ba507a07e74d202264736f6c63430008110033";

type AirdropDemoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropDemoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AirdropDemo__factory extends ContractFactory {
  constructor(...args: AirdropDemoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AirdropDemo> {
    return super.deploy(overrides || {}) as Promise<AirdropDemo>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AirdropDemo {
    return super.attach(address) as AirdropDemo;
  }
  override connect(signer: Signer): AirdropDemo__factory {
    return super.connect(signer) as AirdropDemo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropDemoInterface {
    return new utils.Interface(_abi) as AirdropDemoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AirdropDemo {
    return new Contract(address, _abi, signerOrProvider) as AirdropDemo;
  }
}
