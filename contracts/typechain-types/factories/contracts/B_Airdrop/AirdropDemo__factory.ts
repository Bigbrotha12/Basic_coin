/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AirdropDemo,
  AirdropDemoInterface,
} from "../../../contracts/B_Airdrop/AirdropDemo";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_limit",
        type: "uint256",
      },
      {
        internalType: "contract DemoToken",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "createAirdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "demoToken",
    outputs: [
      {
        internalType: "contract DemoToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "limit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DemoToken",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107f23803806107f283398101604081905261002f91610063565b600391909155600280546001600160a01b039092166001600160a01b031992831617905560018054909116331790556100a0565b6000806040838503121561007657600080fd5b825160208401519092506001600160a01b038116811461009557600080fd5b809150509250929050565b610743806100af6000396000f3fe60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610165578063a4d66daf14610185578063e2111586146101a9578063fabed412146101d657600080fd5b8063144fa6d71461008e5780631b530294146100b057806328ea6a35146100ed57806389266f601461011a57600080fd5b3661008957600080fd5b600080fd5b34801561009a57600080fd5b506100ae6100a93660046105bf565b6101f6565b005b3480156100bc57600080fd5b506002546100d0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100f957600080fd5b506100ae6101083660046105dc565b33600090815260208190526040902055565b34801561012657600080fd5b506101556101353660046105f5565b600460209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100e4565b34801561017157600080fd5b506001546100d0906001600160a01b031681565b34801561019157600080fd5b5061019b60035481565b6040519081526020016100e4565b3480156101b557600080fd5b5061019b6101c43660046105bf565b60006020819052908152604090205481565b3480156101e257600080fd5b506100ae6101f136600461062e565b610277565b6001546001600160a01b031633146102555760405162461bcd60e51b815260206004820152601a60248201527f41697264726f7044656d6f3a20556e617574686f72697a65642e00000000000060448201526064015b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0380861660009081526004602090815260408083209388168352929052205460ff16156102ed5760405162461bcd60e51b815260206004820152601d60248201527f41697264726f7044656d6f3a20416c726561647920636c61696d65642e000000604482015260640161024c565b6003548311156103555760405162461bcd60e51b815260206004820152602d60248201527f41697264726f7044656d6f3a20436c61696d20616d6f756e742067726561746560448201526c39103a3430b7103634b6b4ba1760991b606482015260840161024c565b6040516bffffffffffffffffffffffff19606086901b1660208201526034810184905260009060540160405160208183030381529060405280519060200120905060006103ec84848080602002602001604051908101604052809392919081815260200183836020028082843760009201829052506001600160a01b038d1681526020819052604090205492508691506105129050565b90508061043b5760405162461bcd60e51b815260206004820152601a60248201527f41697264726f7044656d6f3a20496e76616c696420646174612e000000000000604482015260640161024c565b6001600160a01b0387811660009081526004602081815260408084208b8616808652925292839020805460ff1916600117905560025492516308934a5f60e31b8152918201526024810188905291169063449a52f890604401600060405180830381600087803b1580156104ae57600080fd5b505af11580156104c2573d6000803e3d6000fd5b50505050856001600160a01b03167fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a8660405161050191815260200190565b60405180910390a250505050505050565b60008261051f8584610528565b14949350505050565b600081815b845181101561056d576105598286838151811061054c5761054c6106d0565b6020026020010151610575565b915080610565816106e6565b91505061052d565b509392505050565b60008183106105915760008281526020849052604090206105a0565b60008381526020839052604090205b9392505050565b6001600160a01b03811681146105bc57600080fd5b50565b6000602082840312156105d157600080fd5b81356105a0816105a7565b6000602082840312156105ee57600080fd5b5035919050565b6000806040838503121561060857600080fd5b8235610613816105a7565b91506020830135610623816105a7565b809150509250929050565b60008060008060006080868803121561064657600080fd5b8535610651816105a7565b94506020860135610661816105a7565b935060408601359250606086013567ffffffffffffffff8082111561068557600080fd5b818801915088601f83011261069957600080fd5b8135818111156106a857600080fd5b8960208260051b85010111156106bd57600080fd5b9699959850939650602001949392505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161070657634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220e5f6092f2d0bca909932f0f069b8c8201259aefe86f9cfcae87fa0b91d991b0564736f6c63430008110033";

type AirdropDemoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropDemoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AirdropDemo__factory extends ContractFactory {
  constructor(...args: AirdropDemoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _limit: PromiseOrValue<BigNumberish>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AirdropDemo> {
    return super.deploy(
      _limit,
      _token,
      overrides || {}
    ) as Promise<AirdropDemo>;
  }
  override getDeployTransaction(
    _limit: PromiseOrValue<BigNumberish>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_limit, _token, overrides || {});
  }
  override attach(address: string): AirdropDemo {
    return super.attach(address) as AirdropDemo;
  }
  override connect(signer: Signer): AirdropDemo__factory {
    return super.connect(signer) as AirdropDemo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropDemoInterface {
    return new utils.Interface(_abi) as AirdropDemoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AirdropDemo {
    return new Contract(address, _abi, signerOrProvider) as AirdropDemo;
  }
}
