/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TestCoordinator,
  TestCoordinatorInterface,
} from "../../../../contracts/D_Oracle_Contract/TestCoordinator.sol/TestCoordinator";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_queryId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_desiredResult",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "answerTestQuery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "subId",
        type: "uint64",
      },
      {
        internalType: "uint16",
        name: "minimumRequestConfirmations",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "callbackGasLimit",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "numWords",
        type: "uint32",
      },
    ],
    name: "requestRandomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "result",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061061b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633c5940591461004657806350ed4275146100765780635d3b1d3014610092575b600080fd5b610060600480360381019061005b9190610209565b6100c2565b60405161006d9190610245565b60405180910390f35b610090600480360381019061008b91906102be565b6100e6565b005b6100ac60048036038101906100a791906103fd565b6101be565b6040516100b99190610245565b60405180910390f35b600081815481106100d257600080fd5b906000526020600020016000915090505481565b600081905060008080549050111561012057826000808154811061010d5761010c610478565b5b906000526020600020018190555061014a565b60008390806001815401808255809150506001900390600052602060002001600090919091909150555b8073ffffffffffffffffffffffffffffffffffffffff16631fe543e38560006040518363ffffffff1660e01b81526004016101869291906105b5565b600060405180830381600087803b1580156101a057600080fd5b505af11580156101b4573d6000803e3d6000fd5b5050505050505050565b60006101f4905095945050505050565b600080fd5b6000819050919050565b6101e6816101d3565b81146101f157600080fd5b50565b600081359050610203816101dd565b92915050565b60006020828403121561021f5761021e6101ce565b5b600061022d848285016101f4565b91505092915050565b61023f816101d3565b82525050565b600060208201905061025a6000830184610236565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061028b82610260565b9050919050565b61029b81610280565b81146102a657600080fd5b50565b6000813590506102b881610292565b92915050565b6000806000606084860312156102d7576102d66101ce565b5b60006102e5868287016101f4565b93505060206102f6868287016101f4565b9250506040610307868287016102a9565b9150509250925092565b6000819050919050565b61032481610311565b811461032f57600080fd5b50565b6000813590506103418161031b565b92915050565b600067ffffffffffffffff82169050919050565b61036481610347565b811461036f57600080fd5b50565b6000813590506103818161035b565b92915050565b600061ffff82169050919050565b61039e81610387565b81146103a957600080fd5b50565b6000813590506103bb81610395565b92915050565b600063ffffffff82169050919050565b6103da816103c1565b81146103e557600080fd5b50565b6000813590506103f7816103d1565b92915050565b600080600080600060a08688031215610419576104186101ce565b5b600061042788828901610332565b955050602061043888828901610372565b9450506040610449888289016103ac565b935050606061045a888289016103e8565b925050608061046b888289016103e8565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081549050919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b6104e1816101d3565b82525050565b60006104f383836104d8565b60208301905092915050565b60008160001c9050919050565b6000819050919050565b6000610529610524836104ff565b61050c565b9050919050565b600061053c8254610516565b9050919050565b6000600182019050919050565b600061055b826104a7565b61056581856104b2565b9350610570836104c3565b8060005b838110156105a85761058582610530565b61058f88826104e7565b975061059a83610543565b925050600181019050610574565b5085935050505092915050565b60006040820190506105ca6000830185610236565b81810360208301526105dc8184610550565b9050939250505056fea26469706673582212201474556adf579aba8120bde9c932c2f23051a79e9a9f1608fa4bc91d5925c66664736f6c63430008110033";

type TestCoordinatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestCoordinatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestCoordinator__factory extends ContractFactory {
  constructor(...args: TestCoordinatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestCoordinator> {
    return super.deploy(overrides || {}) as Promise<TestCoordinator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestCoordinator {
    return super.attach(address) as TestCoordinator;
  }
  override connect(signer: Signer): TestCoordinator__factory {
    return super.connect(signer) as TestCoordinator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestCoordinatorInterface {
    return new utils.Interface(_abi) as TestCoordinatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestCoordinator {
    return new Contract(address, _abi, signerOrProvider) as TestCoordinator;
  }
}
