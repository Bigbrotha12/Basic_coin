/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CoinFlipper,
  CoinFlipperInterface,
} from "../../../contracts/D_Oracle_Contract/CoinFlipper";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_subscriptionId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "betPaidOut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "betPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "fundsReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "logNewQuery",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_result",
        type: "uint256",
      },
    ],
    name: "randomNumber",
    type: "event",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "getPlayerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReservedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "payOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "placeBet",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "playerQuery",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "awaitingQuery",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reservedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DemoToken",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startCoinFlip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract DemoToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620021673803806200216783398181016040528101906200003791906200027a565b80620000586200004c620000ff60201b60201c565b6200010760201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050620002c1565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600067ffffffffffffffff82169050919050565b620001ef81620001d0565b8114620001fb57600080fd5b50565b6000815190506200020f81620001e4565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002428262000215565b9050919050565b620002548162000235565b81146200026057600080fd5b50565b600081519050620002748162000249565b92915050565b60008060408385031215620002945762000293620001cb565b5b6000620002a485828601620001fe565b9250506020620002b78582860162000263565b9150509250929050565b608051611e83620002e46000396000818161075f01526107b30152611e836000f3fe6080604052600436106100e85760003560e01c8063bf402cf31161008a578063e2eb41ff11610059578063e2eb41ff146102c1578063f2fde38b146102ff578063f334c2eb14610328578063fc0c546a1461033f576100e8565b8063bf402cf3146101f3578063d9a1554914610230578063da333ca61461025b578063e2734c9314610284576100e8565b80631fe543e3116100c65780631fe543e31461015d578063715018a6146101865780638da5cb5b1461019d578063a1aabda6146101c8576100e8565b806310fe7c48146100ed57806312065fe014610109578063144fa6d714610134575b600080fd5b61010760048036038101906101029190611393565b61036a565b005b34801561011557600080fd5b5061011e61066e565b60405161012b91906113cf565b60405180910390f35b34801561014057600080fd5b5061015b6004803603810190610156919061145a565b610711565b005b34801561016957600080fd5b50610184600480360381019061017f91906115e0565b61075d565b005b34801561019257600080fd5b5061019b61081d565b005b3480156101a957600080fd5b506101b2610831565b6040516101bf919061164b565b60405180910390f35b3480156101d457600080fd5b506101dd61085a565b6040516101ea91906113cf565b60405180910390f35b3480156101ff57600080fd5b5061021a60048036038101906102159190611393565b610860565b604051610227919061164b565b60405180910390f35b34801561023c57600080fd5b50610245610893565b60405161025291906113cf565b60405180910390f35b34801561026757600080fd5b50610282600480360381019061027d9190611393565b61089d565b005b34801561029057600080fd5b506102ab60048036038101906102a69190611692565b610b04565b6040516102b891906113cf565b60405180910390f35b3480156102cd57600080fd5b506102e860048036038101906102e39190611692565b610b50565b6040516102f69291906116da565b60405180910390f35b34801561030b57600080fd5b5061032660048036038101906103219190611692565b610b81565b005b34801561033457600080fd5b5061033d610c04565b005b34801561034b57600080fd5b50610354610f37565b6040516103619190611762565b60405180910390f35b60018110156103ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a590611800565b60405180910390fd5b80600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161040a919061164b565b602060405180830381865afa158015610427573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044b9190611835565b101561048c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610483906118ae565b60405180910390fd5b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff161561051c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051390611940565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379cc679033836040518363ffffffff1660e01b8152600401610579929190611960565b600060405180830381600087803b15801561059357600080fd5b505af11580156105a7573d6000803e3d6000fd5b5050505080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546105fd91906119b8565b92505081905550806002600082825461061691906119b8565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fd851eb5d36e0cdf525e06242299d6ac2548f7de9057acbdc8ae457444612169a8260405161066391906113cf565b60405180910390a250565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106cb919061164b565b602060405180830381865afa1580156106e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070c9190611835565b905090565b610719610f5d565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461080f57337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016108069291906119ec565b60405180910390fd5b6108198282610fdb565b5050565b610825610f5d565b61082f600061127d565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154811115610922576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091990611a87565b60405180910390fd5b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16156109b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a990611940565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610a049190611aa7565b925050819055508060026000828254610a1d9190611aa7565b92505081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663449a52f833836040518363ffffffff1660e01b8152600401610a81929190611960565b600060405180830381600087803b158015610a9b57600080fd5b505af1158015610aaf573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fc7a9a103f9a82c916fbbaf86c7ac5f08a148bba81e940a295633f0c44371e6c582604051610af991906113cf565b60405180910390a250565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b60046020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16905082565b610b89610f5d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bf8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bef90611b4d565b60405180910390fd5b610c018161127d565b50565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615610c94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8b90611940565b60405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506001811015610d1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1690611bb9565b60405180910390fd5b6001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055508060026000828254610d8c91906119b8565b9250508190555060007f79d3d8832d904592c0bf9818b621522c988bb8b0c05cdc3b15aea1b6e8db0c1560001b9050600060039050600062030d4090506000600190506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d3b1d3086600160149054906101000a900467ffffffffffffffff168787876040518663ffffffff1660e01b8152600401610e4a959493929190611c51565b6020604051808303816000875af1158015610e69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8d9190611835565b9050336003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f50c4464f23440d595acf2028444b0b0f289a83e75ba45e33c19edad171aca1e382604051610f2791906113cf565b60405180910390a2505050505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610f65611341565b73ffffffffffffffffffffffffffffffffffffffff16610f83610831565b73ffffffffffffffffffffffffffffffffffffffff1614610fd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd090611cf0565b60405180910390fd5b565b60006003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff166110a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109990611d5c565b60405180910390fd5b60006002836000815181106110ba576110b9611d7c565b5b60200260200101516110cc9190611dda565b90506000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050600182036111755760028161112a9190611e0b565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506111e3565b6002816111829190611e0b565b600260008282546111939190611aa7565b925050819055506000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550847f116f6c045d9bde73d6ca74afb30bafbc2a69df98520beec5d66809c514549dde8360405161126e91906113cf565b60405180910390a25050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6113708161135d565b811461137b57600080fd5b50565b60008135905061138d81611367565b92915050565b6000602082840312156113a9576113a8611353565b5b60006113b78482850161137e565b91505092915050565b6113c98161135d565b82525050565b60006020820190506113e460008301846113c0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611415826113ea565b9050919050565b60006114278261140a565b9050919050565b6114378161141c565b811461144257600080fd5b50565b6000813590506114548161142e565b92915050565b6000602082840312156114705761146f611353565b5b600061147e84828501611445565b91505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114d58261148c565b810181811067ffffffffffffffff821117156114f4576114f361149d565b5b80604052505050565b6000611507611349565b905061151382826114cc565b919050565b600067ffffffffffffffff8211156115335761153261149d565b5b602082029050602081019050919050565b600080fd5b600061155c61155784611518565b6114fd565b9050808382526020820190506020840283018581111561157f5761157e611544565b5b835b818110156115a85780611594888261137e565b845260208401935050602081019050611581565b5050509392505050565b600082601f8301126115c7576115c6611487565b5b81356115d7848260208601611549565b91505092915050565b600080604083850312156115f7576115f6611353565b5b60006116058582860161137e565b925050602083013567ffffffffffffffff81111561162657611625611358565b5b611632858286016115b2565b9150509250929050565b6116458161140a565b82525050565b6000602082019050611660600083018461163c565b92915050565b61166f8161140a565b811461167a57600080fd5b50565b60008135905061168c81611666565b92915050565b6000602082840312156116a8576116a7611353565b5b60006116b68482850161167d565b91505092915050565b60008115159050919050565b6116d4816116bf565b82525050565b60006040820190506116ef60008301856113c0565b6116fc60208301846116cb565b9392505050565b6000819050919050565b600061172861172361171e846113ea565b611703565b6113ea565b9050919050565b600061173a8261170d565b9050919050565b600061174c8261172f565b9050919050565b61175c81611741565b82525050565b60006020820190506117776000830184611753565b92915050565b600082825260208201905092915050565b7f436f696e466c69707065723a204d696e696d756d20626574206973203120444560008201527f4d4f000000000000000000000000000000000000000000000000000000000000602082015250565b60006117ea60228361177d565b91506117f58261178e565b604082019050919050565b60006020820190508181036000830152611819816117dd565b9050919050565b60008151905061182f81611367565b92915050565b60006020828403121561184b5761184a611353565b5b600061185984828501611820565b91505092915050565b7f436f696e466c69707065723a20496e73756666696369656e742066756e647300600082015250565b6000611898601f8361177d565b91506118a382611862565b602082019050919050565b600060208201905081810360008301526118c78161188b565b9050919050565b7f436f696e466c69707065723a20436f696e20666c697020696e2070726f67726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061192a60228361177d565b9150611935826118ce565b604082019050919050565b600060208201905081810360008301526119598161191d565b9050919050565b6000604082019050611975600083018561163c565b61198260208301846113c0565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119c38261135d565b91506119ce8361135d565b92508282019050808211156119e6576119e5611989565b5b92915050565b6000604082019050611a01600083018561163c565b611a0e602083018461163c565b9392505050565b7f436f696e466c69707065723a20496e76616c696420776974686472617720616d60008201527f6f756e7400000000000000000000000000000000000000000000000000000000602082015250565b6000611a7160248361177d565b9150611a7c82611a15565b604082019050919050565b60006020820190508181036000830152611aa081611a64565b9050919050565b6000611ab28261135d565b9150611abd8361135d565b9250828203905081811115611ad557611ad4611989565b5b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611b3760268361177d565b9150611b4282611adb565b604082019050919050565b60006020820190508181036000830152611b6681611b2a565b9050919050565b7f436f696e466c69707065723a2042657420726571756972656400000000000000600082015250565b6000611ba360198361177d565b9150611bae82611b6d565b602082019050919050565b60006020820190508181036000830152611bd281611b96565b9050919050565b6000819050919050565b611bec81611bd9565b82525050565b600067ffffffffffffffff82169050919050565b611c0f81611bf2565b82525050565b600061ffff82169050919050565b611c2c81611c15565b82525050565b600063ffffffff82169050919050565b611c4b81611c32565b82525050565b600060a082019050611c666000830188611be3565b611c736020830187611c06565b611c806040830186611c23565b611c8d6060830185611c42565b611c9a6080830184611c42565b9695505050505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611cda60208361177d565b9150611ce582611ca4565b602082019050919050565b60006020820190508181036000830152611d0981611ccd565b9050919050565b7f436f696e466c69707065723a20556e736f6c6963697465642071756572790000600082015250565b6000611d46601e8361177d565b9150611d5182611d10565b602082019050919050565b60006020820190508181036000830152611d7581611d39565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611de58261135d565b9150611df08361135d565b925082611e0057611dff611dab565b5b828206905092915050565b6000611e168261135d565b9150611e218361135d565b9250828202611e2f8161135d565b91508282048414831517611e4657611e45611989565b5b509291505056fea26469706673582212204d16d7b172c3fffae6f33c60b7c050c8b2d41863e00e9f631a954222f87a5c9364736f6c63430008110033";

type CoinFlipperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CoinFlipperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CoinFlipper__factory extends ContractFactory {
  constructor(...args: CoinFlipperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _subscriptionId: PromiseOrValue<BigNumberish>,
    _vrfCoordinator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CoinFlipper> {
    return super.deploy(
      _subscriptionId,
      _vrfCoordinator,
      overrides || {}
    ) as Promise<CoinFlipper>;
  }
  override getDeployTransaction(
    _subscriptionId: PromiseOrValue<BigNumberish>,
    _vrfCoordinator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _subscriptionId,
      _vrfCoordinator,
      overrides || {}
    );
  }
  override attach(address: string): CoinFlipper {
    return super.attach(address) as CoinFlipper;
  }
  override connect(signer: Signer): CoinFlipper__factory {
    return super.connect(signer) as CoinFlipper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoinFlipperInterface {
    return new utils.Interface(_abi) as CoinFlipperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoinFlipper {
    return new Contract(address, _abi, signerOrProvider) as CoinFlipper;
  }
}
