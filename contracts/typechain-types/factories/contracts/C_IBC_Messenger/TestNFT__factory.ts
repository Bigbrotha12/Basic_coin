/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestNFT,
  TestNFTInterface,
} from "../../../contracts/C_IBC_Messenger/TestNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "IBC_ENDPOINT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ibc",
        type: "address",
      },
    ],
    name: "initEndpoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200183938038062001839833981016040819052620000349162000123565b818160006200004483826200021c565b5060016200005382826200021c565b5050505050620002e8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b600093810190920192909252949350505050565b600080604083850312156200013757600080fd5b82516001600160401b03808211156200014f57600080fd5b6200015d8683870162000074565b935060208501519150808211156200017457600080fd5b50620001838582860162000074565b9150509250929050565b600181811c90821680620001a257607f821691505b602082108103620001c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021757600081815260208120601f850160051c81016020861015620001f25750805b601f850160051c820191505b818110156200021357828155600101620001fe565b5050505b505050565b81516001600160401b038111156200023857620002386200005e565b62000250816200024984546200018d565b84620001c9565b602080601f8311600181146200028857600084156200026f5750858301515b600019600386901b1c1916600185901b17855562000213565b600085815260208120601f198616915b82811015620002b95788860151825594840194600190910190840162000298565b5085821015620002d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61154180620002f86000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806342842e0e116100a257806395d89b411161007157806395d89b4114610250578063a22cb46514610258578063b88d4fde1461026b578063c87b56dd1461027e578063e985e9c51461029157600080fd5b806342842e0e146101f657806342966c68146102095780636352211e1461021c57806370a082311461022f57600080fd5b8063095ea7b3116100de578063095ea7b31461018b57806323b872dd146101a0578063258e99ab146101b357806340c10f19146101e357600080fd5b806301ffc9a71461011057806303b974aa1461013857806306fdde0314610163578063081812fc14610178575b600080fd5b61012361011e366004611091565b6102a4565b60405190151581526020015b60405180910390f35b60065461014b906001600160a01b031681565b6040516001600160a01b03909116815260200161012f565b61016b6102f6565b60405161012f91906110fe565b61014b610186366004611111565b610388565b61019e610199366004611146565b6103af565b005b61019e6101ae366004611170565b6104c9565b61019e6101c13660046111ac565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b61019e6101f1366004611146565b6104fa565b61019e610204366004611170565b61055a565b61019e610217366004611111565b610575565b61014b61022a366004611111565b6105d3565b61024261023d3660046111ac565b610633565b60405190815260200161012f565b61016b6106b9565b61019e6102663660046111c7565b6106c8565b61019e610279366004611219565b6106d3565b61016b61028c366004611111565b61070b565b61012361029f3660046112f5565b61077f565b60006001600160e01b031982166380ac58cd60e01b14806102d557506001600160e01b03198216635b5e139f60e01b145b806102f057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461030590611328565b80601f016020809104026020016040519081016040528092919081815260200182805461033190611328565b801561037e5780601f106103535761010080835404028352916020019161037e565b820191906000526020600020905b81548152906001019060200180831161036157829003601f168201915b5050505050905090565b6000610393826107ad565b506000908152600460205260409020546001600160a01b031690565b60006103ba826105d3565b9050806001600160a01b0316836001600160a01b03160361042c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104485750610448813361077f565b6104ba5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610423565b6104c4838361080c565b505050565b6104d3338261087a565b6104ef5760405162461bcd60e51b815260040161042390611362565b6104c48383836108d9565b6006546001600160a01b0316331461054c5760405162461bcd60e51b815260206004820152601560248201527415195cdd1391950e88155b985d5d1a1bdc9a5e9959605a1b6044820152606401610423565b6105568282610a4a565b5050565b6104c4838383604051806020016040528060008152506106d3565b6006546001600160a01b031633146105c75760405162461bcd60e51b815260206004820152601560248201527415195cdd1391950e88155b985d5d1a1bdc9a5e9959605a1b6044820152606401610423565b6105d081610be3565b50565b6000818152600260205260408120546001600160a01b0316806102f05760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610423565b60006001600160a01b03821661069d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610423565b506001600160a01b031660009081526003602052604090205490565b60606001805461030590611328565b610556338383610c86565b6106dd338361087a565b6106f95760405162461bcd60e51b815260040161042390611362565b61070584848484610d54565b50505050565b6060610716826107ad565b600061072d60408051602081019091526000815290565b9050600081511161074d5760405180602001604052806000815250610778565b8061075784610d87565b6040516020016107689291906113af565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260409020546001600160a01b03166105d05760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610423565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610841826105d3565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610886836105d3565b9050806001600160a01b0316846001600160a01b031614806108ad57506108ad818561077f565b806108d15750836001600160a01b03166108c684610388565b6001600160a01b0316145b949350505050565b826001600160a01b03166108ec826105d3565b6001600160a01b0316146109125760405162461bcd60e51b8152600401610423906113de565b6001600160a01b0382166109745760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610423565b6109818383836001610e1a565b826001600160a01b0316610994826105d3565b6001600160a01b0316146109ba5760405162461bcd60e51b8152600401610423906113de565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610aa05760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610423565b6000818152600260205260409020546001600160a01b031615610b055760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610423565b610b13600083836001610e1a565b6000818152600260205260409020546001600160a01b031615610b785760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610423565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000610bee826105d3565b9050610bfe816000846001610e1a565b610c07826105d3565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b816001600160a01b0316836001600160a01b031603610ce75760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610423565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610d5f8484846108d9565b610d6b84848484610ea2565b6107055760405162461bcd60e51b815260040161042390611423565b60606000610d9483610fa3565b600101905060008167ffffffffffffffff811115610db457610db4611203565b6040519080825280601f01601f191660200182016040528015610dde576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610de857509392505050565b6001811115610705576001600160a01b03841615610e60576001600160a01b03841660009081526003602052604081208054839290610e5a90849061148b565b90915550505b6001600160a01b03831615610705576001600160a01b03831660009081526003602052604081208054839290610e9790849061149e565b909155505050505050565b60006001600160a01b0384163b15610f9857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610ee69033908990889088906004016114b1565b6020604051808303816000875af1925050508015610f21575060408051601f3d908101601f19168201909252610f1e918101906114ee565b60015b610f7e573d808015610f4f576040519150601f19603f3d011682016040523d82523d6000602084013e610f54565b606091505b508051600003610f765760405162461bcd60e51b815260040161042390611423565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108d1565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610fe25772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061100e576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061102c57662386f26fc10000830492506010015b6305f5e1008310611044576305f5e100830492506008015b612710831061105857612710830492506004015b6064831061106a576064830492506002015b600a83106102f05760010192915050565b6001600160e01b0319811681146105d057600080fd5b6000602082840312156110a357600080fd5b81356107788161107b565b60005b838110156110c95781810151838201526020016110b1565b50506000910152565b600081518084526110ea8160208601602086016110ae565b601f01601f19169290920160200192915050565b60208152600061077860208301846110d2565b60006020828403121561112357600080fd5b5035919050565b80356001600160a01b038116811461114157600080fd5b919050565b6000806040838503121561115957600080fd5b6111628361112a565b946020939093013593505050565b60008060006060848603121561118557600080fd5b61118e8461112a565b925061119c6020850161112a565b9150604084013590509250925092565b6000602082840312156111be57600080fd5b6107788261112a565b600080604083850312156111da57600080fd5b6111e38361112a565b9150602083013580151581146111f857600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561122f57600080fd5b6112388561112a565b93506112466020860161112a565b925060408501359150606085013567ffffffffffffffff8082111561126a57600080fd5b818701915087601f83011261127e57600080fd5b81358181111561129057611290611203565b604051601f8201601f19908116603f011681019083821181831017156112b8576112b8611203565b816040528281528a60208487010111156112d157600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561130857600080fd5b6113118361112a565b915061131f6020840161112a565b90509250929050565b600181811c9082168061133c57607f821691505b60208210810361135c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600083516113c18184602088016110ae565b8351908301906113d58183602088016110ae565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156102f0576102f0611475565b808201808211156102f0576102f0611475565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906114e4908301846110d2565b9695505050505050565b60006020828403121561150057600080fd5b81516107788161107b56fea26469706673582212201e5e49775098661857ce6b66eb20f8fcb0eeec2ba7317daa57427883accebbc864736f6c63430008110033";

type TestNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestNFT__factory extends ContractFactory {
  constructor(...args: TestNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestNFT> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<TestNFT>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): TestNFT {
    return super.attach(address) as TestNFT;
  }
  override connect(signer: Signer): TestNFT__factory {
    return super.connect(signer) as TestNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestNFTInterface {
    return new utils.Interface(_abi) as TestNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestNFT {
    return new Contract(address, _abi, signerOrProvider) as TestNFT;
  }
}
