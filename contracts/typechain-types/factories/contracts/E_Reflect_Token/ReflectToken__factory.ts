/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ReflectToken,
  ReflectTokenInterface,
} from "../../../contracts/E_Reflect_Token/ReflectToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_marketing",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_acquisition",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_newAddress",
        type: "address",
      },
    ],
    name: "changeAcquisition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newAddress",
        type: "address",
      },
    ],
    name: "changeMarketing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "excludeAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getAcquisitionWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarketingWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "includeAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "isExcludedAct",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_exchangePair",
        type: "address",
      },
    ],
    name: "removeExchange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_reflectFee",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_marketingFee",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_acquisitionFee",
        type: "uint8",
      },
    ],
    name: "setBuyFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_exchangePair",
        type: "address",
      },
    ],
    name: "setExchange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_reflectFees",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_marketingFees",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_acquisitionFees",
        type: "uint8",
      },
    ],
    name: "setSellFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rAmount",
        type: "uint256",
      },
    ],
    name: "tokenFromReflection",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620029fc380380620029fc8339810160408190526200003491620005da565b848460036200004483826200078c565b5060046200005382826200078c565b50506005805460ff19169055506200006b336200048d565b62000079836127106200086e565b600a8190556200008c90600019620008a4565b6200009a90600019620008bb565b600b556014805465ffffffffffff191665030105070101179055600d80546001600160a01b0319166001600160a01b03841617905560005b60058110156200014357818181518110620000f157620000f1620008d1565b6020026020010151600e82600581106200010f576200010f620008d1565b0180546001600160a01b0319166001600160a01b0392909216919091179055806200013a81620008e7565b915050620000d2565b506064600a54605f6200015791906200086e565b62000163919062000903565b3360009081526007602052604081208054909190620001849084906200091a565b9091555050600b546200019a9060649062000903565b620001a790605f6200086e565b3360009081526006602052604081208054909190620001c89084906200091a565b9091555050336000818152600760209081526040808320549051908152600080516020620029dc833981519152910160405180910390a36064600a5460026200021291906200086e565b6200021e919062000903565b600d546001600160a01b0316600090815260076020526040812080549091906200024a9084906200091a565b9091555050600b54620002609060649062000903565b6200026d9060026200086e565b600d546001600160a01b031660009081526006602052604081208054909190620002999084906200091a565b9091555050600d54600a546001600160a01b0390911690600090600080516020620029dc83398151915290606490620002d49060026200086e565b620002e0919062000903565b60405190815260200160405180910390a360005b6005811015620004815760056064600a5460036200031391906200086e565b6200031f919062000903565b6200032b919062000903565b60076000600e8460058110620003455762000345620008d1565b01546001600160a01b03168152602081019190915260400160009081208054909190620003749084906200091a565b9091555050600b546005906200038d9060649062000903565b6200039a9060036200086e565b620003a6919062000903565b60066000600e8460058110620003c057620003c0620008d1565b01546001600160a01b03168152602081019190915260400160009081208054909190620003ef9084906200091a565b90915550600e905081600581106200040b576200040b620008d1565b0154600a546001600160a01b0390911690600090600080516020620029dc83398151915290600590606490620004439060036200086e565b6200044f919062000903565b6200045b919062000903565b60405190815260200160405180910390a3806200047881620008e7565b915050620002f4565b50505050505062000930565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620005285762000528620004e7565b604052919050565b600082601f8301126200054257600080fd5b81516001600160401b038111156200055e576200055e620004e7565b602062000574601f8301601f19168201620004fd565b82815285828487010111156200058957600080fd5b60005b83811015620005a95785810183015182820184015282016200058c565b506000928101909101919091529392505050565b80516001600160a01b0381168114620005d557600080fd5b919050565b600080600080600060a08688031215620005f357600080fd5b85516001600160401b03808211156200060b57600080fd5b6200061989838a0162000530565b96506020915081880151818111156200063157600080fd5b6200063f8a828b0162000530565b965050604088015194506200065760608901620005bd565b93506080880151818111156200066c57600080fd5b8801601f81018a136200067e57600080fd5b805182811115620006935762000693620004e7565b8060051b9250620006a6848401620004fd565b818152928201840192848101908c851115620006c157600080fd5b928501925b84841015620006ea57620006da84620005bd565b82529285019290850190620006c6565b8096505050505050509295509295909350565b600181811c908216806200071257607f821691505b6020821081036200073357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200078757600081815260208120601f850160051c81016020861015620007625750805b601f850160051c820191505b8181101562000783578281556001016200076e565b5050505b505050565b81516001600160401b03811115620007a857620007a8620004e7565b620007c081620007b98454620006fd565b8462000739565b602080601f831160018114620007f85760008415620007df5750858301515b600019600386901b1c1916600185901b17855562000783565b600085815260208120601f198616915b82811015620008295788860151825594840194600190910190840162000808565b5085821015620008485787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141762000888576200088862000858565b92915050565b634e487b7160e01b600052601260045260246000fd5b600082620008b657620008b66200088e565b500690565b8181038181111562000888576200088862000858565b634e487b7160e01b600052603260045260246000fd5b600060018201620008fc57620008fc62000858565b5060010190565b6000826200091557620009156200088e565b500490565b8082018082111562000888576200088862000858565b61209c80620009406000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80638893d39011610104578063a9059cbb116100a2578063e22b62de11610071578063e22b62de146103d4578063f2cc0c18146103e7578063f2fde38b146103fa578063f84354f11461040d57600080fd5b8063a9059cbb14610393578063b0872744146103a6578063bca7a9e2146103b9578063dd62ed3e146103c157600080fd5b80638dccb26c116100de5780638dccb26c146103525780638e0be3691461036557806395d89b4114610378578063a457c2d71461038057600080fd5b80638893d390146102fd5780638d7dd837146103295780638da5cb5b1461033c57600080fd5b80632d8381191161017c5780635c975abb1161014b5780635c975abb146102c457806367b1f5df146102cf57806370a08231146102e2578063715018a6146102f557600080fd5b80632d8381191461027c578063313ce5671461028f578063395093511461029e57806350be7cdb146102b157600080fd5b806318160ddd116101b857806318160ddd1461023257806318a24b5b1461023a5780631d4e49eb1461024457806323b872dd1461026957600080fd5b806306fdde03146101df578063095ea7b3146101fd57806313114a9d14610220575b600080fd5b6101e7610420565b6040516101f49190611ceb565b60405180910390f35b61021061020b366004611d55565b6104b2565b60405190151581526020016101f4565b600c545b6040519081526020016101f4565b600a54610224565b6102426104cc565b005b600d546001600160a01b03165b6040516001600160a01b0390911681526020016101f4565b610210610277366004611d7f565b6104de565b61022461028a366004611dbb565b610502565b604051600481526020016101f4565b6102106102ac366004611d55565b610586565b6102426102bf366004611de5565b6105a8565b60055460ff16610210565b6102426102dd366004611e28565b61061d565b6102246102f0366004611e28565b6106c2565b610242610721565b61021061030b366004611e28565b6001600160a01b031660009081526008602052604090205460ff1690565b610242610337366004611e28565b610733565b60055461010090046001600160a01b0316610251565b610242610360366004611e43565b610783565b610242610373366004611e28565b610843565b6101e76108e0565b61021061038e366004611d55565b6108ef565b6102106103a1366004611d55565b61096a565b6102516103b4366004611dbb565b610978565b6102426109de565b6102246103cf366004611e6f565b6109ee565b6102426103e2366004611de5565b610a19565b6102426103f5366004611e28565b610aa6565b610242610408366004611e28565b610c12565b61024261041b366004611e28565b610c8b565b60606003805461042f90611e99565b80601f016020809104026020016040519081016040528092919081815260200182805461045b90611e99565b80156104a85780601f1061047d576101008083540402835291602001916104a8565b820191906000526020600020905b81548152906001019060200180831161048b57829003601f168201915b5050505050905090565b6000336104c0818585610e36565b60019150505b92915050565b6104d4610f5a565b6104dc610fba565b565b6000336104ec85828561100c565b6104f7858585611086565b506001949350505050565b6000600b548211156105695760405162461bcd60e51b815260206004820152602560248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c20736044820152647570706c7960d81b60648201526084015b60405180910390fd5b6000610573611292565b905061057f8184611ee9565b9392505050565b6000336104c081858561059983836109ee565b6105a39190611f0b565b610e36565b6105b0610f5a565b6064816105bd8486611f1e565b6105c79190611f1e565b60ff16106105e75760405162461bcd60e51b815260040161056090611f37565b6014805460ff94851661ffff1990911617610100938516939093029290921762ff00001916620100009190931602919091179055565b610625610f5a565b6001600160a01b03811660009081526013602052604090205460ff161561069e5760405162461bcd60e51b815260206004820152602760248201527f4665654f6e5472616e736665723a204164647265737320616c72656164792045604482015266786368616e676560c81b6064820152608401610560565b6001600160a01b03166000908152601360205260409020805460ff19166001179055565b6001600160a01b03811660009081526008602052604081205460ff16156106ff57506001600160a01b031660009081526007602052604090205490565b6001600160a01b0382166000908152600660205260409020546104c690610502565b610729610f5a565b6104dc60006112b5565b61073b610f5a565b6001600160a01b0381166107615760405162461bcd60e51b815260040161056090611f94565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b61078b610f5a565b600582106107e65760405162461bcd60e51b815260206004820152602260248201527f4665654f6e5472616e736665723a20496e76616c696420696e6465782076616c604482015261756560f01b6064820152608401610560565b6001600160a01b03811661080c5760405162461bcd60e51b815260040161056090611f94565b80600e836005811061082057610820611fe1565b0180546001600160a01b0319166001600160a01b03929092169190911790555050565b61084b610f5a565b6001600160a01b03811660009081526013602052604090205460ff166108bf5760405162461bcd60e51b815260206004820152602360248201527f4665654f6e5472616e736665723a2041646472657373206e6f742045786368616044820152626e676560e81b6064820152608401610560565b6001600160a01b03166000908152601360205260409020805460ff19169055565b60606004805461042f90611e99565b600033816108fd82866109ee565b90508381101561095d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610560565b6104f78286868403610e36565b6000336104c0818585611086565b6000600582106109ba5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610560565b600e82600581106109cd576109cd611fe1565b01546001600160a01b031692915050565b6109e6610f5a565b6104dc61130f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610a21610f5a565b606481610a2e8486611f1e565b610a389190611f1e565b60ff1610610a585760405162461bcd60e51b815260040161056090611f37565b6014805464ffff0000001916630100000060ff9586160264ff00000000191617640100000000938516939093029290921765ff00000000001916650100000000009190931602919091179055565b610aae610f5a565b6001600160a01b03811660009081526008602052604090205460ff1615610b275760405162461bcd60e51b815260206004820152602760248201527f4665654f6e5472616e736665723a204163636f756e7420616c726561647920656044820152661e18db1d59195960ca1b6064820152608401610560565b600a54610b33826106c2565b10610b935760405162461bcd60e51b815260206004820152602a60248201527f4665654f6e5472616e736665723a2043616e6e6f74206578636c75646520746f60448201526974616c20737570706c7960b01b6064820152608401610560565b610b9c816106c2565b6001600160a01b039091166000818152600760209081526040808320949094556009805460018181019092557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b031916851790559282526008905291909120805460ff19169091179055565b610c1a610f5a565b6001600160a01b038116610c7f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610560565b610c88816112b5565b50565b610c93610f5a565b6001600160a01b03811660009081526008602052604090205460ff16610d0b5760405162461bcd60e51b815260206004820152602760248201527f4665654f6e5472616e736665723a204163636f756e7420616c726561647920696044820152661b98db1d59195960ca1b6064820152608401610560565b60005b600954811015610e3257816001600160a01b031660098281548110610d3557610d35611fe1565b6000918252602090912001546001600160a01b031603610e205760098054610d5f90600190611ff7565b81548110610d6f57610d6f611fe1565b600091825260209091200154600980546001600160a01b039092169183908110610d9b57610d9b611fe1565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506009805480610dda57610dda61200a565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03841682526008905260409020805460ff191690555050565b80610e2a81612020565b915050610d0e565b5050565b6001600160a01b038316610e985760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610560565b6001600160a01b038216610ef95760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610560565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b036101009091041633146104dc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610560565b610fc261134c565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600061101884846109ee565b9050600019811461108057818110156110735760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610560565b6110808484848403610e36565b50505050565b61108e611395565b6001600160a01b0383166110f25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610560565b6001600160a01b0382166111545760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610560565b600081116111bd5760405162461bcd60e51b815260206004820152603060248201527f45524332303a207472616e7366657220616d6f756e74206d757374206265206760448201526f726561746572207468616e207a65726f60801b6064820152608401610560565b60006111c8846106c2565b9050818110156112295760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610560565b6001600160a01b03841660009081526013602052604081205460ff16156112525750600161127f565b6001600160a01b03841660009081526013602052604090205460ff161561127b5750600261127f565b5060005b61128b858585846113db565b5050505050565b600080600061129f611736565b90925090506112ae8183611ee9565b9250505090565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611317611395565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610fef3390565b60055460ff166104dc5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610560565b60055460ff16156104dc5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610560565b6000806113e884846118b9565b6001600160a01b038816600090815260086020526040902054919350915060ff16156114725781516001600160a01b03871660009081526007602052604081208054909190611438908490611ff7565b909155505080516001600160a01b03871660009081526006602052604081208054909190611467908490611ff7565b909155506114a29050565b80516001600160a01b0387166000908152600660205260408120805490919061149c908490611ff7565b90915550505b6001600160a01b03851660009081526008602052604090205460ff161561153b57816020015160076000876001600160a01b03166001600160a01b0316815260200190815260200160002060008282546114fc9190611f0b565b90915550506020808201516001600160a01b0387166000908152600690925260408220805491929091611530908490611f0b565b9091555061157a9050565b806020015160066000876001600160a01b03166001600160a01b0316815260200190815260200160002060008282546115749190611f0b565b90915550505b846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84602001516040516115c391815260200190565b60405180910390a360008360028111156115df576115df612039565b1461172e576115f6816040015183604001516118fd565b60608201511561171157600d546001600160a01b031660009081526008602052604090205460ff1615611691576060820151600d546001600160a01b031660009081526007602052604081208054909190611652908490611f0b565b90915550506060810151600d546001600160a01b031660009081526006602052604081208054909190611686908490611f0b565b909155506116c69050565b6060810151600d546001600160a01b0316600090815260066020526040812080549091906116c0908490611f0b565b90915550505b600d5460608301516040519081526001600160a01b03918216918816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35b60808201511561172e5761172e8683608001518360800151611923565b505050505050565b600b54600a546000918291825b6009548110156118885782600660006009848154811061176557611765611fe1565b60009182526020808320909101546001600160a01b0316835282019290925260400190205411806117d057508160076000600984815481106117a9576117a9611fe1565b60009182526020808320909101546001600160a01b03168352820192909252604001902054115b156117e657600b54600a54945094505050509091565b60066000600983815481106117fd576117fd611fe1565b60009182526020808320909101546001600160a01b0316835282019290925260400190205461182c9084611ff7565b9250600760006009838154811061184557611845611fe1565b60009182526020808320909101546001600160a01b031683528201929092526040019020546118749083611ff7565b91508061188081612020565b915050611743565b50600a54600b546118999190611ee9565b8210156118b057600b54600a549350935050509091565b90939092509050565b6118c1611cbc565b6118c9611cbc565b60006118d3611292565b905060006118e18686611ad7565b905060006118ef8284611b93565b919791965090945050505050565b81600b5461190b9190611ff7565b600b55600c5461191c908290611f0b565b600c555050565b6000611930600584611ee9565b9050600061193f600584611ee9565b905060005b600581101561172e5760086000600e836005811061196457611964611fe1565b01546001600160a01b0316815260208101919091526040016000205460ff1615611a23578260076000600e84600581106119a0576119a0611fe1565b01546001600160a01b031681526020810191909152604001600090812080549091906119cd908490611f0b565b9091555082905060066000600e84600581106119eb576119eb611fe1565b01546001600160a01b03168152602081019190915260400160009081208054909190611a18908490611f0b565b90915550611a6e9050565b8160066000600e8460058110611a3b57611a3b611fe1565b01546001600160a01b03168152602081019190915260400160009081208054909190611a68908490611f0b565b90915550505b600e8160058110611a8157611a81611fe1565b01546040518481526001600160a01b03918216918816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a380611acf81612020565b915050611944565b611adf611cbc565b6000806000611aed85611c29565b925092509250611afb611cbc565b8681526064611b0d60ff86168961204f565b611b179190611ee9565b60408201526064611b2b60ff85168961204f565b611b359190611ee9565b60608201526064611b4960ff84168961204f565b611b539190611ee9565b60808201819052606082015160408301518351611b709190611ff7565b611b7a9190611ff7565b611b849190611ff7565b60208201529695505050505050565b611b9b611cbc565b611ba3611cbc565b8351611bb090849061204f565b81526040840151611bc290849061204f565b60408201526060840151611bd790849061204f565b60608201526080840151611bec90849061204f565b60808201819052606082015160408301518351611c099190611ff7565b611c139190611ff7565b611c1d9190611ff7565b60208201529392505050565b600080806001846002811115611c4157611c41612039565b03611c6657505060145460ff8082169250610100820481169162010000900416611cb5565b6002846002811115611c7a57611c7a612039565b03611cab57505060145460ff6301000000820481169250640100000000820481169165010000000000900416611cb5565b5060009150819050805b9193909250565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600060208083528351808285015260005b81811015611d1857858101830151858201604001528201611cfc565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114611d5057600080fd5b919050565b60008060408385031215611d6857600080fd5b611d7183611d39565b946020939093013593505050565b600080600060608486031215611d9457600080fd5b611d9d84611d39565b9250611dab60208501611d39565b9150604084013590509250925092565b600060208284031215611dcd57600080fd5b5035919050565b803560ff81168114611d5057600080fd5b600080600060608486031215611dfa57600080fd5b611e0384611dd4565b9250611e1160208501611dd4565b9150611e1f60408501611dd4565b90509250925092565b600060208284031215611e3a57600080fd5b61057f82611d39565b60008060408385031215611e5657600080fd5b82359150611e6660208401611d39565b90509250929050565b60008060408385031215611e8257600080fd5b611e8b83611d39565b9150611e6660208401611d39565b600181811c90821680611ead57607f821691505b602082108103611ecd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082611f0657634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156104c6576104c6611ed3565b60ff81811683821601908111156104c6576104c6611ed3565b6020808252603a908201527f4665654f6e5472616e736665723a20546f74616c206665652070657263656e7460408201527f616765206d757374206265206c657373207468616e2031303025000000000000606082015260800190565b6020808252602d908201527f4665654f6e5472616e736665723a20416464726573732063616e6e6f7420626560408201526c207a65726f206164647265737360981b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b818103818111156104c6576104c6611ed3565b634e487b7160e01b600052603160045260246000fd5b60006001820161203257612032611ed3565b5060010190565b634e487b7160e01b600052602160045260246000fd5b80820281158282048414176104c6576104c6611ed356fea2646970667358221220079cc162eccb35b70686dd7f0e052ff0c24322292fa6d0755d1f8dd54609ab8c64736f6c63430008110033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type ReflectTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReflectTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReflectToken__factory extends ContractFactory {
  constructor(...args: ReflectTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _supply: PromiseOrValue<BigNumberish>,
    _marketing: PromiseOrValue<string>,
    _acquisition: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReflectToken> {
    return super.deploy(
      _name,
      _symbol,
      _supply,
      _marketing,
      _acquisition,
      overrides || {}
    ) as Promise<ReflectToken>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _supply: PromiseOrValue<BigNumberish>,
    _marketing: PromiseOrValue<string>,
    _acquisition: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _supply,
      _marketing,
      _acquisition,
      overrides || {}
    );
  }
  override attach(address: string): ReflectToken {
    return super.attach(address) as ReflectToken;
  }
  override connect(signer: Signer): ReflectToken__factory {
    return super.connect(signer) as ReflectToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReflectTokenInterface {
    return new utils.Interface(_abi) as ReflectTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReflectToken {
    return new Contract(address, _abi, signerOrProvider) as ReflectToken;
  }
}
