{"id":"b93e39b013e3d491d4ee290fc30e488a","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates merkle trees that are safe\n * against this attack out of the box.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     *\n     * _Available since v4.7._\n     */\n    function verifyCalldata(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     *\n     * _Available since v4.7._\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proof.length - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value for the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            return hashes[totalHashes - 1];\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proof.length - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value for the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            return hashes[totalHashes - 1];\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"contracts/AirdropClaim.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/interfaces/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\"; \nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\"; \n\n/// @title AirdropClaim\n/// @notice Allows user to claim ERC20 token if part of Merkle Tree within\n/// owner-specified deadline.\ncontract AirdropClaim {\n  using SafeERC20 for IERC20;\n\n  //------------------ STATE VARIABLES ---------------------------------------\n\n  bytes32 public merkleRoot;                    // Root of tree containing valid address\n  address public owner;                         // Contract administrator\n  IERC20 public airdropToken;                   // Token to be claimed\n  uint256 public deadline;                      // Number of blocks airdrop will be active\n  mapping(address => bool) public hasClaimed;   // Records if user has already claimed\n\n  //----------------------- EVENTS -------------------------------------------\n\n  event Claimed(address indexed to, uint256 amount);\n\n  //--------------------  CONSTRUCTOR ----------------------------------------\n\n  /// notice Creates a new AirdropClaim contract\n  /// param _merkleRoot of claimees\n  /// param _tokenAddress address of token to be airdropped\n  /// param _deadline number of blocks airdrop will be active\n  // constructor(bytes32 _merkleRoot, address _tokenAddress, uint256 _deadline) {\n  //   merkleRoot = _merkleRoot;                \n  //   airdropToken = IERC20(_tokenAddress);   \n  //   deadline = block.number + _deadline;  \n  //   owner = msg.sender;                     \n  // }\n  constructor() {\n                       \n  }\n\n  //-------------------- MUTATIVE FUNCTIONS ----------------------------------\n\n  /// @notice Allows user to claim token if address is part of merkle tree\n  /// @dev A valid claim should revert if contract has insufficient funds\n  /// @param _to address of claimee\n  /// @param _amount of tokens owed to claimee\n  /// @param _proof merkle proof to prove address and amount are in tree\n  function claim(address _to, uint256 _amount, bytes32[] calldata _proof) external {\n    // Check if airdrop still active and address hasn't already claimed tokens\n    require(!hasClaimed[_to], \"AirdropClaim: Already claimed\");\n    require(block.number <= deadline, \"AirdropClaim: Claiming period expired\");\n\n    // Verify merkle proof, or revert if not in tree\n    bytes32 leaf = keccak256(abi.encodePacked(_to, _amount));\n    bool isValidLeaf = MerkleProof.verify(_proof, merkleRoot, leaf);\n    if (!isValidLeaf) revert(\"AirdropClaim: Invalid Address\");\n\n    // Send tokens to claimee\n    hasClaimed[_to] = true;\n    airdropToken.safeTransfer(_to, _amount);\n    emit Claimed(_to, _amount);\n  }\n\n  /// @notice Allows token deployer to deposit ERC20 token to be airdropped\n  /// @dev Airdrop contract must be funded prior to claiming\n  /// @param _amount is the number of tokens to be deposited\n  function depositERC20(uint256 _amount) external {\n    airdropToken.safeTransferFrom(msg.sender, address(this), _amount);\n  }\n\n  //----------------------------- RESTRICTED FUNCTIONS ---------------------------\n  \n  /// @notice Allows owner to recover unclaimed ERC20 tokens deposited to contract \n  /// after airdrop deadline\n  function recoverERC20() external {\n    // Check that sender is contract owner and airdrop period has expired\n    require(msg.sender == owner, \"AirdropClaim: Only owner can recover tokens\");\n    require(block.number > deadline, \"AirdropClaim: Airdrop still active\");\n\n    // Obtain current contract balance\n    uint256 recoverBalance  = airdropToken.balanceOf(address(this));\n\n    // Transfer remaining balance to owner\n    airdropToken.safeTransfer(msg.sender, recoverBalance);\n  }\n\n  /// @notice Prevent accidental ETH deposits\n  receive() external payable {\n    revert();\n  }\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[80]},"id":3,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"90:23:0"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3,"sourceUnit":81,"src":"115:35:0","symbolAliases":[],"unitAlias":""}],"src":"90:61:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[80]},"id":81,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"131:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":80,"linearizedBaseContracts":[80],"name":"IERC20","nameLocation":"212:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"225:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":14,"name":"Transfer","nameLocation":"394:8:1","nodeType":"EventDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:1","nodeType":"VariableDeclaration","scope":14,"src":"403:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:1","nodeType":"VariableDeclaration","scope":14,"src":"425:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:1","nodeType":"VariableDeclaration","scope":14,"src":"445:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:1"},"src":"388:72:1"},{"anonymous":false,"documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"466:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":23,"name":"Approval","nameLocation":"625:8:1","nodeType":"EventDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:1","nodeType":"VariableDeclaration","scope":23,"src":"634:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:1","nodeType":"VariableDeclaration","scope":23,"src":"657:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":21,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:1","nodeType":"VariableDeclaration","scope":23,"src":"682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:1"},"src":"619:78:1"},{"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"703:66:1","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":29,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":80,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"835:72:1","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":37,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":37,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":37,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":80,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":38,"nodeType":"StructuredDocumentation","src":"986:202:1","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":47,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:1","nodeType":"FunctionDefinition","parameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"to","nameLocation":"1219:2:1","nodeType":"VariableDeclaration","scope":47,"src":"1211:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":39,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"amount","nameLocation":"1231:6:1","nodeType":"VariableDeclaration","scope":47,"src":"1223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:1"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":47,"src":"1257:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:1"},"scope":80,"src":"1193:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"1269:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":57,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:1","nodeType":"FunctionDefinition","parameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"owner","nameLocation":"1565:5:1","nodeType":"VariableDeclaration","scope":57,"src":"1557:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":52,"mutability":"mutable","name":"spender","nameLocation":"1580:7:1","nodeType":"VariableDeclaration","scope":57,"src":"1572:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:1"},"returnParameters":{"id":56,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":57,"src":"1612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:1"},"scope":80,"src":"1538:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":58,"nodeType":"StructuredDocumentation","src":"1627:642:1","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":67,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:1","nodeType":"FunctionDefinition","parameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60,"mutability":"mutable","name":"spender","nameLocation":"2299:7:1","nodeType":"VariableDeclaration","scope":67,"src":"2291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":59,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":62,"mutability":"mutable","name":"amount","nameLocation":"2316:6:1","nodeType":"VariableDeclaration","scope":67,"src":"2308:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:1"},"returnParameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"2342:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":64,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:1"},"scope":80,"src":"2274:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"2354:287:1","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":79,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:1","nodeType":"FunctionDefinition","parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"from","nameLocation":"2685:4:1","nodeType":"VariableDeclaration","scope":79,"src":"2677:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":72,"mutability":"mutable","name":"to","nameLocation":"2707:2:1","nodeType":"VariableDeclaration","scope":79,"src":"2699:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":74,"mutability":"mutable","name":"amount","nameLocation":"2727:6:1","nodeType":"VariableDeclaration","scope":79,"src":"2719:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":73,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:1"},"returnParameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"2758:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":76,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:1"},"scope":80,"src":"2646:118:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":81,"src":"202:2564:1","usedErrors":[]}],"src":"106:2661:1"},"id":1},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[116]},"id":117,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":82,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"139:480:2","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":116,"linearizedBaseContracts":[116],"name":"IERC20Permit","nameLocation":"630:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"649:792:2","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":101,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:2","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"owner","nameLocation":"1479:5:2","nodeType":"VariableDeclaration","scope":101,"src":"1471:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":88,"mutability":"mutable","name":"spender","nameLocation":"1502:7:2","nodeType":"VariableDeclaration","scope":101,"src":"1494:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":87,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":90,"mutability":"mutable","name":"value","nameLocation":"1527:5:2","nodeType":"VariableDeclaration","scope":101,"src":"1519:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":92,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:2","nodeType":"VariableDeclaration","scope":101,"src":"1542:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":91,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":94,"mutability":"mutable","name":"v","nameLocation":"1574:1:2","nodeType":"VariableDeclaration","scope":101,"src":"1568:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":93,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"r","nameLocation":"1593:1:2","nodeType":"VariableDeclaration","scope":101,"src":"1585:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"s","nameLocation":"1612:1:2","nodeType":"VariableDeclaration","scope":101,"src":"1604:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":97,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:2"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"1628:0:2"},"scope":116,"src":"1446:183:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"1635:294:2","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":109,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:2","nodeType":"FunctionDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"owner","nameLocation":"1958:5:2","nodeType":"VariableDeclaration","scope":109,"src":"1950:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:2"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":109,"src":"1988:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":106,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:2"},"scope":116,"src":"1934:63:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":110,"nodeType":"StructuredDocumentation","src":"2003:128:2","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":115,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:2","nodeType":"FunctionDefinition","parameters":{"id":111,"nodeType":"ParameterList","parameters":[],"src":"2214:2:2"},"returnParameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":115,"src":"2240:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:2"},"scope":116,"src":"2189:60:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":117,"src":"620:1631:2","usedErrors":[]}],"src":"114:2138:2"},"id":2},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[727],"IERC20":[80],"IERC20Permit":[116],"SafeERC20":[397]},"id":398,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":118,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":119,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":398,"sourceUnit":81,"src":"140:23:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"../extensions/draft-IERC20Permit.sol","id":120,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":398,"sourceUnit":117,"src":"164:46:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":121,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":398,"sourceUnit":728,"src":"211:36:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"249:457:3","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":397,"linearizedBaseContracts":[397],"name":"SafeERC20","nameLocation":"715:9:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":125,"libraryName":{"id":123,"name":"Address","nameLocations":["737:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":727,"src":"737:7:3"},"nodeType":"UsingForDirective","src":"731:26:3","typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":147,"nodeType":"Block","src":"865:103:3","statements":[{"expression":{"arguments":[{"id":136,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"895:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":139,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"925:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"931:8:3","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":47,"src":"925:14:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"940:8:3","memberName":"selector","nodeType":"MemberAccess","src":"925:23:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":142,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"950:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"954:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":137,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"902:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"906:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"902:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"902:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":135,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"875:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$80_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"875:86:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":146,"nodeType":"ExpressionStatement","src":"875:86:3"}]},"id":148,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"772:12:3","nodeType":"FunctionDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"token","nameLocation":"801:5:3","nodeType":"VariableDeclaration","scope":148,"src":"794:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"},"typeName":{"id":127,"nodeType":"UserDefinedTypeName","pathNode":{"id":126,"name":"IERC20","nameLocations":["794:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":80,"src":"794:6:3"},"referencedDeclaration":80,"src":"794:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":130,"mutability":"mutable","name":"to","nameLocation":"824:2:3","nodeType":"VariableDeclaration","scope":148,"src":"816:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":132,"mutability":"mutable","name":"value","nameLocation":"844:5:3","nodeType":"VariableDeclaration","scope":148,"src":"836:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"784:71:3"},"returnParameters":{"id":134,"nodeType":"ParameterList","parameters":[],"src":"865:0:3"},"scope":397,"src":"763:205:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":173,"nodeType":"Block","src":"1102:113:3","statements":[{"expression":{"arguments":[{"id":161,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"1132:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":164,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"1162:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:12:3","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":79,"src":"1162:18:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:8:3","memberName":"selector","nodeType":"MemberAccess","src":"1162:27:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":167,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"1191:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":168,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"1197:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"1201:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":162,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1139:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1143:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1139:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1139:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":160,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"1112:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$80_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1112:96:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":172,"nodeType":"ExpressionStatement","src":"1112:96:3"}]},"id":174,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"983:16:3","nodeType":"FunctionDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"token","nameLocation":"1016:5:3","nodeType":"VariableDeclaration","scope":174,"src":"1009:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"},"typeName":{"id":150,"nodeType":"UserDefinedTypeName","pathNode":{"id":149,"name":"IERC20","nameLocations":["1009:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":80,"src":"1009:6:3"},"referencedDeclaration":80,"src":"1009:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"from","nameLocation":"1039:4:3","nodeType":"VariableDeclaration","scope":174,"src":"1031:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"to","nameLocation":"1061:2:3","nodeType":"VariableDeclaration","scope":174,"src":"1053:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"value","nameLocation":"1081:5:3","nodeType":"VariableDeclaration","scope":174,"src":"1073:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:93:3"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"1102:0:3"},"scope":397,"src":"974:241:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":217,"nodeType":"Block","src":"1581:497:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"1830:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1830:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":189,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1829:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":194,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1870:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$397","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$397","typeString":"library SafeERC20"}],"id":193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1862:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"1862:7:3","typeDescriptions":{}}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":196,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"1877:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":190,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"1846:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1852:9:3","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":57,"src":"1846:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1846:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1846:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":200,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1845:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1829:62:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1905:56:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":185,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1808:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1808:163:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":204,"nodeType":"ExpressionStatement","src":"1808:163:3"},{"expression":{"arguments":[{"id":206,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"2001:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":209,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"2031:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2037:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":67,"src":"2031:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2045:8:3","memberName":"selector","nodeType":"MemberAccess","src":"2031:22:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":212,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"2055:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"2064:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":207,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2008:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2012:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2008:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":205,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"1981:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$80_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1981:90:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"ExpressionStatement","src":"1981:90:3"}]},"documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"1221:249:3","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":218,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1484:11:3","nodeType":"FunctionDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"token","nameLocation":"1512:5:3","nodeType":"VariableDeclaration","scope":218,"src":"1505:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"},"typeName":{"id":177,"nodeType":"UserDefinedTypeName","pathNode":{"id":176,"name":"IERC20","nameLocations":["1505:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":80,"src":"1505:6:3"},"referencedDeclaration":80,"src":"1505:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"spender","nameLocation":"1535:7:3","nodeType":"VariableDeclaration","scope":218,"src":"1527:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"value","nameLocation":"1560:5:3","nodeType":"VariableDeclaration","scope":218,"src":"1552:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:76:3"},"returnParameters":{"id":184,"nodeType":"ParameterList","parameters":[],"src":"1581:0:3"},"scope":397,"src":"1475:603:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":253,"nodeType":"Block","src":"2200:194:3","statements":[{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"newAllowance","nameLocation":"2218:12:3","nodeType":"VariableDeclaration","scope":253,"src":"2210:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":228,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":240,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":234,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2257:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$397","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$397","typeString":"library SafeERC20"}],"id":233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2249:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":232,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:3","typeDescriptions":{}}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":236,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"2264:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":230,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"2233:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2239:9:3","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":57,"src":"2233:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2233:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"2275:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:47:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2210:70:3"},{"expression":{"arguments":[{"id":242,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"2310:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":245,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"2340:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2346:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":67,"src":"2340:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2354:8:3","memberName":"selector","nodeType":"MemberAccess","src":"2340:22:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":248,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"2364:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":249,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"2373:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":243,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2317:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2321:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2317:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":241,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2290:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$80_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2290:97:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":252,"nodeType":"ExpressionStatement","src":"2290:97:3"}]},"id":254,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2093:21:3","nodeType":"FunctionDefinition","parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"token","nameLocation":"2131:5:3","nodeType":"VariableDeclaration","scope":254,"src":"2124:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"},"typeName":{"id":220,"nodeType":"UserDefinedTypeName","pathNode":{"id":219,"name":"IERC20","nameLocations":["2124:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":80,"src":"2124:6:3"},"referencedDeclaration":80,"src":"2124:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"spender","nameLocation":"2154:7:3","nodeType":"VariableDeclaration","scope":254,"src":"2146:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"value","nameLocation":"2179:5:3","nodeType":"VariableDeclaration","scope":254,"src":"2171:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:76:3"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[],"src":"2200:0:3"},"scope":397,"src":"2084:310:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":301,"nodeType":"Block","src":"2516:370:3","statements":[{"id":300,"nodeType":"UncheckedBlock","src":"2526:354:3","statements":[{"assignments":[265],"declarations":[{"constant":false,"id":265,"mutability":"mutable","name":"oldAllowance","nameLocation":"2558:12:3","nodeType":"VariableDeclaration","scope":300,"src":"2550:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":274,"initialValue":{"arguments":[{"arguments":[{"id":270,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2597:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$397","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$397","typeString":"library SafeERC20"}],"id":269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2589:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:3","typeDescriptions":{}}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":272,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"2604:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":266,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2573:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2579:9:3","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":57,"src":"2573:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2550:62:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":276,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"2634:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2650:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2634:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":275,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2626:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2626:75:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":281,"nodeType":"ExpressionStatement","src":"2626:75:3"},{"assignments":[283],"declarations":[{"constant":false,"id":283,"mutability":"mutable","name":"newAllowance","nameLocation":"2723:12:3","nodeType":"VariableDeclaration","scope":300,"src":"2715:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"2715:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":287,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":284,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"2738:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2753:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2715:43:3"},{"expression":{"arguments":[{"id":289,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2792:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":292,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2822:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2828:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":67,"src":"2822:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2836:8:3","memberName":"selector","nodeType":"MemberAccess","src":"2822:22:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"2846:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":296,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2855:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":290,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2799:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2803:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2799:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":288,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2772:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$80_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:97:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":299,"nodeType":"ExpressionStatement","src":"2772:97:3"}]}]},"id":302,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2409:21:3","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"token","nameLocation":"2447:5:3","nodeType":"VariableDeclaration","scope":302,"src":"2440:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"},"typeName":{"id":256,"nodeType":"UserDefinedTypeName","pathNode":{"id":255,"name":"IERC20","nameLocations":["2440:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":80,"src":"2440:6:3"},"referencedDeclaration":80,"src":"2440:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"spender","nameLocation":"2470:7:3","nodeType":"VariableDeclaration","scope":302,"src":"2462:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"value","nameLocation":"2495:5:3","nodeType":"VariableDeclaration","scope":302,"src":"2487:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":260,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:76:3"},"returnParameters":{"id":263,"nodeType":"ParameterList","parameters":[],"src":"2516:0:3"},"scope":397,"src":"2400:486:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":357,"nodeType":"Block","src":"3107:257:3","statements":[{"assignments":[323],"declarations":[{"constant":false,"id":323,"mutability":"mutable","name":"nonceBefore","nameLocation":"3125:11:3","nodeType":"VariableDeclaration","scope":357,"src":"3117:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"3117:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":328,"initialValue":{"arguments":[{"id":326,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"3152:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":324,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3139:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$116","typeString":"contract IERC20Permit"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:6:3","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":109,"src":"3139:12:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3139:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3117:41:3"},{"expression":{"arguments":[{"id":332,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"3181:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":333,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"3188:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"3197:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":335,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"3204:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":336,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"3214:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":337,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"3217:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":338,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"3220:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":329,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3168:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$116","typeString":"contract IERC20Permit"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3174:6:3","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":101,"src":"3168:12:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":340,"nodeType":"ExpressionStatement","src":"3168:54:3"},{"assignments":[342],"declarations":[{"constant":false,"id":342,"mutability":"mutable","name":"nonceAfter","nameLocation":"3240:10:3","nodeType":"VariableDeclaration","scope":357,"src":"3232:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":347,"initialValue":{"arguments":[{"id":345,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"3266:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":343,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3253:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$116","typeString":"contract IERC20Permit"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3259:6:3","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":109,"src":"3253:12:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3253:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3232:40:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":349,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"3290:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":350,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"3304:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3318:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3304:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3290:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3321:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":348,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3282:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:75:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"ExpressionStatement","src":"3282:75:3"}]},"id":358,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"2901:10:3","nodeType":"FunctionDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"token","nameLocation":"2934:5:3","nodeType":"VariableDeclaration","scope":358,"src":"2921:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$116","typeString":"contract IERC20Permit"},"typeName":{"id":304,"nodeType":"UserDefinedTypeName","pathNode":{"id":303,"name":"IERC20Permit","nameLocations":["2921:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":116,"src":"2921:12:3"},"referencedDeclaration":116,"src":"2921:12:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$116","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"owner","nameLocation":"2957:5:3","nodeType":"VariableDeclaration","scope":358,"src":"2949:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"2949:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"spender","nameLocation":"2980:7:3","nodeType":"VariableDeclaration","scope":358,"src":"2972:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":311,"mutability":"mutable","name":"value","nameLocation":"3005:5:3","nodeType":"VariableDeclaration","scope":358,"src":"2997:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"2997:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":313,"mutability":"mutable","name":"deadline","nameLocation":"3028:8:3","nodeType":"VariableDeclaration","scope":358,"src":"3020:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":315,"mutability":"mutable","name":"v","nameLocation":"3052:1:3","nodeType":"VariableDeclaration","scope":358,"src":"3046:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":314,"name":"uint8","nodeType":"ElementaryTypeName","src":"3046:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":317,"mutability":"mutable","name":"r","nameLocation":"3071:1:3","nodeType":"VariableDeclaration","scope":358,"src":"3063:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3063:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":319,"mutability":"mutable","name":"s","nameLocation":"3090:1:3","nodeType":"VariableDeclaration","scope":358,"src":"3082:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2911:186:3"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[],"src":"3107:0:3"},"scope":397,"src":"2892:472:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":395,"nodeType":"Block","src":"3817:636:3","statements":[{"assignments":[368],"declarations":[{"constant":false,"id":368,"mutability":"mutable","name":"returndata","nameLocation":"4179:10:3","nodeType":"VariableDeclaration","scope":395,"src":"4166:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":367,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":377,"initialValue":{"arguments":[{"id":374,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"4220:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4226:34:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":371,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"4200:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}],"id":370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:3","typeDescriptions":{}}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4207:12:3","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":487,"src":"4192:27:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4166:95:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":378,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4275:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4286:6:3","memberName":"length","nodeType":"MemberAccess","src":"4275:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4275:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":394,"nodeType":"IfStatement","src":"4271:176:3","trueBody":{"id":393,"nodeType":"Block","src":"4298:149:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":385,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4370:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4383:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":386,"name":"bool","nodeType":"ElementaryTypeName","src":"4383:4:3","typeDescriptions":{}}}],"id":388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4382:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":383,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4359:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4363:6:3","memberName":"decode","nodeType":"MemberAccess","src":"4359:10:3","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4359:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4391:44:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4351:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4351:85:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":392,"nodeType":"ExpressionStatement","src":"4351:85:3"}]}}]},"documentation":{"id":359,"nodeType":"StructuredDocumentation","src":"3370:372:3","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":396,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3756:19:3","nodeType":"FunctionDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":362,"mutability":"mutable","name":"token","nameLocation":"3783:5:3","nodeType":"VariableDeclaration","scope":396,"src":"3776:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"},"typeName":{"id":361,"nodeType":"UserDefinedTypeName","pathNode":{"id":360,"name":"IERC20","nameLocations":["3776:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":80,"src":"3776:6:3"},"referencedDeclaration":80,"src":"3776:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"data","nameLocation":"3803:4:3","nodeType":"VariableDeclaration","scope":396,"src":"3790:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":363,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:33:3"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[],"src":"3817:0:3"},"scope":397,"src":"3747:706:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":398,"src":"707:3748:3","usedErrors":[]}],"src":"115:4341:3"},"id":3},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[727]},"id":728,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":399,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":400,"nodeType":"StructuredDocumentation","src":"126:67:4","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":727,"linearizedBaseContracts":[727],"name":"Address","nameLocation":"202:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":414,"nodeType":"Block","src":"1241:254:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":408,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"1465:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1473:4:4","memberName":"code","nodeType":"MemberAccess","src":"1465:12:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1478:6:4","memberName":"length","nodeType":"MemberAccess","src":"1465:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":407,"id":413,"nodeType":"Return","src":"1458:30:4"}]},"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"216:954:4","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":415,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:4","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"account","nameLocation":"1203:7:4","nodeType":"VariableDeclaration","scope":415,"src":"1195:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":402,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:4"},"returnParameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":415,"src":"1235:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":405,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:4"},"scope":727,"src":"1175:320:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":448,"nodeType":"Block","src":"2483:241:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":426,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$727","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$727","typeString":"library Address"}],"id":425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:4","typeDescriptions":{}}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:7:4","memberName":"balance","nodeType":"MemberAccess","src":"2501:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":429,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2526:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":423,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":433,"nodeType":"ExpressionStatement","src":"2493:73:4"},{"assignments":[435,null],"declarations":[{"constant":false,"id":435,"mutability":"mutable","name":"success","nameLocation":"2583:7:4","nodeType":"VariableDeclaration","scope":448,"src":"2578:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":434,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":442,"initialValue":{"arguments":[{"hexValue":"","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":436,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2596:9:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:4:4","memberName":"call","nodeType":"MemberAccess","src":"2596:14:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":438,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2618:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:4"},{"expression":{"arguments":[{"id":444,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2647:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":443,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":447,"nodeType":"ExpressionStatement","src":"2639:78:4"}]},"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"1501:906:4","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":449,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:4","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:4","nodeType":"VariableDeclaration","scope":449,"src":"2431:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"amount","nameLocation":"2466:6:4","nodeType":"VariableDeclaration","scope":449,"src":"2458:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:4"},"returnParameters":{"id":422,"nodeType":"ParameterList","parameters":[],"src":"2483:0:4"},"scope":727,"src":"2412:312:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":466,"nodeType":"Block","src":"3555:96:4","statements":[{"expression":{"arguments":[{"id":460,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"3594:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":461,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"3602:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":459,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[507,551],"referencedDeclaration":551,"src":"3572:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":458,"id":465,"nodeType":"Return","src":"3565:79:4"}]},"documentation":{"id":450,"nodeType":"StructuredDocumentation","src":"2730:731:4","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":467,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:4","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"target","nameLocation":"3496:6:4","nodeType":"VariableDeclaration","scope":467,"src":"3488:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"data","nameLocation":"3517:4:4","nodeType":"VariableDeclaration","scope":467,"src":"3504:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":453,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:4"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":467,"src":"3541:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":456,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:4"},"scope":727,"src":"3466:185:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":486,"nodeType":"Block","src":"4020:76:4","statements":[{"expression":{"arguments":[{"id":480,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"4059:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":481,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"4067:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":483,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"4076:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":479,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[507,551],"referencedDeclaration":551,"src":"4037:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4037:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":478,"id":485,"nodeType":"Return","src":"4030:59:4"}]},"documentation":{"id":468,"nodeType":"StructuredDocumentation","src":"3657:211:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":487,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:4","nodeType":"FunctionDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"target","nameLocation":"3912:6:4","nodeType":"VariableDeclaration","scope":487,"src":"3904:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":472,"mutability":"mutable","name":"data","nameLocation":"3941:4:4","nodeType":"VariableDeclaration","scope":487,"src":"3928:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":471,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:4","nodeType":"VariableDeclaration","scope":487,"src":"3955:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":473,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:4"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":487,"src":"4006:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":476,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:4"},"scope":727,"src":"3873:223:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":506,"nodeType":"Block","src":"4601:111:4","statements":[{"expression":{"arguments":[{"id":500,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"4640:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":501,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"4648:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"4654:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":499,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[507,551],"referencedDeclaration":551,"src":"4618:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4618:87:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":498,"id":505,"nodeType":"Return","src":"4611:94:4"}]},"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"4102:351:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":507,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:4","nodeType":"FunctionDefinition","parameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"target","nameLocation":"4506:6:4","nodeType":"VariableDeclaration","scope":507,"src":"4498:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":492,"mutability":"mutable","name":"data","nameLocation":"4535:4:4","nodeType":"VariableDeclaration","scope":507,"src":"4522:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":491,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"value","nameLocation":"4557:5:4","nodeType":"VariableDeclaration","scope":507,"src":"4549:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:4"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"4587:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":496,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:4"},"scope":727,"src":"4458:254:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":550,"nodeType":"Block","src":"5139:267:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":524,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$727","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$727","typeString":"library Address"}],"id":523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:4","typeDescriptions":{}}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5157:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5171:7:4","memberName":"balance","nodeType":"MemberAccess","src":"5157:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"5182:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":521,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5149:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":531,"nodeType":"ExpressionStatement","src":"5149:81:4"},{"assignments":[533,535],"declarations":[{"constant":false,"id":533,"mutability":"mutable","name":"success","nameLocation":"5246:7:4","nodeType":"VariableDeclaration","scope":550,"src":"5241:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":532,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:4","nodeType":"VariableDeclaration","scope":550,"src":"5255:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":534,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":542,"initialValue":{"arguments":[{"id":540,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5308:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":536,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5282:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5289:4:4","memberName":"call","nodeType":"MemberAccess","src":"5282:11:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"5301:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5282:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:4"},{"expression":{"arguments":[{"id":544,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5357:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":545,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"5365:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":546,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"5374:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":547,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"5386:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":543,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5330:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5330:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":520,"id":549,"nodeType":"Return","src":"5323:76:4"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"4718:237:4","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":551,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:4","nodeType":"FunctionDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"target","nameLocation":"5008:6:4","nodeType":"VariableDeclaration","scope":551,"src":"5000:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"data","nameLocation":"5037:4:4","nodeType":"VariableDeclaration","scope":551,"src":"5024:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":511,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"value","nameLocation":"5059:5:4","nodeType":"VariableDeclaration","scope":551,"src":"5051:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:4","nodeType":"VariableDeclaration","scope":551,"src":"5074:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":515,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:4"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":551,"src":"5125:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":518,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:4"},"scope":727,"src":"4960:446:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":567,"nodeType":"Block","src":"5683:97:4","statements":[{"expression":{"arguments":[{"id":562,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"5719:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":563,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"5727:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":561,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[568,597],"referencedDeclaration":597,"src":"5700:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5700:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":560,"id":566,"nodeType":"Return","src":"5693:80:4"}]},"documentation":{"id":552,"nodeType":"StructuredDocumentation","src":"5412:166:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":568,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:4","nodeType":"FunctionDefinition","parameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"target","nameLocation":"5619:6:4","nodeType":"VariableDeclaration","scope":568,"src":"5611:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"data","nameLocation":"5640:4:4","nodeType":"VariableDeclaration","scope":568,"src":"5627:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":555,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:4"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":568,"src":"5669:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":558,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:4"},"scope":727,"src":"5583:197:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":596,"nodeType":"Block","src":"6122:168:4","statements":[{"assignments":[581,583],"declarations":[{"constant":false,"id":581,"mutability":"mutable","name":"success","nameLocation":"6138:7:4","nodeType":"VariableDeclaration","scope":596,"src":"6133:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":580,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":583,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:4","nodeType":"VariableDeclaration","scope":596,"src":"6147:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":582,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":588,"initialValue":{"arguments":[{"id":586,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"6192:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":584,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"6174:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:10:4","memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:4","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:4"},{"expression":{"arguments":[{"id":590,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"6241:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"6249:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":592,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"6258:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":593,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"6270:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":589,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"6214:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6214:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":579,"id":595,"nodeType":"Return","src":"6207:76:4"}]},"documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"5786:173:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":597,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:4","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"target","nameLocation":"6009:6:4","nodeType":"VariableDeclaration","scope":597,"src":"6001:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":573,"mutability":"mutable","name":"data","nameLocation":"6038:4:4","nodeType":"VariableDeclaration","scope":597,"src":"6025:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":572,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:4","nodeType":"VariableDeclaration","scope":597,"src":"6052:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":574,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:4"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":597,"src":"6108:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":577,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:4"},"scope":727,"src":"5964:326:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":613,"nodeType":"Block","src":"6566:101:4","statements":[{"expression":{"arguments":[{"id":608,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6604:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":609,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6612:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":607,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[614,643],"referencedDeclaration":643,"src":"6583:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6583:77:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":606,"id":612,"nodeType":"Return","src":"6576:84:4"}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"6296:168:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":614,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:4","nodeType":"FunctionDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"target","nameLocation":"6507:6:4","nodeType":"VariableDeclaration","scope":614,"src":"6499:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"data","nameLocation":"6528:4:4","nodeType":"VariableDeclaration","scope":614,"src":"6515:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":601,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:4"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":614,"src":"6552:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":604,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:4"},"scope":727,"src":"6469:198:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":642,"nodeType":"Block","src":"7008:170:4","statements":[{"assignments":[627,629],"declarations":[{"constant":false,"id":627,"mutability":"mutable","name":"success","nameLocation":"7024:7:4","nodeType":"VariableDeclaration","scope":642,"src":"7019:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":626,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":629,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:4","nodeType":"VariableDeclaration","scope":642,"src":"7033:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":628,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":634,"initialValue":{"arguments":[{"id":632,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"7080:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":630,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"7060:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7067:12:4","memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:4","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7060:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:4"},{"expression":{"arguments":[{"id":636,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"7129:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":637,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"7137:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":638,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"7146:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":639,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"7158:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":635,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"7102:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7102:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":625,"id":641,"nodeType":"Return","src":"7095:76:4"}]},"documentation":{"id":615,"nodeType":"StructuredDocumentation","src":"6673:175:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":643,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:4","nodeType":"FunctionDefinition","parameters":{"id":622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":617,"mutability":"mutable","name":"target","nameLocation":"6900:6:4","nodeType":"VariableDeclaration","scope":643,"src":"6892:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":616,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":619,"mutability":"mutable","name":"data","nameLocation":"6929:4:4","nodeType":"VariableDeclaration","scope":643,"src":"6916:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":618,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":621,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:4","nodeType":"VariableDeclaration","scope":643,"src":"6943:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":620,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:4"},"returnParameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":643,"src":"6994:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":623,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:4"},"scope":727,"src":"6853:325:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":681,"nodeType":"Block","src":"7660:434:4","statements":[{"condition":{"id":657,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"7674:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":679,"nodeType":"Block","src":"8030:58:4","statements":[{"expression":{"arguments":[{"id":675,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"8052:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":676,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"8064:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":674,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"8044:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8044:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"ExpressionStatement","src":"8044:33:4"}]},"id":680,"nodeType":"IfStatement","src":"7670:418:4","trueBody":{"id":673,"nodeType":"Block","src":"7683:341:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":658,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"7701:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7712:6:4","memberName":"length","nodeType":"MemberAccess","src":"7701:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":670,"nodeType":"IfStatement","src":"7697:286:4","trueBody":{"id":669,"nodeType":"Block","src":"7725:258:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":664,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"7927:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":663,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"7916:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7916:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":662,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":668,"nodeType":"ExpressionStatement","src":"7908:60:4"}]}},{"expression":{"id":671,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"8003:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":656,"id":672,"nodeType":"Return","src":"7996:17:4"}]}}]},"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"7184:277:4","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":682,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:4","nodeType":"FunctionDefinition","parameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"target","nameLocation":"7519:6:4","nodeType":"VariableDeclaration","scope":682,"src":"7511:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":648,"mutability":"mutable","name":"success","nameLocation":"7540:7:4","nodeType":"VariableDeclaration","scope":682,"src":"7535:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":647,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":650,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:4","nodeType":"VariableDeclaration","scope":682,"src":"7557:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":649,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":652,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:4","nodeType":"VariableDeclaration","scope":682,"src":"7590:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":651,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:4"},"returnParameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":682,"src":"7646:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":654,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:4"},"scope":727,"src":"7466:628:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":705,"nodeType":"Block","src":"8475:135:4","statements":[{"condition":{"id":694,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"8489:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":703,"nodeType":"Block","src":"8546:58:4","statements":[{"expression":{"arguments":[{"id":699,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"8568:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":700,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"8580:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":698,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"8560:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":702,"nodeType":"ExpressionStatement","src":"8560:33:4"}]},"id":704,"nodeType":"IfStatement","src":"8485:119:4","trueBody":{"id":697,"nodeType":"Block","src":"8498:42:4","statements":[{"expression":{"id":695,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"8519:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":693,"id":696,"nodeType":"Return","src":"8512:17:4"}]}}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"8100:210:4","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":706,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:4","nodeType":"FunctionDefinition","parameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"success","nameLocation":"8355:7:4","nodeType":"VariableDeclaration","scope":706,"src":"8350:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":684,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:4","nodeType":"VariableDeclaration","scope":706,"src":"8372:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":686,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":689,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:4","nodeType":"VariableDeclaration","scope":706,"src":"8405:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":688,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:4"},"returnParameters":{"id":693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"8461:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":691,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:4"},"scope":727,"src":"8315:295:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":725,"nodeType":"Block","src":"8699:457:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":713,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"8775:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8786:6:4","memberName":"length","nodeType":"MemberAccess","src":"8775:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":723,"nodeType":"Block","src":"9105:45:4","statements":[{"expression":{"arguments":[{"id":720,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"9126:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":719,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9119:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":722,"nodeType":"ExpressionStatement","src":"9119:20:4"}]},"id":724,"nodeType":"IfStatement","src":"8771:379:4","trueBody":{"id":718,"nodeType":"Block","src":"8798:301:4","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:4","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:4","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:4"},"nodeType":"YulFunctionCall","src":"8997:17:4"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:4","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:4"},"nodeType":"YulFunctionCall","src":"9038:19:4"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:4"},"nodeType":"YulFunctionCall","src":"9031:44:4"},"nodeType":"YulExpressionStatement","src":"9031:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":708,"isOffset":false,"isSlot":false,"src":"9003:10:4","valueSize":1},{"declaration":708,"isOffset":false,"isSlot":false,"src":"9046:10:4","valueSize":1}],"id":717,"nodeType":"InlineAssembly","src":"8947:142:4"}]}}]},"id":726,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:4","nodeType":"FunctionDefinition","parameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:4","nodeType":"VariableDeclaration","scope":726,"src":"8633:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":707,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:4","nodeType":"VariableDeclaration","scope":726,"src":"8658:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":709,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:4"},"returnParameters":{"id":712,"nodeType":"ParameterList","parameters":[],"src":"8699:0:4"},"scope":727,"src":"8616:540:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":728,"src":"194:8964:4","usedErrors":[]}],"src":"101:9058:4"},"id":4},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[1229]},"id":1230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":729,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"143:658:5","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates merkle trees that are safe\n against this attack out of the box."},"fullyImplemented":true,"id":1229,"linearizedBaseContracts":[1229],"name":"MerkleProof","nameLocation":"810:11:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":750,"nodeType":"Block","src":"1283:57:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":744,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"1313:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":745,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"1320:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":743,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"1300:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1300:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":747,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"1329:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1300:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":742,"id":749,"nodeType":"Return","src":"1293:40:5"}]},"documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"828:323:5","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":751,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1165:6:5","nodeType":"FunctionDefinition","parameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"proof","nameLocation":"1198:5:5","nodeType":"VariableDeclaration","scope":751,"src":"1181:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1181:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":733,"nodeType":"ArrayTypeName","src":"1181:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":736,"mutability":"mutable","name":"root","nameLocation":"1221:4:5","nodeType":"VariableDeclaration","scope":751,"src":"1213:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1213:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":738,"mutability":"mutable","name":"leaf","nameLocation":"1243:4:5","nodeType":"VariableDeclaration","scope":751,"src":"1235:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1235:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1171:82:5"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":751,"src":"1277:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":740,"name":"bool","nodeType":"ElementaryTypeName","src":"1277:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1276:6:5"},"scope":1229,"src":"1156:184:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":771,"nodeType":"Block","src":"1578:65:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":765,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"1616:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":766,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"1623:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":764,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"1595:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1595:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":768,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"1632:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1595:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":763,"id":770,"nodeType":"Return","src":"1588:48:5"}]},"documentation":{"id":752,"nodeType":"StructuredDocumentation","src":"1346:90:5","text":" @dev Calldata version of {verify}\n _Available since v4.7._"},"id":772,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"1450:14:5","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"proof","nameLocation":"1493:5:5","nodeType":"VariableDeclaration","scope":772,"src":"1474:24:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":753,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1474:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":754,"nodeType":"ArrayTypeName","src":"1474:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"root","nameLocation":"1516:4:5","nodeType":"VariableDeclaration","scope":772,"src":"1508:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1508:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"leaf","nameLocation":"1538:4:5","nodeType":"VariableDeclaration","scope":772,"src":"1530:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1530:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1464:84:5"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":772,"src":"1572:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":761,"name":"bool","nodeType":"ElementaryTypeName","src":"1572:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1571:6:5"},"scope":1229,"src":"1441:202:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":811,"nodeType":"Block","src":"2086:198:5","statements":[{"assignments":[784],"declarations":[{"constant":false,"id":784,"mutability":"mutable","name":"computedHash","nameLocation":"2104:12:5","nodeType":"VariableDeclaration","scope":811,"src":"2096:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2096:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":786,"initialValue":{"id":785,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"2119:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2096:27:5"},{"body":{"id":807,"nodeType":"Block","src":"2176:73:5","statements":[{"expression":{"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":798,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"2190:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":800,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"2215:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":801,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"2229:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":803,"indexExpression":{"id":802,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"2235:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2229:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":799,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"2205:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2205:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2190:48:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":806,"nodeType":"ExpressionStatement","src":"2190:48:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":791,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"2153:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":792,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"2157:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2163:6:5","memberName":"length","nodeType":"MemberAccess","src":"2157:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2153:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":808,"initializationExpression":{"assignments":[788],"declarations":[{"constant":false,"id":788,"mutability":"mutable","name":"i","nameLocation":"2146:1:5","nodeType":"VariableDeclaration","scope":808,"src":"2138:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":787,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":790,"initialValue":{"hexValue":"30","id":789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2150:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2138:13:5"},"loopExpression":{"expression":{"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2171:3:5","subExpression":{"id":795,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"2171:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":797,"nodeType":"ExpressionStatement","src":"2171:3:5"},"nodeType":"ForStatement","src":"2133:116:5"},{"expression":{"id":809,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"2265:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":782,"id":810,"nodeType":"Return","src":"2258:19:5"}]},"documentation":{"id":773,"nodeType":"StructuredDocumentation","src":"1649:340:5","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"},"id":812,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"2003:12:5","nodeType":"FunctionDefinition","parameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"proof","nameLocation":"2033:5:5","nodeType":"VariableDeclaration","scope":812,"src":"2016:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":774,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2016:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":775,"nodeType":"ArrayTypeName","src":"2016:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"leaf","nameLocation":"2048:4:5","nodeType":"VariableDeclaration","scope":812,"src":"2040:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":777,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2040:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2015:38:5"},"returnParameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":812,"src":"2077:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":780,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2077:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2076:9:5"},"scope":1229,"src":"1994:290:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":851,"nodeType":"Block","src":"2493:198:5","statements":[{"assignments":[824],"declarations":[{"constant":false,"id":824,"mutability":"mutable","name":"computedHash","nameLocation":"2511:12:5","nodeType":"VariableDeclaration","scope":851,"src":"2503:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2503:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":826,"initialValue":{"id":825,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"2526:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2503:27:5"},{"body":{"id":847,"nodeType":"Block","src":"2583:73:5","statements":[{"expression":{"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":838,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"2597:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":840,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"2622:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":841,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"2636:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":843,"indexExpression":{"id":842,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"2642:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2636:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":839,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"2612:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2612:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2597:48:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":846,"nodeType":"ExpressionStatement","src":"2597:48:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"2560:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":832,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"2564:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2570:6:5","memberName":"length","nodeType":"MemberAccess","src":"2564:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2560:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":848,"initializationExpression":{"assignments":[828],"declarations":[{"constant":false,"id":828,"mutability":"mutable","name":"i","nameLocation":"2553:1:5","nodeType":"VariableDeclaration","scope":848,"src":"2545:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"2545:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":830,"initialValue":{"hexValue":"30","id":829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2557:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2545:13:5"},"loopExpression":{"expression":{"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2578:3:5","subExpression":{"id":835,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"2578:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":837,"nodeType":"ExpressionStatement","src":"2578:3:5"},"nodeType":"ForStatement","src":"2540:116:5"},{"expression":{"id":849,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"2672:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":822,"id":850,"nodeType":"Return","src":"2665:19:5"}]},"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"2290:96:5","text":" @dev Calldata version of {processProof}\n _Available since v4.7._"},"id":852,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"2400:20:5","nodeType":"FunctionDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"proof","nameLocation":"2440:5:5","nodeType":"VariableDeclaration","scope":852,"src":"2421:24:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2421:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":815,"nodeType":"ArrayTypeName","src":"2421:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":818,"mutability":"mutable","name":"leaf","nameLocation":"2455:4:5","nodeType":"VariableDeclaration","scope":852,"src":"2447:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2447:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2420:40:5"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":852,"src":"2484:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2484:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2483:9:5"},"scope":1229,"src":"2391:300:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":877,"nodeType":"Block","src":"3234:76:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":870,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"3269:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":871,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"3276:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":872,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"3288:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":869,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"3251:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3251:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":874,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"3299:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3251:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":868,"id":876,"nodeType":"Return","src":"3244:59:5"}]},"documentation":{"id":853,"nodeType":"StructuredDocumentation","src":"2697:350:5","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":878,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"3061:16:5","nodeType":"FunctionDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"proof","nameLocation":"3104:5:5","nodeType":"VariableDeclaration","scope":878,"src":"3087:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":854,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3087:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":855,"nodeType":"ArrayTypeName","src":"3087:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"proofFlags","nameLocation":"3133:10:5","nodeType":"VariableDeclaration","scope":878,"src":"3119:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":857,"name":"bool","nodeType":"ElementaryTypeName","src":"3119:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":858,"nodeType":"ArrayTypeName","src":"3119:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":861,"mutability":"mutable","name":"root","nameLocation":"3161:4:5","nodeType":"VariableDeclaration","scope":878,"src":"3153:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3153:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"leaves","nameLocation":"3192:6:5","nodeType":"VariableDeclaration","scope":878,"src":"3175:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3175:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":863,"nodeType":"ArrayTypeName","src":"3175:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3077:127:5"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":878,"src":"3228:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":866,"name":"bool","nodeType":"ElementaryTypeName","src":"3228:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3227:6:5"},"scope":1229,"src":"3052:258:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":903,"nodeType":"Block","src":"3715:84:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":896,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"3758:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":897,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"3765:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":898,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"3777:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":895,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"3732:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3732:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":900,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"3788:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3732:60:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":894,"id":902,"nodeType":"Return","src":"3725:67:5"}]},"documentation":{"id":879,"nodeType":"StructuredDocumentation","src":"3316:200:5","text":" @dev Calldata version of {multiProofVerify}\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":904,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"3530:24:5","nodeType":"FunctionDefinition","parameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"proof","nameLocation":"3583:5:5","nodeType":"VariableDeclaration","scope":904,"src":"3564:24:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":880,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":881,"nodeType":"ArrayTypeName","src":"3564:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":885,"mutability":"mutable","name":"proofFlags","nameLocation":"3614:10:5","nodeType":"VariableDeclaration","scope":904,"src":"3598:26:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":883,"name":"bool","nodeType":"ElementaryTypeName","src":"3598:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":884,"nodeType":"ArrayTypeName","src":"3598:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":887,"mutability":"mutable","name":"root","nameLocation":"3642:4:5","nodeType":"VariableDeclaration","scope":904,"src":"3634:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3634:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":890,"mutability":"mutable","name":"leaves","nameLocation":"3673:6:5","nodeType":"VariableDeclaration","scope":904,"src":"3656:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":888,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3656:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":889,"nodeType":"ArrayTypeName","src":"3656:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3554:131:5"},"returnParameters":{"id":894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":904,"src":"3709:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":892,"name":"bool","nodeType":"ElementaryTypeName","src":"3709:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3708:6:5"},"scope":1229,"src":"3521:278:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1048,"nodeType":"Block","src":"4753:1860:5","statements":[{"assignments":[920],"declarations":[{"constant":false,"id":920,"mutability":"mutable","name":"leavesLen","nameLocation":"5144:9:5","nodeType":"VariableDeclaration","scope":1048,"src":"5136:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"5136:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":923,"initialValue":{"expression":{"id":921,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"5156:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5163:6:5","memberName":"length","nodeType":"MemberAccess","src":"5156:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5136:33:5"},{"assignments":[925],"declarations":[{"constant":false,"id":925,"mutability":"mutable","name":"totalHashes","nameLocation":"5187:11:5","nodeType":"VariableDeclaration","scope":1048,"src":"5179:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":924,"name":"uint256","nodeType":"ElementaryTypeName","src":"5179:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":928,"initialValue":{"expression":{"id":926,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"5201:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5212:6:5","memberName":"length","nodeType":"MemberAccess","src":"5201:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5179:39:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":930,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"5270:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":931,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"5282:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:6:5","memberName":"length","nodeType":"MemberAccess","src":"5282:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5270:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5297:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5270:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":936,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"5302:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5270:43:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5315:33:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":929,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5262:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":940,"nodeType":"ExpressionStatement","src":"5262:87:5"},{"assignments":[945],"declarations":[{"constant":false,"id":945,"mutability":"mutable","name":"hashes","nameLocation":"5611:6:5","nodeType":"VariableDeclaration","scope":1048,"src":"5594:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":943,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5594:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":944,"nodeType":"ArrayTypeName","src":"5594:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":951,"initialValue":{"arguments":[{"id":949,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"5634:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5620:13:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5624:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":947,"nodeType":"ArrayTypeName","src":"5624:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5620:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5594:52:5"},{"assignments":[953],"declarations":[{"constant":false,"id":953,"mutability":"mutable","name":"leafPos","nameLocation":"5664:7:5","nodeType":"VariableDeclaration","scope":1048,"src":"5656:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"5656:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":955,"initialValue":{"hexValue":"30","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5674:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5656:19:5"},{"assignments":[957],"declarations":[{"constant":false,"id":957,"mutability":"mutable","name":"hashPos","nameLocation":"5693:7:5","nodeType":"VariableDeclaration","scope":1048,"src":"5685:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":956,"name":"uint256","nodeType":"ElementaryTypeName","src":"5685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":959,"initialValue":{"hexValue":"30","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5703:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5685:19:5"},{"assignments":[961],"declarations":[{"constant":false,"id":961,"mutability":"mutable","name":"proofPos","nameLocation":"5722:8:5","nodeType":"VariableDeclaration","scope":1048,"src":"5714:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"5714:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":963,"initialValue":{"hexValue":"30","id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5733:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5714:20:5"},{"body":{"id":1021,"nodeType":"Block","src":"6151:258:5","statements":[{"assignments":[975],"declarations":[{"constant":false,"id":975,"mutability":"mutable","name":"a","nameLocation":"6173:1:5","nodeType":"VariableDeclaration","scope":1021,"src":"6165:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":974,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6165:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":988,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":976,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"6177:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":977,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"6187:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6177:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":983,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"6219:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":986,"indexExpression":{"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6226:9:5","subExpression":{"id":984,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"6226:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6219:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6177:59:5","trueExpression":{"baseExpression":{"id":979,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"6199:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":982,"indexExpression":{"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6206:9:5","subExpression":{"id":980,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"6206:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6199:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6165:71:5"},{"assignments":[990],"declarations":[{"constant":false,"id":990,"mutability":"mutable","name":"b","nameLocation":"6258:1:5","nodeType":"VariableDeclaration","scope":1021,"src":"6250:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6250:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1011,"initialValue":{"condition":{"baseExpression":{"id":991,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"6262:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":993,"indexExpression":{"id":992,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"6273:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6262:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1006,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"6340:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1009,"indexExpression":{"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6346:10:5","subExpression":{"id":1007,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"6346:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6340:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6262:95:5","trueExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":994,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"6278:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":995,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"6288:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6278:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1001,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"6320:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1004,"indexExpression":{"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6327:9:5","subExpression":{"id":1002,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"6327:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6320:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6278:59:5","trueExpression":{"baseExpression":{"id":997,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"6300:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1000,"indexExpression":{"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6307:9:5","subExpression":{"id":998,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"6307:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6300:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6250:107:5"},{"expression":{"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1012,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"6371:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1014,"indexExpression":{"id":1013,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"6378:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6371:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1016,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"6393:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1017,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"6396:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1015,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"6383:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6383:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6371:27:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1020,"nodeType":"ExpressionStatement","src":"6371:27:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":968,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"6129:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":969,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"6133:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6129:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1022,"initializationExpression":{"assignments":[965],"declarations":[{"constant":false,"id":965,"mutability":"mutable","name":"i","nameLocation":"6122:1:5","nodeType":"VariableDeclaration","scope":1022,"src":"6114:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"6114:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":967,"initialValue":{"hexValue":"30","id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6126:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6114:13:5"},"loopExpression":{"expression":{"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6146:3:5","subExpression":{"id":971,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"6146:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":973,"nodeType":"ExpressionStatement","src":"6146:3:5"},"nodeType":"ForStatement","src":"6109:300:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1023,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"6423:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6437:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6423:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1033,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"6505:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6517:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6505:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1045,"nodeType":"Block","src":"6567:40:5","statements":[{"expression":{"baseExpression":{"id":1041,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"6588:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1043,"indexExpression":{"hexValue":"30","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6594:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6588:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":918,"id":1044,"nodeType":"Return","src":"6581:15:5"}]},"id":1046,"nodeType":"IfStatement","src":"6501:106:5","trueBody":{"id":1040,"nodeType":"Block","src":"6520:41:5","statements":[{"expression":{"baseExpression":{"id":1036,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"6541:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1038,"indexExpression":{"hexValue":"30","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6548:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6541:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":918,"id":1039,"nodeType":"Return","src":"6534:16:5"}]}},"id":1047,"nodeType":"IfStatement","src":"6419:188:5","trueBody":{"id":1032,"nodeType":"Block","src":"6440:55:5","statements":[{"expression":{"baseExpression":{"id":1026,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"6461:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1030,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1027,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"6468:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6482:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6468:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6461:23:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":918,"id":1031,"nodeType":"Return","src":"6454:30:5"}]}}]},"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"3805:768:5","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n _Available since v4.7._"},"id":1049,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"4587:17:5","nodeType":"FunctionDefinition","parameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":908,"mutability":"mutable","name":"proof","nameLocation":"4631:5:5","nodeType":"VariableDeclaration","scope":1049,"src":"4614:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4614:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":907,"nodeType":"ArrayTypeName","src":"4614:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":911,"mutability":"mutable","name":"proofFlags","nameLocation":"4660:10:5","nodeType":"VariableDeclaration","scope":1049,"src":"4646:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":909,"name":"bool","nodeType":"ElementaryTypeName","src":"4646:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":910,"nodeType":"ArrayTypeName","src":"4646:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"leaves","nameLocation":"4697:6:5","nodeType":"VariableDeclaration","scope":1049,"src":"4680:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4680:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":913,"nodeType":"ArrayTypeName","src":"4680:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4604:105:5"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"merkleRoot","nameLocation":"4741:10:5","nodeType":"VariableDeclaration","scope":1049,"src":"4733:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":916,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4733:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4732:20:5"},"scope":1229,"src":"4578:2035:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1193,"nodeType":"Block","src":"7013:1860:5","statements":[{"assignments":[1065],"declarations":[{"constant":false,"id":1065,"mutability":"mutable","name":"leavesLen","nameLocation":"7404:9:5","nodeType":"VariableDeclaration","scope":1193,"src":"7396:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1064,"name":"uint256","nodeType":"ElementaryTypeName","src":"7396:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1068,"initialValue":{"expression":{"id":1066,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"7416:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7423:6:5","memberName":"length","nodeType":"MemberAccess","src":"7416:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7396:33:5"},{"assignments":[1070],"declarations":[{"constant":false,"id":1070,"mutability":"mutable","name":"totalHashes","nameLocation":"7447:11:5","nodeType":"VariableDeclaration","scope":1193,"src":"7439:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"7439:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1073,"initialValue":{"expression":{"id":1071,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"7461:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7472:6:5","memberName":"length","nodeType":"MemberAccess","src":"7461:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7439:39:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1075,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"7530:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1076,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"7542:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7548:6:5","memberName":"length","nodeType":"MemberAccess","src":"7542:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7530:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7557:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7530:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1081,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"7562:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7530:43:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7575:33:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":1074,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7522:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7522:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1085,"nodeType":"ExpressionStatement","src":"7522:87:5"},{"assignments":[1090],"declarations":[{"constant":false,"id":1090,"mutability":"mutable","name":"hashes","nameLocation":"7871:6:5","nodeType":"VariableDeclaration","scope":1193,"src":"7854:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7854:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1089,"nodeType":"ArrayTypeName","src":"7854:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1096,"initialValue":{"arguments":[{"id":1094,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"7894:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7880:13:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7884:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1092,"nodeType":"ArrayTypeName","src":"7884:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7880:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7854:52:5"},{"assignments":[1098],"declarations":[{"constant":false,"id":1098,"mutability":"mutable","name":"leafPos","nameLocation":"7924:7:5","nodeType":"VariableDeclaration","scope":1193,"src":"7916:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"7916:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1100,"initialValue":{"hexValue":"30","id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7934:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7916:19:5"},{"assignments":[1102],"declarations":[{"constant":false,"id":1102,"mutability":"mutable","name":"hashPos","nameLocation":"7953:7:5","nodeType":"VariableDeclaration","scope":1193,"src":"7945:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1101,"name":"uint256","nodeType":"ElementaryTypeName","src":"7945:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1104,"initialValue":{"hexValue":"30","id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7945:19:5"},{"assignments":[1106],"declarations":[{"constant":false,"id":1106,"mutability":"mutable","name":"proofPos","nameLocation":"7982:8:5","nodeType":"VariableDeclaration","scope":1193,"src":"7974:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"7974:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1108,"initialValue":{"hexValue":"30","id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7993:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7974:20:5"},{"body":{"id":1166,"nodeType":"Block","src":"8411:258:5","statements":[{"assignments":[1120],"declarations":[{"constant":false,"id":1120,"mutability":"mutable","name":"a","nameLocation":"8433:1:5","nodeType":"VariableDeclaration","scope":1166,"src":"8425:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8425:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1133,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1121,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"8437:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1122,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"8447:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8437:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1128,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"8479:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1131,"indexExpression":{"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8486:9:5","subExpression":{"id":1129,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"8486:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8479:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:59:5","trueExpression":{"baseExpression":{"id":1124,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"8459:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1127,"indexExpression":{"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8466:9:5","subExpression":{"id":1125,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"8466:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8459:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8425:71:5"},{"assignments":[1135],"declarations":[{"constant":false,"id":1135,"mutability":"mutable","name":"b","nameLocation":"8518:1:5","nodeType":"VariableDeclaration","scope":1166,"src":"8510:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8510:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1156,"initialValue":{"condition":{"baseExpression":{"id":1136,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"8522:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1138,"indexExpression":{"id":1137,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"8533:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8522:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1151,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"8600:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1154,"indexExpression":{"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8606:10:5","subExpression":{"id":1152,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"8606:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8600:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8522:95:5","trueExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1139,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"8538:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1140,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"8548:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8538:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1146,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"8580:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1149,"indexExpression":{"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8587:9:5","subExpression":{"id":1147,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"8587:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8580:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8538:59:5","trueExpression":{"baseExpression":{"id":1142,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"8560:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1145,"indexExpression":{"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8567:9:5","subExpression":{"id":1143,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"8567:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8560:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8510:107:5"},{"expression":{"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1157,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"8631:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1159,"indexExpression":{"id":1158,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"8638:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8631:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1161,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"8653:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1162,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"8656:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1160,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"8643:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8643:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8631:27:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1165,"nodeType":"ExpressionStatement","src":"8631:27:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1113,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"8389:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1114,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"8393:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8389:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1167,"initializationExpression":{"assignments":[1110],"declarations":[{"constant":false,"id":1110,"mutability":"mutable","name":"i","nameLocation":"8382:1:5","nodeType":"VariableDeclaration","scope":1167,"src":"8374:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1109,"name":"uint256","nodeType":"ElementaryTypeName","src":"8374:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1112,"initialValue":{"hexValue":"30","id":1111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8386:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8374:13:5"},"loopExpression":{"expression":{"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8406:3:5","subExpression":{"id":1116,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"8406:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1118,"nodeType":"ExpressionStatement","src":"8406:3:5"},"nodeType":"ForStatement","src":"8369:300:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1168,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"8683:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8683:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1178,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"8765:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8777:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8765:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1190,"nodeType":"Block","src":"8827:40:5","statements":[{"expression":{"baseExpression":{"id":1186,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"8848:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1188,"indexExpression":{"hexValue":"30","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8848:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1063,"id":1189,"nodeType":"Return","src":"8841:15:5"}]},"id":1191,"nodeType":"IfStatement","src":"8761:106:5","trueBody":{"id":1185,"nodeType":"Block","src":"8780:41:5","statements":[{"expression":{"baseExpression":{"id":1181,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"8801:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1183,"indexExpression":{"hexValue":"30","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8808:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8801:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1063,"id":1184,"nodeType":"Return","src":"8794:16:5"}]}},"id":1192,"nodeType":"IfStatement","src":"8679:188:5","trueBody":{"id":1177,"nodeType":"Block","src":"8700:55:5","statements":[{"expression":{"baseExpression":{"id":1171,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"8721:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1175,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1172,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"8728:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8742:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8728:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8721:23:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1063,"id":1176,"nodeType":"Return","src":"8714:30:5"}]}}]},"documentation":{"id":1050,"nodeType":"StructuredDocumentation","src":"6619:202:5","text":" @dev Calldata version of {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":1194,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"6835:25:5","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"proof","nameLocation":"6889:5:5","nodeType":"VariableDeclaration","scope":1194,"src":"6870:24:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6870:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1052,"nodeType":"ArrayTypeName","src":"6870:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"proofFlags","nameLocation":"6920:10:5","nodeType":"VariableDeclaration","scope":1194,"src":"6904:26:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1054,"name":"bool","nodeType":"ElementaryTypeName","src":"6904:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1055,"nodeType":"ArrayTypeName","src":"6904:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"leaves","nameLocation":"6957:6:5","nodeType":"VariableDeclaration","scope":1194,"src":"6940:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6940:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1058,"nodeType":"ArrayTypeName","src":"6940:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6860:109:5"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"merkleRoot","nameLocation":"7001:10:5","nodeType":"VariableDeclaration","scope":1194,"src":"6993:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6993:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6992:20:5"},"scope":1229,"src":"6826:2047:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1216,"nodeType":"Block","src":"8951:75:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1203,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"8968:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1204,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"8972:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8968:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1211,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"9014:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1212,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"9017:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1210,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"8999:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8999:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8968:51:5","trueExpression":{"arguments":[{"id":1207,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"8991:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1208,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"8994:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1206,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"8976:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1202,"id":1215,"nodeType":"Return","src":"8961:58:5"}]},"id":1217,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"8888:9:5","nodeType":"FunctionDefinition","parameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"a","nameLocation":"8906:1:5","nodeType":"VariableDeclaration","scope":1217,"src":"8898:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8898:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1198,"mutability":"mutable","name":"b","nameLocation":"8917:1:5","nodeType":"VariableDeclaration","scope":1217,"src":"8909:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8909:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8897:22:5"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1217,"src":"8942:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8942:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8941:9:5"},"scope":1229,"src":"8879:147:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1227,"nodeType":"Block","src":"9115:178:5","statements":[{"AST":{"nodeType":"YulBlock","src":"9177:110:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9198:4:5","type":"","value":"0x00"},{"name":"a","nodeType":"YulIdentifier","src":"9204:1:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9191:6:5"},"nodeType":"YulFunctionCall","src":"9191:15:5"},"nodeType":"YulExpressionStatement","src":"9191:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9226:4:5","type":"","value":"0x20"},{"name":"b","nodeType":"YulIdentifier","src":"9232:1:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9219:6:5"},"nodeType":"YulFunctionCall","src":"9219:15:5"},"nodeType":"YulExpressionStatement","src":"9219:15:5"},{"nodeType":"YulAssignment","src":"9247:30:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9266:4:5","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"9272:4:5","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9256:9:5"},"nodeType":"YulFunctionCall","src":"9256:21:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9247:5:5"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1219,"isOffset":false,"isSlot":false,"src":"9204:1:5","valueSize":1},{"declaration":1221,"isOffset":false,"isSlot":false,"src":"9232:1:5","valueSize":1},{"declaration":1224,"isOffset":false,"isSlot":false,"src":"9247:5:5","valueSize":1}],"id":1226,"nodeType":"InlineAssembly","src":"9168:119:5"}]},"id":1228,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"9041:14:5","nodeType":"FunctionDefinition","parameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"a","nameLocation":"9064:1:5","nodeType":"VariableDeclaration","scope":1228,"src":"9056:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9056:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"b","nameLocation":"9075:1:5","nodeType":"VariableDeclaration","scope":1228,"src":"9067:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9067:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9055:22:5"},"returnParameters":{"id":1225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"mutability":"mutable","name":"value","nameLocation":"9108:5:5","nodeType":"VariableDeclaration","scope":1228,"src":"9100:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9100:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9099:15:5"},"scope":1229,"src":"9032:261:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1230,"src":"802:8493:5","usedErrors":[]}],"src":"118:9178:5"},"id":5},"contracts/AirdropClaim.sol":{"ast":{"absolutePath":"contracts/AirdropClaim.sol","exportedSymbols":{"Address":[727],"AirdropClaim":[1402],"IERC20":[80],"IERC20Permit":[116],"MerkleProof":[1229],"SafeERC20":[397]},"id":1403,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":1231,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"42:31:6"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"@openzeppelin/contracts/interfaces/IERC20.sol","id":1232,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1403,"sourceUnit":3,"src":"75:55:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":1233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1403,"sourceUnit":1230,"src":"131:68:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1234,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1403,"sourceUnit":398,"src":"201:65:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"AirdropClaim","contractDependencies":[],"contractKind":"contract","documentation":{"id":1235,"nodeType":"StructuredDocumentation","src":"269:129:6","text":"@title AirdropClaim\n @notice Allows user to claim ERC20 token if part of Merkle Tree within\n owner-specified deadline."},"fullyImplemented":true,"id":1402,"linearizedBaseContracts":[1402],"name":"AirdropClaim","nameLocation":"407:12:6","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1239,"libraryName":{"id":1236,"name":"SafeERC20","nameLocations":["430:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":397,"src":"430:9:6"},"nodeType":"UsingForDirective","src":"424:27:6","typeName":{"id":1238,"nodeType":"UserDefinedTypeName","pathNode":{"id":1237,"name":"IERC20","nameLocations":["444:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":80,"src":"444:6:6"},"referencedDeclaration":80,"src":"444:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"2eb4a7ab","id":1241,"mutability":"mutable","name":"merkleRoot","nameLocation":"550:10:6","nodeType":"VariableDeclaration","scope":1402,"src":"535:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"535:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":1243,"mutability":"mutable","name":"owner","nameLocation":"639:5:6","nodeType":"VariableDeclaration","scope":1402,"src":"624:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"624:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"4d06068a","id":1246,"mutability":"mutable","name":"airdropToken","nameLocation":"712:12:6","nodeType":"VariableDeclaration","scope":1402,"src":"698:26:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"},"typeName":{"id":1245,"nodeType":"UserDefinedTypeName","pathNode":{"id":1244,"name":"IERC20","nameLocations":["698:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":80,"src":"698:6:6"},"referencedDeclaration":80,"src":"698:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"29dcb0cf","id":1248,"mutability":"mutable","name":"deadline","nameLocation":"784:8:6","nodeType":"VariableDeclaration","scope":1402,"src":"769:23:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1247,"name":"uint256","nodeType":"ElementaryTypeName","src":"769:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"73b2e80e","id":1252,"mutability":"mutable","name":"hasClaimed","nameLocation":"892:10:6","nodeType":"VariableDeclaration","scope":1402,"src":"860:42:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1251,"keyType":{"id":1249,"name":"address","nodeType":"ElementaryTypeName","src":"868:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"860:24:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1250,"name":"bool","nodeType":"ElementaryTypeName","src":"879:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"d8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a","id":1258,"name":"Claimed","nameLocation":"1034:7:6","nodeType":"EventDefinition","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1058:2:6","nodeType":"VariableDeclaration","scope":1258,"src":"1042:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1256,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1070:6:6","nodeType":"VariableDeclaration","scope":1258,"src":"1062:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"1062:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1041:36:6"},"src":"1028:50:6"},{"body":{"id":1262,"nodeType":"Block","src":"1663:29:6","statements":[]},"documentation":{"id":1259,"nodeType":"StructuredDocumentation","src":"1162:204:6","text":"notice Creates a new AirdropClaim contract\n param _merkleRoot of claimees\n param _tokenAddress address of token to be airdropped\n param _deadline number of blocks airdrop will be active"},"id":1263,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1260,"nodeType":"ParameterList","parameters":[],"src":"1660:2:6"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[],"src":"1663:0:6"},"scope":1402,"src":"1649:43:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1334,"nodeType":"Block","src":"2162:612:6","statements":[{"expression":{"arguments":[{"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2255:16:6","subExpression":{"baseExpression":{"id":1275,"name":"hasClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"2256:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1277,"indexExpression":{"id":1276,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"2267:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2256:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41697264726f70436c61696d3a20416c726561647920636c61696d6564","id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2273:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dc03f8b8317fbb477c657e10f8d356262b327e968700d1702cc10cb0bdcffd5","typeString":"literal_string \"AirdropClaim: Already claimed\""},"value":"AirdropClaim: Already claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dc03f8b8317fbb477c657e10f8d356262b327e968700d1702cc10cb0bdcffd5","typeString":"literal_string \"AirdropClaim: Already claimed\""}],"id":1274,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2247:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2247:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1281,"nodeType":"ExpressionStatement","src":"2247:58:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1283,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2319:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2325:6:6","memberName":"number","nodeType":"MemberAccess","src":"2319:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1285,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"2335:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2319:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41697264726f70436c61696d3a20436c61696d696e6720706572696f642065787069726564","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2345:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_f349606239a9234eee39e49501e0b425b2a8ef0c51f02761a11981a9bcb2f66f","typeString":"literal_string \"AirdropClaim: Claiming period expired\""},"value":"AirdropClaim: Claiming period expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f349606239a9234eee39e49501e0b425b2a8ef0c51f02761a11981a9bcb2f66f","typeString":"literal_string \"AirdropClaim: Claiming period expired\""}],"id":1282,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2311:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2311:74:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1289,"nodeType":"ExpressionStatement","src":"2311:74:6"},{"assignments":[1291],"declarations":[{"constant":false,"id":1291,"mutability":"mutable","name":"leaf","nameLocation":"2453:4:6","nodeType":"VariableDeclaration","scope":1334,"src":"2445:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1290,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2445:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1299,"initialValue":{"arguments":[{"arguments":[{"id":1295,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"2487:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1296,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"2492:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1293,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2470:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2474:12:6","memberName":"encodePacked","nodeType":"MemberAccess","src":"2470:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2470:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1292,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2460:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2445:56:6"},{"assignments":[1301],"declarations":[{"constant":false,"id":1301,"mutability":"mutable","name":"isValidLeaf","nameLocation":"2512:11:6","nodeType":"VariableDeclaration","scope":1334,"src":"2507:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1300,"name":"bool","nodeType":"ElementaryTypeName","src":"2507:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1308,"initialValue":{"arguments":[{"id":1304,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"2545:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1305,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"2553:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1306,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"2565:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1302,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"2526:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1229_$","typeString":"type(library MerkleProof)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2538:6:6","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":751,"src":"2526:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2507:63:6"},{"condition":{"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2580:12:6","subExpression":{"id":1309,"name":"isValidLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"2581:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1315,"nodeType":"IfStatement","src":"2576:57:6","trueBody":{"expression":{"arguments":[{"hexValue":"41697264726f70436c61696d3a20496e76616c69642041646472657373","id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2601:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_618ec091330d38232431c90a4e5ff4f783e70a9855128944a94a2bdaabe7bed1","typeString":"literal_string \"AirdropClaim: Invalid Address\""},"value":"AirdropClaim: Invalid Address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_618ec091330d38232431c90a4e5ff4f783e70a9855128944a94a2bdaabe7bed1","typeString":"literal_string \"AirdropClaim: Invalid Address\""}],"id":1311,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2594:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2594:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1314,"nodeType":"ExpressionStatement","src":"2594:39:6"}},{"expression":{"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1316,"name":"hasClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"2670:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1318,"indexExpression":{"id":1317,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"2681:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2670:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2688:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2670:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1321,"nodeType":"ExpressionStatement","src":"2670:22:6"},{"expression":{"arguments":[{"id":1325,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"2724:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1326,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"2729:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1322,"name":"airdropToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"2698:12:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2711:12:6","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":148,"src":"2698:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$80_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$80_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2698:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1328,"nodeType":"ExpressionStatement","src":"2698:39:6"},{"eventCall":{"arguments":[{"id":1330,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"2756:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1331,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"2761:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1329,"name":"Claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"2748:7:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2748:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1333,"nodeType":"EmitStatement","src":"2743:26:6"}]},"documentation":{"id":1264,"nodeType":"StructuredDocumentation","src":"1776:302:6","text":"@notice Allows user to claim token if address is part of merkle tree\n @dev A valid claim should revert if contract has insufficient funds\n @param _to address of claimee\n @param _amount of tokens owed to claimee\n @param _proof merkle proof to prove address and amount are in tree"},"functionSelector":"3d13f874","id":1335,"implemented":true,"kind":"function","modifiers":[],"name":"claim","nameLocation":"2090:5:6","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"_to","nameLocation":"2104:3:6","nodeType":"VariableDeclaration","scope":1335,"src":"2096:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"2096:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"_amount","nameLocation":"2117:7:6","nodeType":"VariableDeclaration","scope":1335,"src":"2109:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"2109:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"_proof","nameLocation":"2145:6:6","nodeType":"VariableDeclaration","scope":1335,"src":"2126:25:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2126:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1270,"nodeType":"ArrayTypeName","src":"2126:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2095:57:6"},"returnParameters":{"id":1273,"nodeType":"ParameterList","parameters":[],"src":"2162:0:6"},"scope":1402,"src":"2081:693:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1353,"nodeType":"Block","src":"3024:76:6","statements":[{"expression":{"arguments":[{"expression":{"id":1344,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3060:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3064:6:6","memberName":"sender","nodeType":"MemberAccess","src":"3060:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1348,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3080:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropClaim_$1402","typeString":"contract AirdropClaim"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AirdropClaim_$1402","typeString":"contract AirdropClaim"}],"id":1347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3072:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1346,"name":"address","nodeType":"ElementaryTypeName","src":"3072:7:6","typeDescriptions":{}}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3072:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1350,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"3087:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1341,"name":"airdropToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"3030:12:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3043:16:6","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":174,"src":"3030:29:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$80_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$80_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3030:65:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1352,"nodeType":"ExpressionStatement","src":"3030:65:6"}]},"documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"2778:195:6","text":"@notice Allows token deployer to deposit ERC20 token to be airdropped\n @dev Airdrop contract must be funded prior to claiming\n @param _amount is the number of tokens to be deposited"},"functionSelector":"b79092fd","id":1354,"implemented":true,"kind":"function","modifiers":[],"name":"depositERC20","nameLocation":"2985:12:6","nodeType":"FunctionDefinition","parameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"_amount","nameLocation":"3006:7:6","nodeType":"VariableDeclaration","scope":1354,"src":"2998:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"2998:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2997:17:6"},"returnParameters":{"id":1340,"nodeType":"ParameterList","parameters":[],"src":"3024:0:6"},"scope":1402,"src":"2976:124:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1392,"nodeType":"Block","src":"3336:448:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1359,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3424:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3428:6:6","memberName":"sender","nodeType":"MemberAccess","src":"3424:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1361,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"3438:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3424:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41697264726f70436c61696d3a204f6e6c79206f776e65722063616e207265636f76657220746f6b656e73","id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3445:45:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b937f640c8689e153f396d43b89a366de8938ad7ec363142bf8fa217b1e6980","typeString":"literal_string \"AirdropClaim: Only owner can recover tokens\""},"value":"AirdropClaim: Only owner can recover tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b937f640c8689e153f396d43b89a366de8938ad7ec363142bf8fa217b1e6980","typeString":"literal_string \"AirdropClaim: Only owner can recover tokens\""}],"id":1358,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3416:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1365,"nodeType":"ExpressionStatement","src":"3416:75:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1367,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3505:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3511:6:6","memberName":"number","nodeType":"MemberAccess","src":"3505:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1369,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"3520:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3505:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41697264726f70436c61696d3a2041697264726f70207374696c6c20616374697665","id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3530:36:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_813b76783a8d6b30dcbad16773ab780816fefb3c6a5b4a6e32e4c5513d3b3924","typeString":"literal_string \"AirdropClaim: Airdrop still active\""},"value":"AirdropClaim: Airdrop still active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_813b76783a8d6b30dcbad16773ab780816fefb3c6a5b4a6e32e4c5513d3b3924","typeString":"literal_string \"AirdropClaim: Airdrop still active\""}],"id":1366,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3497:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3497:70:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1373,"nodeType":"ExpressionStatement","src":"3497:70:6"},{"assignments":[1375],"declarations":[{"constant":false,"id":1375,"mutability":"mutable","name":"recoverBalance","nameLocation":"3621:14:6","nodeType":"VariableDeclaration","scope":1392,"src":"3613:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1374,"name":"uint256","nodeType":"ElementaryTypeName","src":"3613:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1383,"initialValue":{"arguments":[{"arguments":[{"id":1380,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3670:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropClaim_$1402","typeString":"contract AirdropClaim"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AirdropClaim_$1402","typeString":"contract AirdropClaim"}],"id":1379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3662:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1378,"name":"address","nodeType":"ElementaryTypeName","src":"3662:7:6","typeDescriptions":{}}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3662:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1376,"name":"airdropToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"3639:12:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3652:9:6","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":37,"src":"3639:22:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3639:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3613:63:6"},{"expression":{"arguments":[{"expression":{"id":1387,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3752:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3756:6:6","memberName":"sender","nodeType":"MemberAccess","src":"3752:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1389,"name":"recoverBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"3764:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1384,"name":"airdropToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"3726:12:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$80","typeString":"contract IERC20"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3739:12:6","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":148,"src":"3726:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$80_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$80_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3726:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1391,"nodeType":"ExpressionStatement","src":"3726:53:6"}]},"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"3190:110:6","text":"@notice Allows owner to recover unclaimed ERC20 tokens deposited to contract \n after airdrop deadline"},"functionSelector":"7c0f1ee7","id":1393,"implemented":true,"kind":"function","modifiers":[],"name":"recoverERC20","nameLocation":"3312:12:6","nodeType":"FunctionDefinition","parameters":{"id":1356,"nodeType":"ParameterList","parameters":[],"src":"3324:2:6"},"returnParameters":{"id":1357,"nodeType":"ParameterList","parameters":[],"src":"3336:0:6"},"scope":1402,"src":"3303:481:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1400,"nodeType":"Block","src":"3861:19:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1397,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3867:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3867:8:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1399,"nodeType":"ExpressionStatement","src":"3867:8:6"}]},"documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"3788:43:6","text":"@notice Prevent accidental ETH deposits"},"id":1401,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1395,"nodeType":"ParameterList","parameters":[],"src":"3841:2:6"},"returnParameters":{"id":1396,"nodeType":"ParameterList","parameters":[],"src":"3861:0:6"},"scope":1402,"src":"3834:46:6","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1403,"src":"398:3484:6","usedErrors":[]}],"src":"42:3840:6"},"id":6}},"contracts":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206cf88f5263029175b3545a48eae10b12554cc86876c6445b3e4e83cc514c8f4264736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xF88F5263029175B3545A48EAE1 SIGNEXTEND SLT SSTORE 0x4C 0xC8 PUSH9 0x76C6445B3E4E83CC51 0x4C DUP16 TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"707:3748:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206cf88f5263029175b3545a48eae10b12554cc86876c6445b3e4e83cc514c8f4264736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xF88F5263029175B3545A48EAE1 SIGNEXTEND SLT SSTORE 0x4C 0xC8 PUSH9 0x76C6445B3E4E83CC51 0x4C DUP16 TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"707:3748:3:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ JUMP 0xF7 PUSH23 0x7F46F239DA11F81368573B480F6D8DE2E2A321DADF5BCD PUSH6 0xD1C39D756473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"194:8964:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ JUMP 0xF7 PUSH23 0x7F46F239DA11F81368573B480F6D8DE2E2A321DADF5BCD PUSH6 0xD1C39D756473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"194:8964:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200e8f6ac0551899e77f8d743bcbb4c357244f8d67c63915a7fcf89c1134848e9264736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE DUP16 PUSH11 0xC0551899E77F8D743BCBB4 0xC3 JUMPI 0x24 0x4F DUP14 PUSH8 0xC63915A7FCF89C11 CALLVALUE DUP5 DUP15 SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"802:8493:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200e8f6ac0551899e77f8d743bcbb4c357244f8d67c63915a7fcf89c1134848e9264736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE DUP16 PUSH11 0xC0551899E77F8D743BCBB4 0xC3 JUMPI 0x24 0x4F DUP14 PUSH8 0xC63915A7FCF89C11 CALLVALUE DUP5 DUP15 SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"802:8493:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates merkle trees that are safe against this attack out of the box.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xd466e8b07f4c6220eac16da5127f3ff142e65f0c15c03c7d38f257b02c8585e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6b3cab69f655e40117bbdd8e68d7423f26d1b24248fb189c295f08de8940616\",\"dweb:/ipfs/QmWoyRthsBDMa7gJpH5UCjpa8uNUQfyaGbSgY3uvhBH9F3\"]}},\"version\":1}"}},"contracts/AirdropClaim.sol":{"AirdropClaim":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Claimed","type":"event"},{"inputs":[],"name":"airdropToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes32[]","name":"_proof","type":"bytes32[]"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"deadline","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"depositERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"hasClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"merkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"recoverERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_1263":{"entryPoint":null,"id":1263,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506115ef806100206000396000f3fe60806040526004361061007f5760003560e01c806373b2e80e1161004e57806373b2e80e146101385780637c0f1ee7146101755780638da5cb5b1461018c578063b79092fd146101b757610089565b806329dcb0cf1461008e5780632eb4a7ab146100b95780633d13f874146100e45780634d06068a1461010d57610089565b3661008957600080fd5b600080fd5b34801561009a57600080fd5b506100a36101e0565b6040516100b09190610b65565b60405180910390f35b3480156100c557600080fd5b506100ce6101e6565b6040516100db9190610b99565b60405180910390f35b3480156100f057600080fd5b5061010b60048036038101906101069190610cad565b6101ec565b005b34801561011957600080fd5b50610122610478565b60405161012f9190610d80565b60405180910390f35b34801561014457600080fd5b5061015f600480360381019061015a9190610d9b565b61049e565b60405161016c9190610de3565b60405180910390f35b34801561018157600080fd5b5061018a6104be565b005b34801561019857600080fd5b506101a1610682565b6040516101ae9190610e0d565b60405180910390f35b3480156101c357600080fd5b506101de60048036038101906101d99190610e28565b6106a8565b005b60035481565b60005481565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610279576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027090610eb2565b60405180910390fd5b6003544311156102be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b590610f44565b60405180910390fd5b600084846040516020016102d3929190610fcd565b604051602081830303815290604052805190602001209050600061033b848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050600054846106fa565b90508061037d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037490611045565b60405180910390fd5b6001600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506104228686600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166107119092919063ffffffff16565b8573ffffffffffffffffffffffffffffffffffffffff167fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a866040516104689190610b65565b60405180910390a2505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461054e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610545906110d7565b60405180910390fd5b6003544311610592576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058990611169565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105ef9190610e0d565b602060405180830381865afa15801561060c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610630919061119e565b905061067f3382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166107119092919063ffffffff16565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106f7333083600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610797909392919063ffffffff16565b50565b6000826107078584610820565b1490509392505050565b6107928363a9059cbb60e01b84846040516024016107309291906111cb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610876565b505050565b61081a846323b872dd60e01b8585856040516024016107b8939291906111f4565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610876565b50505050565b60008082905060005b845181101561086b57610856828683815181106108495761084861122b565b5b602002602001015161093d565b9150808061086390611289565b915050610829565b508091505092915050565b60006108d8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166109689092919063ffffffff16565b905060008151111561093857808060200190518101906108f891906112fd565b610937576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092e9061139c565b60405180910390fd5b5b505050565b6000818310610955576109508284610980565b610960565b61095f8383610980565b5b905092915050565b60606109778484600085610997565b90509392505050565b600082600052816020526040600020905092915050565b6060824710156109dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d39061142e565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610a0591906114bf565b60006040518083038185875af1925050503d8060008114610a42576040519150601f19603f3d011682016040523d82523d6000602084013e610a47565b606091505b5091509150610a5887838387610a64565b92505050949350505050565b60608315610ac6576000835103610abe57610a7e85610ad9565b610abd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab490611522565b60405180910390fd5b5b829050610ad1565b610ad08383610afc565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115610b0f5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b439190611597565b60405180910390fd5b6000819050919050565b610b5f81610b4c565b82525050565b6000602082019050610b7a6000830184610b56565b92915050565b6000819050919050565b610b9381610b80565b82525050565b6000602082019050610bae6000830184610b8a565b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610be982610bbe565b9050919050565b610bf981610bde565b8114610c0457600080fd5b50565b600081359050610c1681610bf0565b92915050565b610c2581610b4c565b8114610c3057600080fd5b50565b600081359050610c4281610c1c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610c6d57610c6c610c48565b5b8235905067ffffffffffffffff811115610c8a57610c89610c4d565b5b602083019150836020820283011115610ca657610ca5610c52565b5b9250929050565b60008060008060608587031215610cc757610cc6610bb4565b5b6000610cd587828801610c07565b9450506020610ce687828801610c33565b935050604085013567ffffffffffffffff811115610d0757610d06610bb9565b5b610d1387828801610c57565b925092505092959194509250565b6000819050919050565b6000610d46610d41610d3c84610bbe565b610d21565b610bbe565b9050919050565b6000610d5882610d2b565b9050919050565b6000610d6a82610d4d565b9050919050565b610d7a81610d5f565b82525050565b6000602082019050610d956000830184610d71565b92915050565b600060208284031215610db157610db0610bb4565b5b6000610dbf84828501610c07565b91505092915050565b60008115159050919050565b610ddd81610dc8565b82525050565b6000602082019050610df86000830184610dd4565b92915050565b610e0781610bde565b82525050565b6000602082019050610e226000830184610dfe565b92915050565b600060208284031215610e3e57610e3d610bb4565b5b6000610e4c84828501610c33565b91505092915050565b600082825260208201905092915050565b7f41697264726f70436c61696d3a20416c726561647920636c61696d6564000000600082015250565b6000610e9c601d83610e55565b9150610ea782610e66565b602082019050919050565b60006020820190508181036000830152610ecb81610e8f565b9050919050565b7f41697264726f70436c61696d3a20436c61696d696e6720706572696f6420657860008201527f7069726564000000000000000000000000000000000000000000000000000000602082015250565b6000610f2e602583610e55565b9150610f3982610ed2565b604082019050919050565b60006020820190508181036000830152610f5d81610f21565b9050919050565b60008160601b9050919050565b6000610f7c82610f64565b9050919050565b6000610f8e82610f71565b9050919050565b610fa6610fa182610bde565b610f83565b82525050565b6000819050919050565b610fc7610fc282610b4c565b610fac565b82525050565b6000610fd98285610f95565b601482019150610fe98284610fb6565b6020820191508190509392505050565b7f41697264726f70436c61696d3a20496e76616c69642041646472657373000000600082015250565b600061102f601d83610e55565b915061103a82610ff9565b602082019050919050565b6000602082019050818103600083015261105e81611022565b9050919050565b7f41697264726f70436c61696d3a204f6e6c79206f776e65722063616e2072656360008201527f6f76657220746f6b656e73000000000000000000000000000000000000000000602082015250565b60006110c1602b83610e55565b91506110cc82611065565b604082019050919050565b600060208201905081810360008301526110f0816110b4565b9050919050565b7f41697264726f70436c61696d3a2041697264726f70207374696c6c206163746960008201527f7665000000000000000000000000000000000000000000000000000000000000602082015250565b6000611153602283610e55565b915061115e826110f7565b604082019050919050565b6000602082019050818103600083015261118281611146565b9050919050565b60008151905061119881610c1c565b92915050565b6000602082840312156111b4576111b3610bb4565b5b60006111c284828501611189565b91505092915050565b60006040820190506111e06000830185610dfe565b6111ed6020830184610b56565b9392505050565b60006060820190506112096000830186610dfe565b6112166020830185610dfe565b6112236040830184610b56565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061129482610b4c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112c6576112c561125a565b5b600182019050919050565b6112da81610dc8565b81146112e557600080fd5b50565b6000815190506112f7816112d1565b92915050565b60006020828403121561131357611312610bb4565b5b6000611321848285016112e8565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611386602a83610e55565b91506113918261132a565b604082019050919050565b600060208201905081810360008301526113b581611379565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611418602683610e55565b9150611423826113bc565b604082019050919050565b600060208201905081810360008301526114478161140b565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611482578082015181840152602081019050611467565b60008484015250505050565b60006114998261144e565b6114a38185611459565b93506114b3818560208601611464565b80840191505092915050565b60006114cb828461148e565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b600061150c601d83610e55565b9150611517826114d6565b602082019050919050565b6000602082019050818103600083015261153b816114ff565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b600061156982611542565b6115738185610e55565b9350611583818560208601611464565b61158c8161154d565b840191505092915050565b600060208201905081810360008301526115b1818461155e565b90509291505056fea26469706673582212203e2b5d92b5885e5e34eb865b57c066cee37717153c441ab60cf1a9b37d63eefc64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15EF DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73B2E80E GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x73B2E80E EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x7C0F1EE7 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xB79092FD EQ PUSH2 0x1B7 JUMPI PUSH2 0x89 JUMP JUMPDEST DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x3D13F874 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x4D06068A EQ PUSH2 0x10D JUMPI PUSH2 0x89 JUMP JUMPDEST CALLDATASIZE PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA3 PUSH2 0x1E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCE PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB SWAP2 SWAP1 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x106 SWAP2 SWAP1 PUSH2 0xCAD JUMP JUMPDEST PUSH2 0x1EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH2 0x4BE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A1 PUSH2 0x682 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x6A8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x279 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x270 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD NUMBER GT ISZERO PUSH2 0x2BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B5 SWAP1 PUSH2 0xF44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2D3 SWAP3 SWAP2 SWAP1 PUSH2 0xFCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x33B DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH1 0x0 SLOAD DUP5 PUSH2 0x6FA JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x37D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x422 DUP7 DUP7 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x711 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A DUP7 PUSH1 0x40 MLOAD PUSH2 0x468 SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x545 SWAP1 PUSH2 0x10D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD NUMBER GT PUSH2 0x592 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x589 SWAP1 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x630 SWAP2 SWAP1 PUSH2 0x119E JUMP JUMPDEST SWAP1 POP PUSH2 0x67F CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x711 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6F7 CALLER ADDRESS DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x797 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x707 DUP6 DUP5 PUSH2 0x820 JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x792 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x730 SWAP3 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x876 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x81A DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x7B8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x876 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x86B JUMPI PUSH2 0x856 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x849 JUMPI PUSH2 0x848 PUSH2 0x122B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x93D JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x863 SWAP1 PUSH2 0x1289 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x829 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D8 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x968 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x938 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x8F8 SWAP2 SWAP1 PUSH2 0x12FD JUMP JUMPDEST PUSH2 0x937 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92E SWAP1 PUSH2 0x139C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x955 JUMPI PUSH2 0x950 DUP3 DUP5 PUSH2 0x980 JUMP JUMPDEST PUSH2 0x960 JUMP JUMPDEST PUSH2 0x95F DUP4 DUP4 PUSH2 0x980 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x977 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x997 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x9DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D3 SWAP1 PUSH2 0x142E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA05 SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA42 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA47 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xA58 DUP8 DUP4 DUP4 DUP8 PUSH2 0xA64 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0xABE JUMPI PUSH2 0xA7E DUP6 PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0xABD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB4 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0xAD0 DUP4 DUP4 PUSH2 0xAFC JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0xB0F JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB43 SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB5F DUP2 PUSH2 0xB4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB7A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB93 DUP2 PUSH2 0xB80 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBAE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE9 DUP3 PUSH2 0xBBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBF9 DUP2 PUSH2 0xBDE JUMP JUMPDEST DUP2 EQ PUSH2 0xC04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC16 DUP2 PUSH2 0xBF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC25 DUP2 PUSH2 0xB4C JUMP JUMPDEST DUP2 EQ PUSH2 0xC30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC42 DUP2 PUSH2 0xC1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xC6D JUMPI PUSH2 0xC6C PUSH2 0xC48 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC8A JUMPI PUSH2 0xC89 PUSH2 0xC4D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xCA6 JUMPI PUSH2 0xCA5 PUSH2 0xC52 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xCC7 JUMPI PUSH2 0xCC6 PUSH2 0xBB4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCD5 DUP8 DUP3 DUP9 ADD PUSH2 0xC07 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xCE6 DUP8 DUP3 DUP9 ADD PUSH2 0xC33 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xBB9 JUMP JUMPDEST JUMPDEST PUSH2 0xD13 DUP8 DUP3 DUP9 ADD PUSH2 0xC57 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD46 PUSH2 0xD41 PUSH2 0xD3C DUP5 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0xD21 JUMP JUMPDEST PUSH2 0xBBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD58 DUP3 PUSH2 0xD2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6A DUP3 PUSH2 0xD4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD7A DUP2 PUSH2 0xD5F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD95 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB1 JUMPI PUSH2 0xDB0 PUSH2 0xBB4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDBF DUP5 DUP3 DUP6 ADD PUSH2 0xC07 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDDD DUP2 PUSH2 0xDC8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE07 DUP2 PUSH2 0xBDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE22 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3E JUMPI PUSH2 0xE3D PUSH2 0xBB4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE4C DUP5 DUP3 DUP6 ADD PUSH2 0xC33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41697264726F70436C61696D3A20416C726561647920636C61696D6564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9C PUSH1 0x1D DUP4 PUSH2 0xE55 JUMP JUMPDEST SWAP2 POP PUSH2 0xEA7 DUP3 PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xECB DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41697264726F70436C61696D3A20436C61696D696E6720706572696F64206578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7069726564000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2E PUSH1 0x25 DUP4 PUSH2 0xE55 JUMP JUMPDEST SWAP2 POP PUSH2 0xF39 DUP3 PUSH2 0xED2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF5D DUP2 PUSH2 0xF21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7C DUP3 PUSH2 0xF64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8E DUP3 PUSH2 0xF71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFA6 PUSH2 0xFA1 DUP3 PUSH2 0xBDE JUMP JUMPDEST PUSH2 0xF83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC7 PUSH2 0xFC2 DUP3 PUSH2 0xB4C JUMP JUMPDEST PUSH2 0xFAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD9 DUP3 DUP6 PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xFE9 DUP3 DUP5 PUSH2 0xFB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x41697264726F70436C61696D3A20496E76616C69642041646472657373000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102F PUSH1 0x1D DUP4 PUSH2 0xE55 JUMP JUMPDEST SWAP2 POP PUSH2 0x103A DUP3 PUSH2 0xFF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x105E DUP2 PUSH2 0x1022 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41697264726F70436C61696D3A204F6E6C79206F776E65722063616E20726563 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F76657220746F6B656E73000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C1 PUSH1 0x2B DUP4 PUSH2 0xE55 JUMP JUMPDEST SWAP2 POP PUSH2 0x10CC DUP3 PUSH2 0x1065 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10F0 DUP2 PUSH2 0x10B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41697264726F70436C61696D3A2041697264726F70207374696C6C2061637469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7665000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1153 PUSH1 0x22 DUP4 PUSH2 0xE55 JUMP JUMPDEST SWAP2 POP PUSH2 0x115E DUP3 PUSH2 0x10F7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1182 DUP2 PUSH2 0x1146 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1198 DUP2 PUSH2 0xC1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B4 JUMPI PUSH2 0x11B3 PUSH2 0xBB4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11C2 DUP5 DUP3 DUP6 ADD PUSH2 0x1189 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11E0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xDFE JUMP JUMPDEST PUSH2 0x11ED PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB56 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1209 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xDFE JUMP JUMPDEST PUSH2 0x1216 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDFE JUMP JUMPDEST PUSH2 0x1223 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB56 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1294 DUP3 PUSH2 0xB4C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x12C6 JUMPI PUSH2 0x12C5 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12DA DUP2 PUSH2 0xDC8 JUMP JUMPDEST DUP2 EQ PUSH2 0x12E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12F7 DUP2 PUSH2 0x12D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1313 JUMPI PUSH2 0x1312 PUSH2 0xBB4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1321 DUP5 DUP3 DUP6 ADD PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1386 PUSH1 0x2A DUP4 PUSH2 0xE55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1391 DUP3 PUSH2 0x132A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13B5 DUP2 PUSH2 0x1379 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1418 PUSH1 0x26 DUP4 PUSH2 0xE55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1423 DUP3 PUSH2 0x13BC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1447 DUP2 PUSH2 0x140B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1482 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1499 DUP3 PUSH2 0x144E JUMP JUMPDEST PUSH2 0x14A3 DUP2 DUP6 PUSH2 0x1459 JUMP JUMPDEST SWAP4 POP PUSH2 0x14B3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1464 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14CB DUP3 DUP5 PUSH2 0x148E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150C PUSH1 0x1D DUP4 PUSH2 0xE55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1517 DUP3 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x153B DUP2 PUSH2 0x14FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1569 DUP3 PUSH2 0x1542 JUMP JUMPDEST PUSH2 0x1573 DUP2 DUP6 PUSH2 0xE55 JUMP JUMPDEST SWAP4 POP PUSH2 0x1583 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1464 JUMP JUMPDEST PUSH2 0x158C DUP2 PUSH2 0x154D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15B1 DUP2 DUP5 PUSH2 0x155E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0x2B 0x5D SWAP3 0xB5 DUP9 0x5E 0x5E CALLVALUE 0xEB DUP7 JUMPDEST JUMPI 0xC0 PUSH7 0xCEE37717153C44 BYTE 0xB6 0xC CALL 0xA9 0xB3 PUSH30 0x63EEFC64736F6C6343000811003300000000000000000000000000000000 ","sourceMap":"398:3484:6:-:0;;;1649:43;;;;;;;;;;398:3484;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_1401":{"entryPoint":null,"id":1401,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_396":{"entryPoint":2166,"id":396,"parameterSlots":2,"returnSlots":0},"@_efficientHash_1228":{"entryPoint":2432,"id":1228,"parameterSlots":2,"returnSlots":1},"@_hashPair_1217":{"entryPoint":2365,"id":1217,"parameterSlots":2,"returnSlots":1},"@_revert_726":{"entryPoint":2812,"id":726,"parameterSlots":2,"returnSlots":0},"@airdropToken_1246":{"entryPoint":1144,"id":1246,"parameterSlots":0,"returnSlots":0},"@claim_1335":{"entryPoint":492,"id":1335,"parameterSlots":4,"returnSlots":0},"@deadline_1248":{"entryPoint":480,"id":1248,"parameterSlots":0,"returnSlots":0},"@depositERC20_1354":{"entryPoint":1704,"id":1354,"parameterSlots":1,"returnSlots":0},"@functionCallWithValue_551":{"entryPoint":2455,"id":551,"parameterSlots":4,"returnSlots":1},"@functionCall_487":{"entryPoint":2408,"id":487,"parameterSlots":3,"returnSlots":1},"@hasClaimed_1252":{"entryPoint":1182,"id":1252,"parameterSlots":0,"returnSlots":0},"@isContract_415":{"entryPoint":2777,"id":415,"parameterSlots":1,"returnSlots":1},"@merkleRoot_1241":{"entryPoint":486,"id":1241,"parameterSlots":0,"returnSlots":0},"@owner_1243":{"entryPoint":1666,"id":1243,"parameterSlots":0,"returnSlots":0},"@processProof_812":{"entryPoint":2080,"id":812,"parameterSlots":2,"returnSlots":1},"@recoverERC20_1393":{"entryPoint":1214,"id":1393,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_174":{"entryPoint":1943,"id":174,"parameterSlots":4,"returnSlots":0},"@safeTransfer_148":{"entryPoint":1809,"id":148,"parameterSlots":3,"returnSlots":0},"@verifyCallResultFromTarget_682":{"entryPoint":2660,"id":682,"parameterSlots":4,"returnSlots":1},"@verify_751":{"entryPoint":1786,"id":751,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3079,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":3159,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bool_fromMemory":{"entryPoint":4840,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3123,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":4489,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3483,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":3245,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":4861,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3624,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":4510,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3582,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":3989,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3540,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2954,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5262,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IERC20_$80_to_t_address_fromStack":{"entryPoint":3441,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5470,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_1dc03f8b8317fbb477c657e10f8d356262b327e968700d1702cc10cb0bdcffd5_to_t_string_memory_ptr_fromStack":{"entryPoint":3727,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack":{"entryPoint":5131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_618ec091330d38232431c90a4e5ff4f783e70a9855128944a94a2bdaabe7bed1_to_t_string_memory_ptr_fromStack":{"entryPoint":4130,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_813b76783a8d6b30dcbad16773ab780816fefb3c6a5b4a6e32e4c5513d3b3924_to_t_string_memory_ptr_fromStack":{"entryPoint":4422,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8b937f640c8689e153f396d43b89a366de8938ad7ec363142bf8fa217b1e6980_to_t_string_memory_ptr_fromStack":{"entryPoint":4276,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack":{"entryPoint":5375,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack":{"entryPoint":4985,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f349606239a9234eee39e49501e0b425b2a8ef0c51f02761a11981a9bcb2f66f_to_t_string_memory_ptr_fromStack":{"entryPoint":3873,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2902,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":4022,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":4045,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5311,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3597,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":4596,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":4555,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3555,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":2969,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$80__to_t_address__fromStack_reversed":{"entryPoint":3456,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5527,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1dc03f8b8317fbb477c657e10f8d356262b327e968700d1702cc10cb0bdcffd5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3762,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5166,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_618ec091330d38232431c90a4e5ff4f783e70a9855128944a94a2bdaabe7bed1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4165,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_813b76783a8d6b30dcbad16773ab780816fefb3c6a5b4a6e32e4c5513d3b3924__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4457,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8b937f640c8689e153f396d43b89a366de8938ad7ec363142bf8fa217b1e6980__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4311,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5410,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5020,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f349606239a9234eee39e49501e0b425b2a8ef0c51f02761a11981a9bcb2f66f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3908,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2917,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":5198,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5442,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5209,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3669,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3038,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3528,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2944,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3006,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2892,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$80_to_t_address":{"entryPoint":3423,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":3405,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":3371,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":5220,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":3361,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":4745,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":3971,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":3953,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":4012,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4698,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4651,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":3149,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3144,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3154,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3001,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2996,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5453,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":3940,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1dc03f8b8317fbb477c657e10f8d356262b327e968700d1702cc10cb0bdcffd5":{"entryPoint":3686,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c":{"entryPoint":5052,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_618ec091330d38232431c90a4e5ff4f783e70a9855128944a94a2bdaabe7bed1":{"entryPoint":4089,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_813b76783a8d6b30dcbad16773ab780816fefb3c6a5b4a6e32e4c5513d3b3924":{"entryPoint":4343,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8b937f640c8689e153f396d43b89a366de8938ad7ec363142bf8fa217b1e6980":{"entryPoint":4197,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":5334,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd":{"entryPoint":4906,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f349606239a9234eee39e49501e0b425b2a8ef0c51f02761a11981a9bcb2f66f":{"entryPoint":3794,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3056,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":4817,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3100,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:20150:7","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:7","statements":[{"nodeType":"YulAssignment","src":"62:16:7","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:7"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:7","type":""}],"src":"7:77:7"},{"body":{"nodeType":"YulBlock","src":"155:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:7"},"nodeType":"YulFunctionCall","src":"177:24:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:7"},"nodeType":"YulFunctionCall","src":"165:37:7"},"nodeType":"YulExpressionStatement","src":"165:37:7"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:7","type":""}],"src":"90:118:7"},{"body":{"nodeType":"YulBlock","src":"312:124:7","statements":[{"nodeType":"YulAssignment","src":"322:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:7"},"nodeType":"YulFunctionCall","src":"330:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:7"},"nodeType":"YulFunctionCall","src":"411:17:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:7"},"nodeType":"YulFunctionCall","src":"358:71:7"},"nodeType":"YulExpressionStatement","src":"358:71:7"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:7","type":""}],"src":"214:222:7"},{"body":{"nodeType":"YulBlock","src":"487:32:7","statements":[{"nodeType":"YulAssignment","src":"497:16:7","value":{"name":"value","nodeType":"YulIdentifier","src":"508:5:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"497:7:7"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"469:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"479:7:7","type":""}],"src":"442:77:7"},{"body":{"nodeType":"YulBlock","src":"590:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"607:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"630:5:7"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"612:17:7"},"nodeType":"YulFunctionCall","src":"612:24:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"600:6:7"},"nodeType":"YulFunctionCall","src":"600:37:7"},"nodeType":"YulExpressionStatement","src":"600:37:7"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"578:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"585:3:7","type":""}],"src":"525:118:7"},{"body":{"nodeType":"YulBlock","src":"747:124:7","statements":[{"nodeType":"YulAssignment","src":"757:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"769:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"780:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:7"},"nodeType":"YulFunctionCall","src":"765:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"757:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"837:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"850:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"861:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:7"},"nodeType":"YulFunctionCall","src":"846:17:7"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"793:43:7"},"nodeType":"YulFunctionCall","src":"793:71:7"},"nodeType":"YulExpressionStatement","src":"793:71:7"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"719:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"731:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"742:4:7","type":""}],"src":"649:222:7"},{"body":{"nodeType":"YulBlock","src":"917:35:7","statements":[{"nodeType":"YulAssignment","src":"927:19:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"943:2:7","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"937:5:7"},"nodeType":"YulFunctionCall","src":"937:9:7"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"927:6:7"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"910:6:7","type":""}],"src":"877:75:7"},{"body":{"nodeType":"YulBlock","src":"1047:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1064:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1067:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1057:6:7"},"nodeType":"YulFunctionCall","src":"1057:12:7"},"nodeType":"YulExpressionStatement","src":"1057:12:7"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"958:117:7"},{"body":{"nodeType":"YulBlock","src":"1170:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1187:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1190:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1180:6:7"},"nodeType":"YulFunctionCall","src":"1180:12:7"},"nodeType":"YulExpressionStatement","src":"1180:12:7"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1081:117:7"},{"body":{"nodeType":"YulBlock","src":"1249:81:7","statements":[{"nodeType":"YulAssignment","src":"1259:65:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1274:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"1281:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1270:3:7"},"nodeType":"YulFunctionCall","src":"1270:54:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1259:7:7"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1231:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1241:7:7","type":""}],"src":"1204:126:7"},{"body":{"nodeType":"YulBlock","src":"1381:51:7","statements":[{"nodeType":"YulAssignment","src":"1391:35:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1420:5:7"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1402:17:7"},"nodeType":"YulFunctionCall","src":"1402:24:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1391:7:7"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1363:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1373:7:7","type":""}],"src":"1336:96:7"},{"body":{"nodeType":"YulBlock","src":"1481:79:7","statements":[{"body":{"nodeType":"YulBlock","src":"1538:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1547:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1550:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1540:6:7"},"nodeType":"YulFunctionCall","src":"1540:12:7"},"nodeType":"YulExpressionStatement","src":"1540:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1504:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:7"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1511:17:7"},"nodeType":"YulFunctionCall","src":"1511:24:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1501:2:7"},"nodeType":"YulFunctionCall","src":"1501:35:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1494:6:7"},"nodeType":"YulFunctionCall","src":"1494:43:7"},"nodeType":"YulIf","src":"1491:63:7"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1474:5:7","type":""}],"src":"1438:122:7"},{"body":{"nodeType":"YulBlock","src":"1618:87:7","statements":[{"nodeType":"YulAssignment","src":"1628:29:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1650:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1637:12:7"},"nodeType":"YulFunctionCall","src":"1637:20:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1628:5:7"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1693:5:7"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1666:26:7"},"nodeType":"YulFunctionCall","src":"1666:33:7"},"nodeType":"YulExpressionStatement","src":"1666:33:7"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1596:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"1604:3:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1612:5:7","type":""}],"src":"1566:139:7"},{"body":{"nodeType":"YulBlock","src":"1754:79:7","statements":[{"body":{"nodeType":"YulBlock","src":"1811:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1820:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1823:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1813:6:7"},"nodeType":"YulFunctionCall","src":"1813:12:7"},"nodeType":"YulExpressionStatement","src":"1813:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1777:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1802:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1784:17:7"},"nodeType":"YulFunctionCall","src":"1784:24:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:7"},"nodeType":"YulFunctionCall","src":"1774:35:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1767:6:7"},"nodeType":"YulFunctionCall","src":"1767:43:7"},"nodeType":"YulIf","src":"1764:63:7"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1747:5:7","type":""}],"src":"1711:122:7"},{"body":{"nodeType":"YulBlock","src":"1891:87:7","statements":[{"nodeType":"YulAssignment","src":"1901:29:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1923:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1910:12:7"},"nodeType":"YulFunctionCall","src":"1910:20:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1901:5:7"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1966:5:7"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1939:26:7"},"nodeType":"YulFunctionCall","src":"1939:33:7"},"nodeType":"YulExpressionStatement","src":"1939:33:7"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1869:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"1877:3:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1885:5:7","type":""}],"src":"1839:139:7"},{"body":{"nodeType":"YulBlock","src":"2073:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2090:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2093:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2083:6:7"},"nodeType":"YulFunctionCall","src":"2083:12:7"},"nodeType":"YulExpressionStatement","src":"2083:12:7"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1984:117:7"},{"body":{"nodeType":"YulBlock","src":"2196:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2213:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2216:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2206:6:7"},"nodeType":"YulFunctionCall","src":"2206:12:7"},"nodeType":"YulExpressionStatement","src":"2206:12:7"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"2107:117:7"},{"body":{"nodeType":"YulBlock","src":"2319:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2336:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2339:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2329:6:7"},"nodeType":"YulFunctionCall","src":"2329:12:7"},"nodeType":"YulExpressionStatement","src":"2329:12:7"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"2230:117:7"},{"body":{"nodeType":"YulBlock","src":"2460:478:7","statements":[{"body":{"nodeType":"YulBlock","src":"2509:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2511:77:7"},"nodeType":"YulFunctionCall","src":"2511:79:7"},"nodeType":"YulExpressionStatement","src":"2511:79:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2488:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"2496:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2484:3:7"},"nodeType":"YulFunctionCall","src":"2484:17:7"},{"name":"end","nodeType":"YulIdentifier","src":"2503:3:7"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2480:3:7"},"nodeType":"YulFunctionCall","src":"2480:27:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2473:6:7"},"nodeType":"YulFunctionCall","src":"2473:35:7"},"nodeType":"YulIf","src":"2470:122:7"},{"nodeType":"YulAssignment","src":"2601:30:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2624:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2611:12:7"},"nodeType":"YulFunctionCall","src":"2611:20:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2601:6:7"}]},{"body":{"nodeType":"YulBlock","src":"2674:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2676:77:7"},"nodeType":"YulFunctionCall","src":"2676:79:7"},"nodeType":"YulExpressionStatement","src":"2676:79:7"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2646:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"2654:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2643:2:7"},"nodeType":"YulFunctionCall","src":"2643:30:7"},"nodeType":"YulIf","src":"2640:117:7"},{"nodeType":"YulAssignment","src":"2766:29:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2782:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"2790:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2778:3:7"},"nodeType":"YulFunctionCall","src":"2778:17:7"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2766:8:7"}]},{"body":{"nodeType":"YulBlock","src":"2849:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2851:77:7"},"nodeType":"YulFunctionCall","src":"2851:79:7"},"nodeType":"YulExpressionStatement","src":"2851:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2814:8:7"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2828:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"2836:4:7","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2824:3:7"},"nodeType":"YulFunctionCall","src":"2824:17:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2810:3:7"},"nodeType":"YulFunctionCall","src":"2810:32:7"},{"name":"end","nodeType":"YulIdentifier","src":"2844:3:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2807:2:7"},"nodeType":"YulFunctionCall","src":"2807:41:7"},"nodeType":"YulIf","src":"2804:128:7"}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2427:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"2435:3:7","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2443:8:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"2453:6:7","type":""}],"src":"2370:568:7"},{"body":{"nodeType":"YulBlock","src":"3079:714:7","statements":[{"body":{"nodeType":"YulBlock","src":"3125:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3127:77:7"},"nodeType":"YulFunctionCall","src":"3127:79:7"},"nodeType":"YulExpressionStatement","src":"3127:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3100:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"3109:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3096:3:7"},"nodeType":"YulFunctionCall","src":"3096:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"3121:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3092:3:7"},"nodeType":"YulFunctionCall","src":"3092:32:7"},"nodeType":"YulIf","src":"3089:119:7"},{"nodeType":"YulBlock","src":"3218:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"3233:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"3247:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3237:6:7","type":""}]},{"nodeType":"YulAssignment","src":"3262:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3297:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"3308:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3293:3:7"},"nodeType":"YulFunctionCall","src":"3293:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3317:7:7"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3272:20:7"},"nodeType":"YulFunctionCall","src":"3272:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3262:6:7"}]}]},{"nodeType":"YulBlock","src":"3345:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"3360:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"3374:2:7","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3364:6:7","type":""}]},{"nodeType":"YulAssignment","src":"3390:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3425:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"3436:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3421:3:7"},"nodeType":"YulFunctionCall","src":"3421:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3445:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3400:20:7"},"nodeType":"YulFunctionCall","src":"3400:53:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3390:6:7"}]}]},{"nodeType":"YulBlock","src":"3473:313:7","statements":[{"nodeType":"YulVariableDeclaration","src":"3488:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3519:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3530:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3515:3:7"},"nodeType":"YulFunctionCall","src":"3515:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3502:12:7"},"nodeType":"YulFunctionCall","src":"3502:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3492:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"3581:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3583:77:7"},"nodeType":"YulFunctionCall","src":"3583:79:7"},"nodeType":"YulExpressionStatement","src":"3583:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3553:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"3561:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3550:2:7"},"nodeType":"YulFunctionCall","src":"3550:30:7"},"nodeType":"YulIf","src":"3547:117:7"},{"nodeType":"YulAssignment","src":"3678:98:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3748:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"3759:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3744:3:7"},"nodeType":"YulFunctionCall","src":"3744:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3768:7:7"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"3696:47:7"},"nodeType":"YulFunctionCall","src":"3696:80:7"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3678:6:7"},{"name":"value3","nodeType":"YulIdentifier","src":"3686:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3025:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3036:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3048:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3056:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3064:6:7","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3072:6:7","type":""}],"src":"2944:849:7"},{"body":{"nodeType":"YulBlock","src":"3831:28:7","statements":[{"nodeType":"YulAssignment","src":"3841:12:7","value":{"name":"value","nodeType":"YulIdentifier","src":"3848:5:7"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3841:3:7"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3817:5:7","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3827:3:7","type":""}],"src":"3799:60:7"},{"body":{"nodeType":"YulBlock","src":"3925:82:7","statements":[{"nodeType":"YulAssignment","src":"3935:66:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3993:5:7"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3975:17:7"},"nodeType":"YulFunctionCall","src":"3975:24:7"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3966:8:7"},"nodeType":"YulFunctionCall","src":"3966:34:7"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3948:17:7"},"nodeType":"YulFunctionCall","src":"3948:53:7"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3935:9:7"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3905:5:7","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3915:9:7","type":""}],"src":"3865:142:7"},{"body":{"nodeType":"YulBlock","src":"4073:66:7","statements":[{"nodeType":"YulAssignment","src":"4083:50:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4127:5:7"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"4096:30:7"},"nodeType":"YulFunctionCall","src":"4096:37:7"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4083:9:7"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4053:5:7","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4063:9:7","type":""}],"src":"4013:126:7"},{"body":{"nodeType":"YulBlock","src":"4218:66:7","statements":[{"nodeType":"YulAssignment","src":"4228:50:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4272:5:7"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"4241:30:7"},"nodeType":"YulFunctionCall","src":"4241:37:7"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4228:9:7"}]}]},"name":"convert_t_contract$_IERC20_$80_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4198:5:7","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4208:9:7","type":""}],"src":"4145:139:7"},{"body":{"nodeType":"YulBlock","src":"4368:79:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4385:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4434:5:7"}],"functionName":{"name":"convert_t_contract$_IERC20_$80_to_t_address","nodeType":"YulIdentifier","src":"4390:43:7"},"nodeType":"YulFunctionCall","src":"4390:50:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4378:6:7"},"nodeType":"YulFunctionCall","src":"4378:63:7"},"nodeType":"YulExpressionStatement","src":"4378:63:7"}]},"name":"abi_encode_t_contract$_IERC20_$80_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4356:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4363:3:7","type":""}],"src":"4290:157:7"},{"body":{"nodeType":"YulBlock","src":"4564:137:7","statements":[{"nodeType":"YulAssignment","src":"4574:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4586:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4597:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4582:3:7"},"nodeType":"YulFunctionCall","src":"4582:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4574:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4667:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4680:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4691:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4676:3:7"},"nodeType":"YulFunctionCall","src":"4676:17:7"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$80_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4610:56:7"},"nodeType":"YulFunctionCall","src":"4610:84:7"},"nodeType":"YulExpressionStatement","src":"4610:84:7"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$80__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4536:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4548:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4559:4:7","type":""}],"src":"4453:248:7"},{"body":{"nodeType":"YulBlock","src":"4773:263:7","statements":[{"body":{"nodeType":"YulBlock","src":"4819:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4821:77:7"},"nodeType":"YulFunctionCall","src":"4821:79:7"},"nodeType":"YulExpressionStatement","src":"4821:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4794:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"4803:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4790:3:7"},"nodeType":"YulFunctionCall","src":"4790:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"4815:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4786:3:7"},"nodeType":"YulFunctionCall","src":"4786:32:7"},"nodeType":"YulIf","src":"4783:119:7"},{"nodeType":"YulBlock","src":"4912:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"4927:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"4941:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4931:6:7","type":""}]},{"nodeType":"YulAssignment","src":"4956:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4991:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"5002:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4987:3:7"},"nodeType":"YulFunctionCall","src":"4987:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5011:7:7"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4966:20:7"},"nodeType":"YulFunctionCall","src":"4966:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4956:6:7"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4743:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4754:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4766:6:7","type":""}],"src":"4707:329:7"},{"body":{"nodeType":"YulBlock","src":"5084:48:7","statements":[{"nodeType":"YulAssignment","src":"5094:32:7","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5119:5:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5112:6:7"},"nodeType":"YulFunctionCall","src":"5112:13:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5105:6:7"},"nodeType":"YulFunctionCall","src":"5105:21:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5094:7:7"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5066:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5076:7:7","type":""}],"src":"5042:90:7"},{"body":{"nodeType":"YulBlock","src":"5197:50:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5214:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5234:5:7"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5219:14:7"},"nodeType":"YulFunctionCall","src":"5219:21:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5207:6:7"},"nodeType":"YulFunctionCall","src":"5207:34:7"},"nodeType":"YulExpressionStatement","src":"5207:34:7"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5185:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5192:3:7","type":""}],"src":"5138:109:7"},{"body":{"nodeType":"YulBlock","src":"5345:118:7","statements":[{"nodeType":"YulAssignment","src":"5355:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5367:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5378:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5363:3:7"},"nodeType":"YulFunctionCall","src":"5363:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5355:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5429:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5442:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5453:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5438:3:7"},"nodeType":"YulFunctionCall","src":"5438:17:7"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5391:37:7"},"nodeType":"YulFunctionCall","src":"5391:65:7"},"nodeType":"YulExpressionStatement","src":"5391:65:7"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5317:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5329:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5340:4:7","type":""}],"src":"5253:210:7"},{"body":{"nodeType":"YulBlock","src":"5534:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5551:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5574:5:7"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5556:17:7"},"nodeType":"YulFunctionCall","src":"5556:24:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5544:6:7"},"nodeType":"YulFunctionCall","src":"5544:37:7"},"nodeType":"YulExpressionStatement","src":"5544:37:7"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5522:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5529:3:7","type":""}],"src":"5469:118:7"},{"body":{"nodeType":"YulBlock","src":"5691:124:7","statements":[{"nodeType":"YulAssignment","src":"5701:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5713:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5724:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5709:3:7"},"nodeType":"YulFunctionCall","src":"5709:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5701:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5781:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5794:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5805:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5790:3:7"},"nodeType":"YulFunctionCall","src":"5790:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5737:43:7"},"nodeType":"YulFunctionCall","src":"5737:71:7"},"nodeType":"YulExpressionStatement","src":"5737:71:7"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5663:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5675:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5686:4:7","type":""}],"src":"5593:222:7"},{"body":{"nodeType":"YulBlock","src":"5887:263:7","statements":[{"body":{"nodeType":"YulBlock","src":"5933:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5935:77:7"},"nodeType":"YulFunctionCall","src":"5935:79:7"},"nodeType":"YulExpressionStatement","src":"5935:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5908:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"5917:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5904:3:7"},"nodeType":"YulFunctionCall","src":"5904:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"5929:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5900:3:7"},"nodeType":"YulFunctionCall","src":"5900:32:7"},"nodeType":"YulIf","src":"5897:119:7"},{"nodeType":"YulBlock","src":"6026:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"6041:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"6055:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6045:6:7","type":""}]},{"nodeType":"YulAssignment","src":"6070:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6105:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"6116:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6101:3:7"},"nodeType":"YulFunctionCall","src":"6101:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6125:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6080:20:7"},"nodeType":"YulFunctionCall","src":"6080:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6070:6:7"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5857:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5868:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5880:6:7","type":""}],"src":"5821:329:7"},{"body":{"nodeType":"YulBlock","src":"6252:73:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6269:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"6274:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6262:6:7"},"nodeType":"YulFunctionCall","src":"6262:19:7"},"nodeType":"YulExpressionStatement","src":"6262:19:7"},{"nodeType":"YulAssignment","src":"6290:29:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6309:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"6314:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6305:3:7"},"nodeType":"YulFunctionCall","src":"6305:14:7"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6290:11:7"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6224:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"6229:6:7","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6240:11:7","type":""}],"src":"6156:169:7"},{"body":{"nodeType":"YulBlock","src":"6437:73:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6459:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"6467:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6455:3:7"},"nodeType":"YulFunctionCall","src":"6455:14:7"},{"hexValue":"41697264726f70436c61696d3a20416c726561647920636c61696d6564","kind":"string","nodeType":"YulLiteral","src":"6471:31:7","type":"","value":"AirdropClaim: Already claimed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6448:6:7"},"nodeType":"YulFunctionCall","src":"6448:55:7"},"nodeType":"YulExpressionStatement","src":"6448:55:7"}]},"name":"store_literal_in_memory_1dc03f8b8317fbb477c657e10f8d356262b327e968700d1702cc10cb0bdcffd5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6429:6:7","type":""}],"src":"6331:179:7"},{"body":{"nodeType":"YulBlock","src":"6662:220:7","statements":[{"nodeType":"YulAssignment","src":"6672:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6738:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"6743:2:7","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6679:58:7"},"nodeType":"YulFunctionCall","src":"6679:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6672:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6844:3:7"}],"functionName":{"name":"store_literal_in_memory_1dc03f8b8317fbb477c657e10f8d356262b327e968700d1702cc10cb0bdcffd5","nodeType":"YulIdentifier","src":"6755:88:7"},"nodeType":"YulFunctionCall","src":"6755:93:7"},"nodeType":"YulExpressionStatement","src":"6755:93:7"},{"nodeType":"YulAssignment","src":"6857:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6868:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"6873:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6864:3:7"},"nodeType":"YulFunctionCall","src":"6864:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6857:3:7"}]}]},"name":"abi_encode_t_stringliteral_1dc03f8b8317fbb477c657e10f8d356262b327e968700d1702cc10cb0bdcffd5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6650:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6658:3:7","type":""}],"src":"6516:366:7"},{"body":{"nodeType":"YulBlock","src":"7059:248:7","statements":[{"nodeType":"YulAssignment","src":"7069:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7081:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"7092:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7077:3:7"},"nodeType":"YulFunctionCall","src":"7077:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7069:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7116:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"7127:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7112:3:7"},"nodeType":"YulFunctionCall","src":"7112:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7135:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"7141:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7131:3:7"},"nodeType":"YulFunctionCall","src":"7131:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7105:6:7"},"nodeType":"YulFunctionCall","src":"7105:47:7"},"nodeType":"YulExpressionStatement","src":"7105:47:7"},{"nodeType":"YulAssignment","src":"7161:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7295:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_1dc03f8b8317fbb477c657e10f8d356262b327e968700d1702cc10cb0bdcffd5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7169:124:7"},"nodeType":"YulFunctionCall","src":"7169:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7161:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_1dc03f8b8317fbb477c657e10f8d356262b327e968700d1702cc10cb0bdcffd5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7039:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7054:4:7","type":""}],"src":"6888:419:7"},{"body":{"nodeType":"YulBlock","src":"7419:118:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7441:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"7449:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7437:3:7"},"nodeType":"YulFunctionCall","src":"7437:14:7"},{"hexValue":"41697264726f70436c61696d3a20436c61696d696e6720706572696f64206578","kind":"string","nodeType":"YulLiteral","src":"7453:34:7","type":"","value":"AirdropClaim: Claiming period ex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7430:6:7"},"nodeType":"YulFunctionCall","src":"7430:58:7"},"nodeType":"YulExpressionStatement","src":"7430:58:7"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7509:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"7517:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7505:3:7"},"nodeType":"YulFunctionCall","src":"7505:15:7"},{"hexValue":"7069726564","kind":"string","nodeType":"YulLiteral","src":"7522:7:7","type":"","value":"pired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7498:6:7"},"nodeType":"YulFunctionCall","src":"7498:32:7"},"nodeType":"YulExpressionStatement","src":"7498:32:7"}]},"name":"store_literal_in_memory_f349606239a9234eee39e49501e0b425b2a8ef0c51f02761a11981a9bcb2f66f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7411:6:7","type":""}],"src":"7313:224:7"},{"body":{"nodeType":"YulBlock","src":"7689:220:7","statements":[{"nodeType":"YulAssignment","src":"7699:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7765:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"7770:2:7","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7706:58:7"},"nodeType":"YulFunctionCall","src":"7706:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7699:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7871:3:7"}],"functionName":{"name":"store_literal_in_memory_f349606239a9234eee39e49501e0b425b2a8ef0c51f02761a11981a9bcb2f66f","nodeType":"YulIdentifier","src":"7782:88:7"},"nodeType":"YulFunctionCall","src":"7782:93:7"},"nodeType":"YulExpressionStatement","src":"7782:93:7"},{"nodeType":"YulAssignment","src":"7884:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7895:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"7900:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7891:3:7"},"nodeType":"YulFunctionCall","src":"7891:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7884:3:7"}]}]},"name":"abi_encode_t_stringliteral_f349606239a9234eee39e49501e0b425b2a8ef0c51f02761a11981a9bcb2f66f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7677:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7685:3:7","type":""}],"src":"7543:366:7"},{"body":{"nodeType":"YulBlock","src":"8086:248:7","statements":[{"nodeType":"YulAssignment","src":"8096:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8108:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"8119:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8104:3:7"},"nodeType":"YulFunctionCall","src":"8104:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8096:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8143:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"8154:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8139:3:7"},"nodeType":"YulFunctionCall","src":"8139:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8162:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"8168:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8158:3:7"},"nodeType":"YulFunctionCall","src":"8158:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8132:6:7"},"nodeType":"YulFunctionCall","src":"8132:47:7"},"nodeType":"YulExpressionStatement","src":"8132:47:7"},{"nodeType":"YulAssignment","src":"8188:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8322:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_f349606239a9234eee39e49501e0b425b2a8ef0c51f02761a11981a9bcb2f66f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8196:124:7"},"nodeType":"YulFunctionCall","src":"8196:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8188:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_f349606239a9234eee39e49501e0b425b2a8ef0c51f02761a11981a9bcb2f66f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8066:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8081:4:7","type":""}],"src":"7915:419:7"},{"body":{"nodeType":"YulBlock","src":"8382:52:7","statements":[{"nodeType":"YulAssignment","src":"8392:35:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8417:2:7","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"8421:5:7"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8413:3:7"},"nodeType":"YulFunctionCall","src":"8413:14:7"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"8392:8:7"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8363:5:7","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"8373:8:7","type":""}],"src":"8340:94:7"},{"body":{"nodeType":"YulBlock","src":"8487:47:7","statements":[{"nodeType":"YulAssignment","src":"8497:31:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8522:5:7"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"8508:13:7"},"nodeType":"YulFunctionCall","src":"8508:20:7"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"8497:7:7"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8469:5:7","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"8479:7:7","type":""}],"src":"8440:94:7"},{"body":{"nodeType":"YulBlock","src":"8587:53:7","statements":[{"nodeType":"YulAssignment","src":"8597:37:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8628:5:7"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"8608:19:7"},"nodeType":"YulFunctionCall","src":"8608:26:7"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"8597:7:7"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8569:5:7","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"8579:7:7","type":""}],"src":"8540:100:7"},{"body":{"nodeType":"YulBlock","src":"8729:74:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8746:3:7"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8789:5:7"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8771:17:7"},"nodeType":"YulFunctionCall","src":"8771:24:7"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"8751:19:7"},"nodeType":"YulFunctionCall","src":"8751:45:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8739:6:7"},"nodeType":"YulFunctionCall","src":"8739:58:7"},"nodeType":"YulExpressionStatement","src":"8739:58:7"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8717:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8724:3:7","type":""}],"src":"8646:157:7"},{"body":{"nodeType":"YulBlock","src":"8856:32:7","statements":[{"nodeType":"YulAssignment","src":"8866:16:7","value":{"name":"value","nodeType":"YulIdentifier","src":"8877:5:7"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"8866:7:7"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8838:5:7","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"8848:7:7","type":""}],"src":"8809:79:7"},{"body":{"nodeType":"YulBlock","src":"8977:74:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8994:3:7"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9037:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9019:17:7"},"nodeType":"YulFunctionCall","src":"9019:24:7"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"8999:19:7"},"nodeType":"YulFunctionCall","src":"8999:45:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8987:6:7"},"nodeType":"YulFunctionCall","src":"8987:58:7"},"nodeType":"YulExpressionStatement","src":"8987:58:7"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8965:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8972:3:7","type":""}],"src":"8894:157:7"},{"body":{"nodeType":"YulBlock","src":"9201:253:7","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9274:6:7"},{"name":"pos","nodeType":"YulIdentifier","src":"9283:3:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"9212:61:7"},"nodeType":"YulFunctionCall","src":"9212:75:7"},"nodeType":"YulExpressionStatement","src":"9212:75:7"},{"nodeType":"YulAssignment","src":"9296:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9307:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"9312:2:7","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9303:3:7"},"nodeType":"YulFunctionCall","src":"9303:12:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9296:3:7"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9387:6:7"},{"name":"pos","nodeType":"YulIdentifier","src":"9396:3:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"9325:61:7"},"nodeType":"YulFunctionCall","src":"9325:75:7"},"nodeType":"YulExpressionStatement","src":"9325:75:7"},{"nodeType":"YulAssignment","src":"9409:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9420:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"9425:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9416:3:7"},"nodeType":"YulFunctionCall","src":"9416:12:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9409:3:7"}]},{"nodeType":"YulAssignment","src":"9438:10:7","value":{"name":"pos","nodeType":"YulIdentifier","src":"9445:3:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9438:3:7"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9172:3:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9178:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9186:6:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9197:3:7","type":""}],"src":"9057:397:7"},{"body":{"nodeType":"YulBlock","src":"9566:73:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9588:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"9596:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9584:3:7"},"nodeType":"YulFunctionCall","src":"9584:14:7"},{"hexValue":"41697264726f70436c61696d3a20496e76616c69642041646472657373","kind":"string","nodeType":"YulLiteral","src":"9600:31:7","type":"","value":"AirdropClaim: Invalid Address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9577:6:7"},"nodeType":"YulFunctionCall","src":"9577:55:7"},"nodeType":"YulExpressionStatement","src":"9577:55:7"}]},"name":"store_literal_in_memory_618ec091330d38232431c90a4e5ff4f783e70a9855128944a94a2bdaabe7bed1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9558:6:7","type":""}],"src":"9460:179:7"},{"body":{"nodeType":"YulBlock","src":"9791:220:7","statements":[{"nodeType":"YulAssignment","src":"9801:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9867:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"9872:2:7","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9808:58:7"},"nodeType":"YulFunctionCall","src":"9808:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9801:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9973:3:7"}],"functionName":{"name":"store_literal_in_memory_618ec091330d38232431c90a4e5ff4f783e70a9855128944a94a2bdaabe7bed1","nodeType":"YulIdentifier","src":"9884:88:7"},"nodeType":"YulFunctionCall","src":"9884:93:7"},"nodeType":"YulExpressionStatement","src":"9884:93:7"},{"nodeType":"YulAssignment","src":"9986:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9997:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"10002:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9993:3:7"},"nodeType":"YulFunctionCall","src":"9993:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9986:3:7"}]}]},"name":"abi_encode_t_stringliteral_618ec091330d38232431c90a4e5ff4f783e70a9855128944a94a2bdaabe7bed1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9779:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9787:3:7","type":""}],"src":"9645:366:7"},{"body":{"nodeType":"YulBlock","src":"10188:248:7","statements":[{"nodeType":"YulAssignment","src":"10198:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10210:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"10221:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10206:3:7"},"nodeType":"YulFunctionCall","src":"10206:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10198:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10245:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"10256:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10241:3:7"},"nodeType":"YulFunctionCall","src":"10241:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10264:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"10270:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10260:3:7"},"nodeType":"YulFunctionCall","src":"10260:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10234:6:7"},"nodeType":"YulFunctionCall","src":"10234:47:7"},"nodeType":"YulExpressionStatement","src":"10234:47:7"},{"nodeType":"YulAssignment","src":"10290:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10424:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_618ec091330d38232431c90a4e5ff4f783e70a9855128944a94a2bdaabe7bed1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10298:124:7"},"nodeType":"YulFunctionCall","src":"10298:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10290:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_618ec091330d38232431c90a4e5ff4f783e70a9855128944a94a2bdaabe7bed1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10168:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10183:4:7","type":""}],"src":"10017:419:7"},{"body":{"nodeType":"YulBlock","src":"10548:124:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10570:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"10578:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10566:3:7"},"nodeType":"YulFunctionCall","src":"10566:14:7"},{"hexValue":"41697264726f70436c61696d3a204f6e6c79206f776e65722063616e20726563","kind":"string","nodeType":"YulLiteral","src":"10582:34:7","type":"","value":"AirdropClaim: Only owner can rec"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10559:6:7"},"nodeType":"YulFunctionCall","src":"10559:58:7"},"nodeType":"YulExpressionStatement","src":"10559:58:7"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10638:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"10646:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10634:3:7"},"nodeType":"YulFunctionCall","src":"10634:15:7"},{"hexValue":"6f76657220746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"10651:13:7","type":"","value":"over tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10627:6:7"},"nodeType":"YulFunctionCall","src":"10627:38:7"},"nodeType":"YulExpressionStatement","src":"10627:38:7"}]},"name":"store_literal_in_memory_8b937f640c8689e153f396d43b89a366de8938ad7ec363142bf8fa217b1e6980","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10540:6:7","type":""}],"src":"10442:230:7"},{"body":{"nodeType":"YulBlock","src":"10824:220:7","statements":[{"nodeType":"YulAssignment","src":"10834:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10900:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"10905:2:7","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10841:58:7"},"nodeType":"YulFunctionCall","src":"10841:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10834:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11006:3:7"}],"functionName":{"name":"store_literal_in_memory_8b937f640c8689e153f396d43b89a366de8938ad7ec363142bf8fa217b1e6980","nodeType":"YulIdentifier","src":"10917:88:7"},"nodeType":"YulFunctionCall","src":"10917:93:7"},"nodeType":"YulExpressionStatement","src":"10917:93:7"},{"nodeType":"YulAssignment","src":"11019:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11030:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"11035:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11026:3:7"},"nodeType":"YulFunctionCall","src":"11026:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11019:3:7"}]}]},"name":"abi_encode_t_stringliteral_8b937f640c8689e153f396d43b89a366de8938ad7ec363142bf8fa217b1e6980_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10812:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10820:3:7","type":""}],"src":"10678:366:7"},{"body":{"nodeType":"YulBlock","src":"11221:248:7","statements":[{"nodeType":"YulAssignment","src":"11231:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11243:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"11254:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11239:3:7"},"nodeType":"YulFunctionCall","src":"11239:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11231:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11278:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"11289:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11274:3:7"},"nodeType":"YulFunctionCall","src":"11274:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11297:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"11303:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11293:3:7"},"nodeType":"YulFunctionCall","src":"11293:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11267:6:7"},"nodeType":"YulFunctionCall","src":"11267:47:7"},"nodeType":"YulExpressionStatement","src":"11267:47:7"},{"nodeType":"YulAssignment","src":"11323:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11457:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_8b937f640c8689e153f396d43b89a366de8938ad7ec363142bf8fa217b1e6980_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11331:124:7"},"nodeType":"YulFunctionCall","src":"11331:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11323:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_8b937f640c8689e153f396d43b89a366de8938ad7ec363142bf8fa217b1e6980__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11201:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11216:4:7","type":""}],"src":"11050:419:7"},{"body":{"nodeType":"YulBlock","src":"11581:115:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11603:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"11611:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11599:3:7"},"nodeType":"YulFunctionCall","src":"11599:14:7"},{"hexValue":"41697264726f70436c61696d3a2041697264726f70207374696c6c2061637469","kind":"string","nodeType":"YulLiteral","src":"11615:34:7","type":"","value":"AirdropClaim: Airdrop still acti"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11592:6:7"},"nodeType":"YulFunctionCall","src":"11592:58:7"},"nodeType":"YulExpressionStatement","src":"11592:58:7"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11671:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"11679:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11667:3:7"},"nodeType":"YulFunctionCall","src":"11667:15:7"},{"hexValue":"7665","kind":"string","nodeType":"YulLiteral","src":"11684:4:7","type":"","value":"ve"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11660:6:7"},"nodeType":"YulFunctionCall","src":"11660:29:7"},"nodeType":"YulExpressionStatement","src":"11660:29:7"}]},"name":"store_literal_in_memory_813b76783a8d6b30dcbad16773ab780816fefb3c6a5b4a6e32e4c5513d3b3924","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11573:6:7","type":""}],"src":"11475:221:7"},{"body":{"nodeType":"YulBlock","src":"11848:220:7","statements":[{"nodeType":"YulAssignment","src":"11858:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11924:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"11929:2:7","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11865:58:7"},"nodeType":"YulFunctionCall","src":"11865:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11858:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12030:3:7"}],"functionName":{"name":"store_literal_in_memory_813b76783a8d6b30dcbad16773ab780816fefb3c6a5b4a6e32e4c5513d3b3924","nodeType":"YulIdentifier","src":"11941:88:7"},"nodeType":"YulFunctionCall","src":"11941:93:7"},"nodeType":"YulExpressionStatement","src":"11941:93:7"},{"nodeType":"YulAssignment","src":"12043:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12054:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"12059:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12050:3:7"},"nodeType":"YulFunctionCall","src":"12050:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12043:3:7"}]}]},"name":"abi_encode_t_stringliteral_813b76783a8d6b30dcbad16773ab780816fefb3c6a5b4a6e32e4c5513d3b3924_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11836:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11844:3:7","type":""}],"src":"11702:366:7"},{"body":{"nodeType":"YulBlock","src":"12245:248:7","statements":[{"nodeType":"YulAssignment","src":"12255:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12267:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"12278:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12263:3:7"},"nodeType":"YulFunctionCall","src":"12263:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12255:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12302:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"12313:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12298:3:7"},"nodeType":"YulFunctionCall","src":"12298:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12321:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"12327:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12317:3:7"},"nodeType":"YulFunctionCall","src":"12317:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12291:6:7"},"nodeType":"YulFunctionCall","src":"12291:47:7"},"nodeType":"YulExpressionStatement","src":"12291:47:7"},{"nodeType":"YulAssignment","src":"12347:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12481:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_813b76783a8d6b30dcbad16773ab780816fefb3c6a5b4a6e32e4c5513d3b3924_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12355:124:7"},"nodeType":"YulFunctionCall","src":"12355:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12347:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_813b76783a8d6b30dcbad16773ab780816fefb3c6a5b4a6e32e4c5513d3b3924__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12225:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12240:4:7","type":""}],"src":"12074:419:7"},{"body":{"nodeType":"YulBlock","src":"12562:80:7","statements":[{"nodeType":"YulAssignment","src":"12572:22:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12587:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12581:5:7"},"nodeType":"YulFunctionCall","src":"12581:13:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12572:5:7"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12630:5:7"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"12603:26:7"},"nodeType":"YulFunctionCall","src":"12603:33:7"},"nodeType":"YulExpressionStatement","src":"12603:33:7"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12540:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"12548:3:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12556:5:7","type":""}],"src":"12499:143:7"},{"body":{"nodeType":"YulBlock","src":"12725:274:7","statements":[{"body":{"nodeType":"YulBlock","src":"12771:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12773:77:7"},"nodeType":"YulFunctionCall","src":"12773:79:7"},"nodeType":"YulExpressionStatement","src":"12773:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12746:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"12755:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12742:3:7"},"nodeType":"YulFunctionCall","src":"12742:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"12767:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12738:3:7"},"nodeType":"YulFunctionCall","src":"12738:32:7"},"nodeType":"YulIf","src":"12735:119:7"},{"nodeType":"YulBlock","src":"12864:128:7","statements":[{"nodeType":"YulVariableDeclaration","src":"12879:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"12893:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12883:6:7","type":""}]},{"nodeType":"YulAssignment","src":"12908:74:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12954:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"12965:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12950:3:7"},"nodeType":"YulFunctionCall","src":"12950:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12974:7:7"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"12918:31:7"},"nodeType":"YulFunctionCall","src":"12918:64:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12908:6:7"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12695:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12706:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12718:6:7","type":""}],"src":"12648:351:7"},{"body":{"nodeType":"YulBlock","src":"13131:206:7","statements":[{"nodeType":"YulAssignment","src":"13141:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13153:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"13164:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13149:3:7"},"nodeType":"YulFunctionCall","src":"13149:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13141:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13221:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13234:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"13245:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13230:3:7"},"nodeType":"YulFunctionCall","src":"13230:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13177:43:7"},"nodeType":"YulFunctionCall","src":"13177:71:7"},"nodeType":"YulExpressionStatement","src":"13177:71:7"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13302:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13315:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"13326:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13311:3:7"},"nodeType":"YulFunctionCall","src":"13311:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13258:43:7"},"nodeType":"YulFunctionCall","src":"13258:72:7"},"nodeType":"YulExpressionStatement","src":"13258:72:7"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13095:9:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13107:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13115:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13126:4:7","type":""}],"src":"13005:332:7"},{"body":{"nodeType":"YulBlock","src":"13497:288:7","statements":[{"nodeType":"YulAssignment","src":"13507:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13519:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"13530:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13515:3:7"},"nodeType":"YulFunctionCall","src":"13515:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13507:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13587:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13600:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"13611:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13596:3:7"},"nodeType":"YulFunctionCall","src":"13596:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13543:43:7"},"nodeType":"YulFunctionCall","src":"13543:71:7"},"nodeType":"YulExpressionStatement","src":"13543:71:7"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13668:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13681:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"13692:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13677:3:7"},"nodeType":"YulFunctionCall","src":"13677:18:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13624:43:7"},"nodeType":"YulFunctionCall","src":"13624:72:7"},"nodeType":"YulExpressionStatement","src":"13624:72:7"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13750:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13763:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"13774:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13759:3:7"},"nodeType":"YulFunctionCall","src":"13759:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13706:43:7"},"nodeType":"YulFunctionCall","src":"13706:72:7"},"nodeType":"YulExpressionStatement","src":"13706:72:7"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13453:9:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13465:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13473:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13481:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13492:4:7","type":""}],"src":"13343:442:7"},{"body":{"nodeType":"YulBlock","src":"13819:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13836:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13839:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13829:6:7"},"nodeType":"YulFunctionCall","src":"13829:88:7"},"nodeType":"YulExpressionStatement","src":"13829:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13933:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13936:4:7","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13926:6:7"},"nodeType":"YulFunctionCall","src":"13926:15:7"},"nodeType":"YulExpressionStatement","src":"13926:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13957:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13960:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13950:6:7"},"nodeType":"YulFunctionCall","src":"13950:15:7"},"nodeType":"YulExpressionStatement","src":"13950:15:7"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"13791:180:7"},{"body":{"nodeType":"YulBlock","src":"14005:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14022:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14025:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14015:6:7"},"nodeType":"YulFunctionCall","src":"14015:88:7"},"nodeType":"YulExpressionStatement","src":"14015:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14119:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14122:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14112:6:7"},"nodeType":"YulFunctionCall","src":"14112:15:7"},"nodeType":"YulExpressionStatement","src":"14112:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14143:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14146:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14136:6:7"},"nodeType":"YulFunctionCall","src":"14136:15:7"},"nodeType":"YulExpressionStatement","src":"14136:15:7"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"13977:180:7"},{"body":{"nodeType":"YulBlock","src":"14206:190:7","statements":[{"nodeType":"YulAssignment","src":"14216:33:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14243:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14225:17:7"},"nodeType":"YulFunctionCall","src":"14225:24:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14216:5:7"}]},{"body":{"nodeType":"YulBlock","src":"14339:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14341:16:7"},"nodeType":"YulFunctionCall","src":"14341:18:7"},"nodeType":"YulExpressionStatement","src":"14341:18:7"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14264:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"14271:66:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14261:2:7"},"nodeType":"YulFunctionCall","src":"14261:77:7"},"nodeType":"YulIf","src":"14258:103:7"},{"nodeType":"YulAssignment","src":"14370:20:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14381:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"14388:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14377:3:7"},"nodeType":"YulFunctionCall","src":"14377:13:7"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14370:3:7"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14192:5:7","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"14202:3:7","type":""}],"src":"14163:233:7"},{"body":{"nodeType":"YulBlock","src":"14442:76:7","statements":[{"body":{"nodeType":"YulBlock","src":"14496:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14505:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14508:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14498:6:7"},"nodeType":"YulFunctionCall","src":"14498:12:7"},"nodeType":"YulExpressionStatement","src":"14498:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14465:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14487:5:7"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"14472:14:7"},"nodeType":"YulFunctionCall","src":"14472:21:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14462:2:7"},"nodeType":"YulFunctionCall","src":"14462:32:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14455:6:7"},"nodeType":"YulFunctionCall","src":"14455:40:7"},"nodeType":"YulIf","src":"14452:60:7"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14435:5:7","type":""}],"src":"14402:116:7"},{"body":{"nodeType":"YulBlock","src":"14584:77:7","statements":[{"nodeType":"YulAssignment","src":"14594:22:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14609:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14603:5:7"},"nodeType":"YulFunctionCall","src":"14603:13:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14594:5:7"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14649:5:7"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"14625:23:7"},"nodeType":"YulFunctionCall","src":"14625:30:7"},"nodeType":"YulExpressionStatement","src":"14625:30:7"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14562:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"14570:3:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14578:5:7","type":""}],"src":"14524:137:7"},{"body":{"nodeType":"YulBlock","src":"14741:271:7","statements":[{"body":{"nodeType":"YulBlock","src":"14787:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14789:77:7"},"nodeType":"YulFunctionCall","src":"14789:79:7"},"nodeType":"YulExpressionStatement","src":"14789:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14762:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"14771:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14758:3:7"},"nodeType":"YulFunctionCall","src":"14758:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"14783:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14754:3:7"},"nodeType":"YulFunctionCall","src":"14754:32:7"},"nodeType":"YulIf","src":"14751:119:7"},{"nodeType":"YulBlock","src":"14880:125:7","statements":[{"nodeType":"YulVariableDeclaration","src":"14895:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"14909:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14899:6:7","type":""}]},{"nodeType":"YulAssignment","src":"14924:71:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14967:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"14978:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14963:3:7"},"nodeType":"YulFunctionCall","src":"14963:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14987:7:7"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"14934:28:7"},"nodeType":"YulFunctionCall","src":"14934:61:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14924:6:7"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14711:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14722:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14734:6:7","type":""}],"src":"14667:345:7"},{"body":{"nodeType":"YulBlock","src":"15124:123:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15146:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"15154:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15142:3:7"},"nodeType":"YulFunctionCall","src":"15142:14:7"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"15158:34:7","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15135:6:7"},"nodeType":"YulFunctionCall","src":"15135:58:7"},"nodeType":"YulExpressionStatement","src":"15135:58:7"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15214:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"15222:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15210:3:7"},"nodeType":"YulFunctionCall","src":"15210:15:7"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"15227:12:7","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15203:6:7"},"nodeType":"YulFunctionCall","src":"15203:37:7"},"nodeType":"YulExpressionStatement","src":"15203:37:7"}]},"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15116:6:7","type":""}],"src":"15018:229:7"},{"body":{"nodeType":"YulBlock","src":"15399:220:7","statements":[{"nodeType":"YulAssignment","src":"15409:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15475:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"15480:2:7","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15416:58:7"},"nodeType":"YulFunctionCall","src":"15416:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15409:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15581:3:7"}],"functionName":{"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulIdentifier","src":"15492:88:7"},"nodeType":"YulFunctionCall","src":"15492:93:7"},"nodeType":"YulExpressionStatement","src":"15492:93:7"},{"nodeType":"YulAssignment","src":"15594:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15605:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"15610:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15601:3:7"},"nodeType":"YulFunctionCall","src":"15601:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15594:3:7"}]}]},"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15387:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15395:3:7","type":""}],"src":"15253:366:7"},{"body":{"nodeType":"YulBlock","src":"15796:248:7","statements":[{"nodeType":"YulAssignment","src":"15806:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15818:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"15829:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15814:3:7"},"nodeType":"YulFunctionCall","src":"15814:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15806:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15853:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"15864:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15849:3:7"},"nodeType":"YulFunctionCall","src":"15849:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15872:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"15878:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15868:3:7"},"nodeType":"YulFunctionCall","src":"15868:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15842:6:7"},"nodeType":"YulFunctionCall","src":"15842:47:7"},"nodeType":"YulExpressionStatement","src":"15842:47:7"},{"nodeType":"YulAssignment","src":"15898:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16032:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15906:124:7"},"nodeType":"YulFunctionCall","src":"15906:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15898:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15776:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15791:4:7","type":""}],"src":"15625:419:7"},{"body":{"nodeType":"YulBlock","src":"16156:119:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16178:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"16186:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16174:3:7"},"nodeType":"YulFunctionCall","src":"16174:14:7"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"16190:34:7","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16167:6:7"},"nodeType":"YulFunctionCall","src":"16167:58:7"},"nodeType":"YulExpressionStatement","src":"16167:58:7"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16246:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"16254:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16242:3:7"},"nodeType":"YulFunctionCall","src":"16242:15:7"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"16259:8:7","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16235:6:7"},"nodeType":"YulFunctionCall","src":"16235:33:7"},"nodeType":"YulExpressionStatement","src":"16235:33:7"}]},"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16148:6:7","type":""}],"src":"16050:225:7"},{"body":{"nodeType":"YulBlock","src":"16427:220:7","statements":[{"nodeType":"YulAssignment","src":"16437:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16503:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"16508:2:7","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16444:58:7"},"nodeType":"YulFunctionCall","src":"16444:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16437:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16609:3:7"}],"functionName":{"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulIdentifier","src":"16520:88:7"},"nodeType":"YulFunctionCall","src":"16520:93:7"},"nodeType":"YulExpressionStatement","src":"16520:93:7"},{"nodeType":"YulAssignment","src":"16622:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16633:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"16638:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16629:3:7"},"nodeType":"YulFunctionCall","src":"16629:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16622:3:7"}]}]},"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16415:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16423:3:7","type":""}],"src":"16281:366:7"},{"body":{"nodeType":"YulBlock","src":"16824:248:7","statements":[{"nodeType":"YulAssignment","src":"16834:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16846:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"16857:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16842:3:7"},"nodeType":"YulFunctionCall","src":"16842:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16834:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16881:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"16892:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16877:3:7"},"nodeType":"YulFunctionCall","src":"16877:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16900:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"16906:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16896:3:7"},"nodeType":"YulFunctionCall","src":"16896:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16870:6:7"},"nodeType":"YulFunctionCall","src":"16870:47:7"},"nodeType":"YulExpressionStatement","src":"16870:47:7"},{"nodeType":"YulAssignment","src":"16926:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17060:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16934:124:7"},"nodeType":"YulFunctionCall","src":"16934:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16926:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16804:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16819:4:7","type":""}],"src":"16653:419:7"},{"body":{"nodeType":"YulBlock","src":"17136:40:7","statements":[{"nodeType":"YulAssignment","src":"17147:22:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17163:5:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17157:5:7"},"nodeType":"YulFunctionCall","src":"17157:12:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17147:6:7"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17119:5:7","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17129:6:7","type":""}],"src":"17078:98:7"},{"body":{"nodeType":"YulBlock","src":"17295:34:7","statements":[{"nodeType":"YulAssignment","src":"17305:18:7","value":{"name":"pos","nodeType":"YulIdentifier","src":"17320:3:7"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17305:11:7"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17267:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"17272:6:7","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17283:11:7","type":""}],"src":"17182:147:7"},{"body":{"nodeType":"YulBlock","src":"17397:184:7","statements":[{"nodeType":"YulVariableDeclaration","src":"17407:10:7","value":{"kind":"number","nodeType":"YulLiteral","src":"17416:1:7","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17411:1:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"17476:63:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17501:3:7"},{"name":"i","nodeType":"YulIdentifier","src":"17506:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17497:3:7"},"nodeType":"YulFunctionCall","src":"17497:11:7"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17520:3:7"},{"name":"i","nodeType":"YulIdentifier","src":"17525:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17516:3:7"},"nodeType":"YulFunctionCall","src":"17516:11:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17510:5:7"},"nodeType":"YulFunctionCall","src":"17510:18:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17490:6:7"},"nodeType":"YulFunctionCall","src":"17490:39:7"},"nodeType":"YulExpressionStatement","src":"17490:39:7"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17437:1:7"},{"name":"length","nodeType":"YulIdentifier","src":"17440:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17434:2:7"},"nodeType":"YulFunctionCall","src":"17434:13:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17448:19:7","statements":[{"nodeType":"YulAssignment","src":"17450:15:7","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17459:1:7"},{"kind":"number","nodeType":"YulLiteral","src":"17462:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17455:3:7"},"nodeType":"YulFunctionCall","src":"17455:10:7"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17450:1:7"}]}]},"pre":{"nodeType":"YulBlock","src":"17430:3:7","statements":[]},"src":"17426:113:7"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17559:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"17564:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17555:3:7"},"nodeType":"YulFunctionCall","src":"17555:16:7"},{"kind":"number","nodeType":"YulLiteral","src":"17573:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17548:6:7"},"nodeType":"YulFunctionCall","src":"17548:27:7"},"nodeType":"YulExpressionStatement","src":"17548:27:7"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17379:3:7","type":""},{"name":"dst","nodeType":"YulTypedName","src":"17384:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"17389:6:7","type":""}],"src":"17335:246:7"},{"body":{"nodeType":"YulBlock","src":"17695:278:7","statements":[{"nodeType":"YulVariableDeclaration","src":"17705:52:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17751:5:7"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"17719:31:7"},"nodeType":"YulFunctionCall","src":"17719:38:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17709:6:7","type":""}]},{"nodeType":"YulAssignment","src":"17766:95:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17849:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"17854:6:7"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17773:75:7"},"nodeType":"YulFunctionCall","src":"17773:88:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17766:3:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17909:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"17916:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17905:3:7"},"nodeType":"YulFunctionCall","src":"17905:16:7"},{"name":"pos","nodeType":"YulIdentifier","src":"17923:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"17928:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"17870:34:7"},"nodeType":"YulFunctionCall","src":"17870:65:7"},"nodeType":"YulExpressionStatement","src":"17870:65:7"},{"nodeType":"YulAssignment","src":"17944:23:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17955:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"17960:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17951:3:7"},"nodeType":"YulFunctionCall","src":"17951:16:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17944:3:7"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17676:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17683:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17691:3:7","type":""}],"src":"17587:386:7"},{"body":{"nodeType":"YulBlock","src":"18113:137:7","statements":[{"nodeType":"YulAssignment","src":"18124:100:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18211:6:7"},{"name":"pos","nodeType":"YulIdentifier","src":"18220:3:7"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18131:79:7"},"nodeType":"YulFunctionCall","src":"18131:93:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18124:3:7"}]},{"nodeType":"YulAssignment","src":"18234:10:7","value":{"name":"pos","nodeType":"YulIdentifier","src":"18241:3:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18234:3:7"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18092:3:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18098:6:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18109:3:7","type":""}],"src":"17979:271:7"},{"body":{"nodeType":"YulBlock","src":"18362:73:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18384:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"18392:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18380:3:7"},"nodeType":"YulFunctionCall","src":"18380:14:7"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"18396:31:7","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18373:6:7"},"nodeType":"YulFunctionCall","src":"18373:55:7"},"nodeType":"YulExpressionStatement","src":"18373:55:7"}]},"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18354:6:7","type":""}],"src":"18256:179:7"},{"body":{"nodeType":"YulBlock","src":"18587:220:7","statements":[{"nodeType":"YulAssignment","src":"18597:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18663:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"18668:2:7","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18604:58:7"},"nodeType":"YulFunctionCall","src":"18604:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18597:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18769:3:7"}],"functionName":{"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulIdentifier","src":"18680:88:7"},"nodeType":"YulFunctionCall","src":"18680:93:7"},"nodeType":"YulExpressionStatement","src":"18680:93:7"},{"nodeType":"YulAssignment","src":"18782:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18793:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"18798:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18789:3:7"},"nodeType":"YulFunctionCall","src":"18789:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18782:3:7"}]}]},"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18575:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18583:3:7","type":""}],"src":"18441:366:7"},{"body":{"nodeType":"YulBlock","src":"18984:248:7","statements":[{"nodeType":"YulAssignment","src":"18994:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19006:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"19017:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19002:3:7"},"nodeType":"YulFunctionCall","src":"19002:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18994:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19041:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"19052:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19037:3:7"},"nodeType":"YulFunctionCall","src":"19037:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19060:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"19066:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19056:3:7"},"nodeType":"YulFunctionCall","src":"19056:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19030:6:7"},"nodeType":"YulFunctionCall","src":"19030:47:7"},"nodeType":"YulExpressionStatement","src":"19030:47:7"},{"nodeType":"YulAssignment","src":"19086:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19220:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19094:124:7"},"nodeType":"YulFunctionCall","src":"19094:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19086:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18964:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18979:4:7","type":""}],"src":"18813:419:7"},{"body":{"nodeType":"YulBlock","src":"19297:40:7","statements":[{"nodeType":"YulAssignment","src":"19308:22:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19324:5:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19318:5:7"},"nodeType":"YulFunctionCall","src":"19318:12:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19308:6:7"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19280:5:7","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"19290:6:7","type":""}],"src":"19238:99:7"},{"body":{"nodeType":"YulBlock","src":"19391:54:7","statements":[{"nodeType":"YulAssignment","src":"19401:38:7","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19419:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"19426:2:7","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19415:3:7"},"nodeType":"YulFunctionCall","src":"19415:14:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19435:2:7","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19431:3:7"},"nodeType":"YulFunctionCall","src":"19431:7:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19411:3:7"},"nodeType":"YulFunctionCall","src":"19411:28:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"19401:6:7"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19374:5:7","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"19384:6:7","type":""}],"src":"19343:102:7"},{"body":{"nodeType":"YulBlock","src":"19543:285:7","statements":[{"nodeType":"YulVariableDeclaration","src":"19553:53:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19600:5:7"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19567:32:7"},"nodeType":"YulFunctionCall","src":"19567:39:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"19557:6:7","type":""}]},{"nodeType":"YulAssignment","src":"19615:78:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19681:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"19686:6:7"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19622:58:7"},"nodeType":"YulFunctionCall","src":"19622:71:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19615:3:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19741:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"19748:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19737:3:7"},"nodeType":"YulFunctionCall","src":"19737:16:7"},{"name":"pos","nodeType":"YulIdentifier","src":"19755:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"19760:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"19702:34:7"},"nodeType":"YulFunctionCall","src":"19702:65:7"},"nodeType":"YulExpressionStatement","src":"19702:65:7"},{"nodeType":"YulAssignment","src":"19776:46:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19787:3:7"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19814:6:7"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"19792:21:7"},"nodeType":"YulFunctionCall","src":"19792:29:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19783:3:7"},"nodeType":"YulFunctionCall","src":"19783:39:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19776:3:7"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19524:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19531:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19539:3:7","type":""}],"src":"19451:377:7"},{"body":{"nodeType":"YulBlock","src":"19952:195:7","statements":[{"nodeType":"YulAssignment","src":"19962:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19974:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"19985:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19970:3:7"},"nodeType":"YulFunctionCall","src":"19970:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19962:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20009:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"20020:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20005:3:7"},"nodeType":"YulFunctionCall","src":"20005:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20028:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"20034:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20024:3:7"},"nodeType":"YulFunctionCall","src":"20024:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19998:6:7"},"nodeType":"YulFunctionCall","src":"19998:47:7"},"nodeType":"YulExpressionStatement","src":"19998:47:7"},{"nodeType":"YulAssignment","src":"20054:86:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20126:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"20135:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20062:63:7"},"nodeType":"YulFunctionCall","src":"20062:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20054:4:7"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19924:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19936:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19947:4:7","type":""}],"src":"19834:313:7"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$80_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$80_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$80_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$80__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$80_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1dc03f8b8317fbb477c657e10f8d356262b327e968700d1702cc10cb0bdcffd5(memPtr) {\n\n        mstore(add(memPtr, 0), \"AirdropClaim: Already claimed\")\n\n    }\n\n    function abi_encode_t_stringliteral_1dc03f8b8317fbb477c657e10f8d356262b327e968700d1702cc10cb0bdcffd5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_1dc03f8b8317fbb477c657e10f8d356262b327e968700d1702cc10cb0bdcffd5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1dc03f8b8317fbb477c657e10f8d356262b327e968700d1702cc10cb0bdcffd5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1dc03f8b8317fbb477c657e10f8d356262b327e968700d1702cc10cb0bdcffd5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f349606239a9234eee39e49501e0b425b2a8ef0c51f02761a11981a9bcb2f66f(memPtr) {\n\n        mstore(add(memPtr, 0), \"AirdropClaim: Claiming period ex\")\n\n        mstore(add(memPtr, 32), \"pired\")\n\n    }\n\n    function abi_encode_t_stringliteral_f349606239a9234eee39e49501e0b425b2a8ef0c51f02761a11981a9bcb2f66f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f349606239a9234eee39e49501e0b425b2a8ef0c51f02761a11981a9bcb2f66f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f349606239a9234eee39e49501e0b425b2a8ef0c51f02761a11981a9bcb2f66f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f349606239a9234eee39e49501e0b425b2a8ef0c51f02761a11981a9bcb2f66f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_618ec091330d38232431c90a4e5ff4f783e70a9855128944a94a2bdaabe7bed1(memPtr) {\n\n        mstore(add(memPtr, 0), \"AirdropClaim: Invalid Address\")\n\n    }\n\n    function abi_encode_t_stringliteral_618ec091330d38232431c90a4e5ff4f783e70a9855128944a94a2bdaabe7bed1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_618ec091330d38232431c90a4e5ff4f783e70a9855128944a94a2bdaabe7bed1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_618ec091330d38232431c90a4e5ff4f783e70a9855128944a94a2bdaabe7bed1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_618ec091330d38232431c90a4e5ff4f783e70a9855128944a94a2bdaabe7bed1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8b937f640c8689e153f396d43b89a366de8938ad7ec363142bf8fa217b1e6980(memPtr) {\n\n        mstore(add(memPtr, 0), \"AirdropClaim: Only owner can rec\")\n\n        mstore(add(memPtr, 32), \"over tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_8b937f640c8689e153f396d43b89a366de8938ad7ec363142bf8fa217b1e6980_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_8b937f640c8689e153f396d43b89a366de8938ad7ec363142bf8fa217b1e6980(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b937f640c8689e153f396d43b89a366de8938ad7ec363142bf8fa217b1e6980__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b937f640c8689e153f396d43b89a366de8938ad7ec363142bf8fa217b1e6980_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_813b76783a8d6b30dcbad16773ab780816fefb3c6a5b4a6e32e4c5513d3b3924(memPtr) {\n\n        mstore(add(memPtr, 0), \"AirdropClaim: Airdrop still acti\")\n\n        mstore(add(memPtr, 32), \"ve\")\n\n    }\n\n    function abi_encode_t_stringliteral_813b76783a8d6b30dcbad16773ab780816fefb3c6a5b4a6e32e4c5513d3b3924_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_813b76783a8d6b30dcbad16773ab780816fefb3c6a5b4a6e32e4c5513d3b3924(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_813b76783a8d6b30dcbad16773ab780816fefb3c6a5b4a6e32e4c5513d3b3924__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_813b76783a8d6b30dcbad16773ab780816fefb3c6a5b4a6e32e4c5513d3b3924_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n","id":7,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061007f5760003560e01c806373b2e80e1161004e57806373b2e80e146101385780637c0f1ee7146101755780638da5cb5b1461018c578063b79092fd146101b757610089565b806329dcb0cf1461008e5780632eb4a7ab146100b95780633d13f874146100e45780634d06068a1461010d57610089565b3661008957600080fd5b600080fd5b34801561009a57600080fd5b506100a36101e0565b6040516100b09190610b65565b60405180910390f35b3480156100c557600080fd5b506100ce6101e6565b6040516100db9190610b99565b60405180910390f35b3480156100f057600080fd5b5061010b60048036038101906101069190610cad565b6101ec565b005b34801561011957600080fd5b50610122610478565b60405161012f9190610d80565b60405180910390f35b34801561014457600080fd5b5061015f600480360381019061015a9190610d9b565b61049e565b60405161016c9190610de3565b60405180910390f35b34801561018157600080fd5b5061018a6104be565b005b34801561019857600080fd5b506101a1610682565b6040516101ae9190610e0d565b60405180910390f35b3480156101c357600080fd5b506101de60048036038101906101d99190610e28565b6106a8565b005b60035481565b60005481565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610279576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027090610eb2565b60405180910390fd5b6003544311156102be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b590610f44565b60405180910390fd5b600084846040516020016102d3929190610fcd565b604051602081830303815290604052805190602001209050600061033b848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050600054846106fa565b90508061037d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037490611045565b60405180910390fd5b6001600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506104228686600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166107119092919063ffffffff16565b8573ffffffffffffffffffffffffffffffffffffffff167fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a866040516104689190610b65565b60405180910390a2505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461054e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610545906110d7565b60405180910390fd5b6003544311610592576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058990611169565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105ef9190610e0d565b602060405180830381865afa15801561060c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610630919061119e565b905061067f3382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166107119092919063ffffffff16565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106f7333083600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610797909392919063ffffffff16565b50565b6000826107078584610820565b1490509392505050565b6107928363a9059cbb60e01b84846040516024016107309291906111cb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610876565b505050565b61081a846323b872dd60e01b8585856040516024016107b8939291906111f4565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610876565b50505050565b60008082905060005b845181101561086b57610856828683815181106108495761084861122b565b5b602002602001015161093d565b9150808061086390611289565b915050610829565b508091505092915050565b60006108d8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166109689092919063ffffffff16565b905060008151111561093857808060200190518101906108f891906112fd565b610937576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092e9061139c565b60405180910390fd5b5b505050565b6000818310610955576109508284610980565b610960565b61095f8383610980565b5b905092915050565b60606109778484600085610997565b90509392505050565b600082600052816020526040600020905092915050565b6060824710156109dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d39061142e565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610a0591906114bf565b60006040518083038185875af1925050503d8060008114610a42576040519150601f19603f3d011682016040523d82523d6000602084013e610a47565b606091505b5091509150610a5887838387610a64565b92505050949350505050565b60608315610ac6576000835103610abe57610a7e85610ad9565b610abd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab490611522565b60405180910390fd5b5b829050610ad1565b610ad08383610afc565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115610b0f5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b439190611597565b60405180910390fd5b6000819050919050565b610b5f81610b4c565b82525050565b6000602082019050610b7a6000830184610b56565b92915050565b6000819050919050565b610b9381610b80565b82525050565b6000602082019050610bae6000830184610b8a565b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610be982610bbe565b9050919050565b610bf981610bde565b8114610c0457600080fd5b50565b600081359050610c1681610bf0565b92915050565b610c2581610b4c565b8114610c3057600080fd5b50565b600081359050610c4281610c1c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610c6d57610c6c610c48565b5b8235905067ffffffffffffffff811115610c8a57610c89610c4d565b5b602083019150836020820283011115610ca657610ca5610c52565b5b9250929050565b60008060008060608587031215610cc757610cc6610bb4565b5b6000610cd587828801610c07565b9450506020610ce687828801610c33565b935050604085013567ffffffffffffffff811115610d0757610d06610bb9565b5b610d1387828801610c57565b925092505092959194509250565b6000819050919050565b6000610d46610d41610d3c84610bbe565b610d21565b610bbe565b9050919050565b6000610d5882610d2b565b9050919050565b6000610d6a82610d4d565b9050919050565b610d7a81610d5f565b82525050565b6000602082019050610d956000830184610d71565b92915050565b600060208284031215610db157610db0610bb4565b5b6000610dbf84828501610c07565b91505092915050565b60008115159050919050565b610ddd81610dc8565b82525050565b6000602082019050610df86000830184610dd4565b92915050565b610e0781610bde565b82525050565b6000602082019050610e226000830184610dfe565b92915050565b600060208284031215610e3e57610e3d610bb4565b5b6000610e4c84828501610c33565b91505092915050565b600082825260208201905092915050565b7f41697264726f70436c61696d3a20416c726561647920636c61696d6564000000600082015250565b6000610e9c601d83610e55565b9150610ea782610e66565b602082019050919050565b60006020820190508181036000830152610ecb81610e8f565b9050919050565b7f41697264726f70436c61696d3a20436c61696d696e6720706572696f6420657860008201527f7069726564000000000000000000000000000000000000000000000000000000602082015250565b6000610f2e602583610e55565b9150610f3982610ed2565b604082019050919050565b60006020820190508181036000830152610f5d81610f21565b9050919050565b60008160601b9050919050565b6000610f7c82610f64565b9050919050565b6000610f8e82610f71565b9050919050565b610fa6610fa182610bde565b610f83565b82525050565b6000819050919050565b610fc7610fc282610b4c565b610fac565b82525050565b6000610fd98285610f95565b601482019150610fe98284610fb6565b6020820191508190509392505050565b7f41697264726f70436c61696d3a20496e76616c69642041646472657373000000600082015250565b600061102f601d83610e55565b915061103a82610ff9565b602082019050919050565b6000602082019050818103600083015261105e81611022565b9050919050565b7f41697264726f70436c61696d3a204f6e6c79206f776e65722063616e2072656360008201527f6f76657220746f6b656e73000000000000000000000000000000000000000000602082015250565b60006110c1602b83610e55565b91506110cc82611065565b604082019050919050565b600060208201905081810360008301526110f0816110b4565b9050919050565b7f41697264726f70436c61696d3a2041697264726f70207374696c6c206163746960008201527f7665000000000000000000000000000000000000000000000000000000000000602082015250565b6000611153602283610e55565b915061115e826110f7565b604082019050919050565b6000602082019050818103600083015261118281611146565b9050919050565b60008151905061119881610c1c565b92915050565b6000602082840312156111b4576111b3610bb4565b5b60006111c284828501611189565b91505092915050565b60006040820190506111e06000830185610dfe565b6111ed6020830184610b56565b9392505050565b60006060820190506112096000830186610dfe565b6112166020830185610dfe565b6112236040830184610b56565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061129482610b4c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112c6576112c561125a565b5b600182019050919050565b6112da81610dc8565b81146112e557600080fd5b50565b6000815190506112f7816112d1565b92915050565b60006020828403121561131357611312610bb4565b5b6000611321848285016112e8565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611386602a83610e55565b91506113918261132a565b604082019050919050565b600060208201905081810360008301526113b581611379565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611418602683610e55565b9150611423826113bc565b604082019050919050565b600060208201905081810360008301526114478161140b565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611482578082015181840152602081019050611467565b60008484015250505050565b60006114998261144e565b6114a38185611459565b93506114b3818560208601611464565b80840191505092915050565b60006114cb828461148e565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b600061150c601d83610e55565b9150611517826114d6565b602082019050919050565b6000602082019050818103600083015261153b816114ff565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b600061156982611542565b6115738185610e55565b9350611583818560208601611464565b61158c8161154d565b840191505092915050565b600060208201905081810360008301526115b1818461155e565b90509291505056fea26469706673582212203e2b5d92b5885e5e34eb865b57c066cee37717153c441ab60cf1a9b37d63eefc64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73B2E80E GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x73B2E80E EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x7C0F1EE7 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xB79092FD EQ PUSH2 0x1B7 JUMPI PUSH2 0x89 JUMP JUMPDEST DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x3D13F874 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x4D06068A EQ PUSH2 0x10D JUMPI PUSH2 0x89 JUMP JUMPDEST CALLDATASIZE PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA3 PUSH2 0x1E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCE PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB SWAP2 SWAP1 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x106 SWAP2 SWAP1 PUSH2 0xCAD JUMP JUMPDEST PUSH2 0x1EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH2 0x4BE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A1 PUSH2 0x682 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x6A8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x279 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x270 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD NUMBER GT ISZERO PUSH2 0x2BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B5 SWAP1 PUSH2 0xF44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2D3 SWAP3 SWAP2 SWAP1 PUSH2 0xFCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x33B DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH1 0x0 SLOAD DUP5 PUSH2 0x6FA JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x37D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x422 DUP7 DUP7 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x711 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A DUP7 PUSH1 0x40 MLOAD PUSH2 0x468 SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x545 SWAP1 PUSH2 0x10D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD NUMBER GT PUSH2 0x592 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x589 SWAP1 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x630 SWAP2 SWAP1 PUSH2 0x119E JUMP JUMPDEST SWAP1 POP PUSH2 0x67F CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x711 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6F7 CALLER ADDRESS DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x797 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x707 DUP6 DUP5 PUSH2 0x820 JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x792 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x730 SWAP3 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x876 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x81A DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x7B8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x876 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x86B JUMPI PUSH2 0x856 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x849 JUMPI PUSH2 0x848 PUSH2 0x122B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x93D JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x863 SWAP1 PUSH2 0x1289 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x829 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D8 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x968 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x938 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x8F8 SWAP2 SWAP1 PUSH2 0x12FD JUMP JUMPDEST PUSH2 0x937 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92E SWAP1 PUSH2 0x139C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x955 JUMPI PUSH2 0x950 DUP3 DUP5 PUSH2 0x980 JUMP JUMPDEST PUSH2 0x960 JUMP JUMPDEST PUSH2 0x95F DUP4 DUP4 PUSH2 0x980 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x977 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x997 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x9DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D3 SWAP1 PUSH2 0x142E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA05 SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA42 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA47 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xA58 DUP8 DUP4 DUP4 DUP8 PUSH2 0xA64 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0xABE JUMPI PUSH2 0xA7E DUP6 PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0xABD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB4 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0xAD0 DUP4 DUP4 PUSH2 0xAFC JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0xB0F JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB43 SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB5F DUP2 PUSH2 0xB4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB7A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB93 DUP2 PUSH2 0xB80 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBAE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE9 DUP3 PUSH2 0xBBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBF9 DUP2 PUSH2 0xBDE JUMP JUMPDEST DUP2 EQ PUSH2 0xC04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC16 DUP2 PUSH2 0xBF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC25 DUP2 PUSH2 0xB4C JUMP JUMPDEST DUP2 EQ PUSH2 0xC30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC42 DUP2 PUSH2 0xC1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xC6D JUMPI PUSH2 0xC6C PUSH2 0xC48 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC8A JUMPI PUSH2 0xC89 PUSH2 0xC4D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xCA6 JUMPI PUSH2 0xCA5 PUSH2 0xC52 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xCC7 JUMPI PUSH2 0xCC6 PUSH2 0xBB4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCD5 DUP8 DUP3 DUP9 ADD PUSH2 0xC07 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xCE6 DUP8 DUP3 DUP9 ADD PUSH2 0xC33 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xBB9 JUMP JUMPDEST JUMPDEST PUSH2 0xD13 DUP8 DUP3 DUP9 ADD PUSH2 0xC57 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD46 PUSH2 0xD41 PUSH2 0xD3C DUP5 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0xD21 JUMP JUMPDEST PUSH2 0xBBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD58 DUP3 PUSH2 0xD2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6A DUP3 PUSH2 0xD4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD7A DUP2 PUSH2 0xD5F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD95 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB1 JUMPI PUSH2 0xDB0 PUSH2 0xBB4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDBF DUP5 DUP3 DUP6 ADD PUSH2 0xC07 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDDD DUP2 PUSH2 0xDC8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE07 DUP2 PUSH2 0xBDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE22 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3E JUMPI PUSH2 0xE3D PUSH2 0xBB4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE4C DUP5 DUP3 DUP6 ADD PUSH2 0xC33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41697264726F70436C61696D3A20416C726561647920636C61696D6564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9C PUSH1 0x1D DUP4 PUSH2 0xE55 JUMP JUMPDEST SWAP2 POP PUSH2 0xEA7 DUP3 PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xECB DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41697264726F70436C61696D3A20436C61696D696E6720706572696F64206578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7069726564000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2E PUSH1 0x25 DUP4 PUSH2 0xE55 JUMP JUMPDEST SWAP2 POP PUSH2 0xF39 DUP3 PUSH2 0xED2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF5D DUP2 PUSH2 0xF21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7C DUP3 PUSH2 0xF64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8E DUP3 PUSH2 0xF71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFA6 PUSH2 0xFA1 DUP3 PUSH2 0xBDE JUMP JUMPDEST PUSH2 0xF83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC7 PUSH2 0xFC2 DUP3 PUSH2 0xB4C JUMP JUMPDEST PUSH2 0xFAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD9 DUP3 DUP6 PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xFE9 DUP3 DUP5 PUSH2 0xFB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x41697264726F70436C61696D3A20496E76616C69642041646472657373000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102F PUSH1 0x1D DUP4 PUSH2 0xE55 JUMP JUMPDEST SWAP2 POP PUSH2 0x103A DUP3 PUSH2 0xFF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x105E DUP2 PUSH2 0x1022 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41697264726F70436C61696D3A204F6E6C79206F776E65722063616E20726563 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F76657220746F6B656E73000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C1 PUSH1 0x2B DUP4 PUSH2 0xE55 JUMP JUMPDEST SWAP2 POP PUSH2 0x10CC DUP3 PUSH2 0x1065 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10F0 DUP2 PUSH2 0x10B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41697264726F70436C61696D3A2041697264726F70207374696C6C2061637469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7665000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1153 PUSH1 0x22 DUP4 PUSH2 0xE55 JUMP JUMPDEST SWAP2 POP PUSH2 0x115E DUP3 PUSH2 0x10F7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1182 DUP2 PUSH2 0x1146 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1198 DUP2 PUSH2 0xC1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B4 JUMPI PUSH2 0x11B3 PUSH2 0xBB4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11C2 DUP5 DUP3 DUP6 ADD PUSH2 0x1189 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11E0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xDFE JUMP JUMPDEST PUSH2 0x11ED PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB56 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1209 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xDFE JUMP JUMPDEST PUSH2 0x1216 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDFE JUMP JUMPDEST PUSH2 0x1223 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB56 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1294 DUP3 PUSH2 0xB4C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x12C6 JUMPI PUSH2 0x12C5 PUSH2 0x125A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12DA DUP2 PUSH2 0xDC8 JUMP JUMPDEST DUP2 EQ PUSH2 0x12E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12F7 DUP2 PUSH2 0x12D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1313 JUMPI PUSH2 0x1312 PUSH2 0xBB4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1321 DUP5 DUP3 DUP6 ADD PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1386 PUSH1 0x2A DUP4 PUSH2 0xE55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1391 DUP3 PUSH2 0x132A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13B5 DUP2 PUSH2 0x1379 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1418 PUSH1 0x26 DUP4 PUSH2 0xE55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1423 DUP3 PUSH2 0x13BC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1447 DUP2 PUSH2 0x140B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1482 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1499 DUP3 PUSH2 0x144E JUMP JUMPDEST PUSH2 0x14A3 DUP2 DUP6 PUSH2 0x1459 JUMP JUMPDEST SWAP4 POP PUSH2 0x14B3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1464 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14CB DUP3 DUP5 PUSH2 0x148E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150C PUSH1 0x1D DUP4 PUSH2 0xE55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1517 DUP3 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x153B DUP2 PUSH2 0x14FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1569 DUP3 PUSH2 0x1542 JUMP JUMPDEST PUSH2 0x1573 DUP2 DUP6 PUSH2 0xE55 JUMP JUMPDEST SWAP4 POP PUSH2 0x1583 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1464 JUMP JUMPDEST PUSH2 0x158C DUP2 PUSH2 0x154D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15B1 DUP2 DUP5 PUSH2 0x155E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0x2B 0x5D SWAP3 0xB5 DUP9 0x5E 0x5E CALLVALUE 0xEB DUP7 JUMPDEST JUMPI 0xC0 PUSH7 0xCEE37717153C44 BYTE 0xB6 0xC CALL 0xA9 0xB3 PUSH30 0x63EEFC64736F6C6343000811003300000000000000000000000000000000 ","sourceMap":"398:3484:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3867:8;;;398:3484;;;;769:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;535:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:693;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;698:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;860:42;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3303:481;;;;;;;;;;;;;:::i;:::-;;624:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2976:124;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;769:23;;;;:::o;535:25::-;;;;:::o;2081:693::-;2256:10;:15;2267:3;2256:15;;;;;;;;;;;;;;;;;;;;;;;;;2255:16;2247:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2335:8;;2319:12;:24;;2311:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2445:12;2487:3;2492:7;2470:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2460:41;;;;;;2445:56;;2507:16;2526:44;2545:6;;2526:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2553:10;;2565:4;2526:18;:44::i;:::-;2507:63;;2581:11;2576:57;;2594:39;;;;;;;;;;:::i;:::-;;;;;;;;2576:57;2688:4;2670:10;:15;2681:3;2670:15;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;2698:39;2724:3;2729:7;2698:12;;;;;;;;;;;:25;;;;:39;;;;;:::i;:::-;2756:3;2748:21;;;2761:7;2748:21;;;;;;:::i;:::-;;;;;;;;2162:612;;2081:693;;;;:::o;698:26::-;;;;;;;;;;;;;:::o;860:42::-;;;;;;;;;;;;;;;;;;;;;;:::o;3303:481::-;3438:5;;;;;;;;;;;3424:19;;:10;:19;;;3416:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;3520:8;;3505:12;:23;3497:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3613:22;3639:12;;;;;;;;;;;:22;;;3670:4;3639:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3613:63;;3726:53;3752:10;3764:14;3726:12;;;;;;;;;;;:25;;;;:53;;;;;:::i;:::-;3336:448;3303:481::o;624:20::-;;;;;;;;;;;;;:::o;2976:124::-;3030:65;3060:10;3080:4;3087:7;3030:12;;;;;;;;;;;:29;;;;:65;;;;;;:::i;:::-;2976:124;:::o;1156:184:5:-;1277:4;1329;1300:25;1313:5;1320:4;1300:12;:25::i;:::-;:33;1293:40;;1156:184;;;;;:::o;763:205:3:-;875:86;895:5;925:23;;;950:2;954:5;902:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;974:241::-;1112:96;1132:5;1162:27;;;1191:4;1197:2;1201:5;1139:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;1994:290:5:-;2077:7;2096:20;2119:4;2096:27;;2138:9;2133:116;2157:5;:12;2153:1;:16;2133:116;;;2205:33;2215:12;2229:5;2235:1;2229:8;;;;;;;;:::i;:::-;;;;;;;;2205:9;:33::i;:::-;2190:48;;2171:3;;;;;:::i;:::-;;;;2133:116;;;;2265:12;2258:19;;;1994:290;;;;:::o;3747:706:3:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4166:95;;4295:1;4275:10;:17;:21;4271:176;;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:176;3817:636;3747:706;;:::o;8879:147:5:-;8942:7;8972:1;8968;:5;:51;;8999:20;9014:1;9017;8999:14;:20::i;:::-;8968:51;;;8976:20;8991:1;8994;8976:14;:20::i;:::-;8968:51;8961:58;;8879:147;;;;:::o;3873:223:4:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;;3873:223;;;;;:::o;9032:261:5:-;9100:13;9204:1;9198:4;9191:15;9232:1;9226:4;9219:15;9272:4;9266;9256:21;9247:30;;9032:261;;;;:::o;4960:446:4:-;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;;;;4960:446;;;;;;:::o;7466:628::-;7646:12;7674:7;7670:418;;;7722:1;7701:10;:17;:22;7697:286;;7916:18;7927:6;7916:10;:18::i;:::-;7908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:286;8003:10;7996:17;;;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;8616:540::-;8795:1;8775:10;:17;:21;8771:379;;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:77:7;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:77::-;479:7;508:5;497:16;;442:77;;;:::o;525:118::-;612:24;630:5;612:24;:::i;:::-;607:3;600:37;525:118;;:::o;649:222::-;742:4;780:2;769:9;765:18;757:26;;793:71;861:1;850:9;846:17;837:6;793:71;:::i;:::-;649:222;;;;:::o;958:117::-;1067:1;1064;1057:12;1081:117;1190:1;1187;1180:12;1204:126;1241:7;1281:42;1274:5;1270:54;1259:65;;1204:126;;;:::o;1336:96::-;1373:7;1402:24;1420:5;1402:24;:::i;:::-;1391:35;;1336:96;;;:::o;1438:122::-;1511:24;1529:5;1511:24;:::i;:::-;1504:5;1501:35;1491:63;;1550:1;1547;1540:12;1491:63;1438:122;:::o;1566:139::-;1612:5;1650:6;1637:20;1628:29;;1666:33;1693:5;1666:33;:::i;:::-;1566:139;;;;:::o;1711:122::-;1784:24;1802:5;1784:24;:::i;:::-;1777:5;1774:35;1764:63;;1823:1;1820;1813:12;1764:63;1711:122;:::o;1839:139::-;1885:5;1923:6;1910:20;1901:29;;1939:33;1966:5;1939:33;:::i;:::-;1839:139;;;;:::o;1984:117::-;2093:1;2090;2083:12;2107:117;2216:1;2213;2206:12;2230:117;2339:1;2336;2329:12;2370:568;2443:8;2453:6;2503:3;2496:4;2488:6;2484:17;2480:27;2470:122;;2511:79;;:::i;:::-;2470:122;2624:6;2611:20;2601:30;;2654:18;2646:6;2643:30;2640:117;;;2676:79;;:::i;:::-;2640:117;2790:4;2782:6;2778:17;2766:29;;2844:3;2836:4;2828:6;2824:17;2814:8;2810:32;2807:41;2804:128;;;2851:79;;:::i;:::-;2804:128;2370:568;;;;;:::o;2944:849::-;3048:6;3056;3064;3072;3121:2;3109:9;3100:7;3096:23;3092:32;3089:119;;;3127:79;;:::i;:::-;3089:119;3247:1;3272:53;3317:7;3308:6;3297:9;3293:22;3272:53;:::i;:::-;3262:63;;3218:117;3374:2;3400:53;3445:7;3436:6;3425:9;3421:22;3400:53;:::i;:::-;3390:63;;3345:118;3530:2;3519:9;3515:18;3502:32;3561:18;3553:6;3550:30;3547:117;;;3583:79;;:::i;:::-;3547:117;3696:80;3768:7;3759:6;3748:9;3744:22;3696:80;:::i;:::-;3678:98;;;;3473:313;2944:849;;;;;;;:::o;3799:60::-;3827:3;3848:5;3841:12;;3799:60;;;:::o;3865:142::-;3915:9;3948:53;3966:34;3975:24;3993:5;3975:24;:::i;:::-;3966:34;:::i;:::-;3948:53;:::i;:::-;3935:66;;3865:142;;;:::o;4013:126::-;4063:9;4096:37;4127:5;4096:37;:::i;:::-;4083:50;;4013:126;;;:::o;4145:139::-;4208:9;4241:37;4272:5;4241:37;:::i;:::-;4228:50;;4145:139;;;:::o;4290:157::-;4390:50;4434:5;4390:50;:::i;:::-;4385:3;4378:63;4290:157;;:::o;4453:248::-;4559:4;4597:2;4586:9;4582:18;4574:26;;4610:84;4691:1;4680:9;4676:17;4667:6;4610:84;:::i;:::-;4453:248;;;;:::o;4707:329::-;4766:6;4815:2;4803:9;4794:7;4790:23;4786:32;4783:119;;;4821:79;;:::i;:::-;4783:119;4941:1;4966:53;5011:7;5002:6;4991:9;4987:22;4966:53;:::i;:::-;4956:63;;4912:117;4707:329;;;;:::o;5042:90::-;5076:7;5119:5;5112:13;5105:21;5094:32;;5042:90;;;:::o;5138:109::-;5219:21;5234:5;5219:21;:::i;:::-;5214:3;5207:34;5138:109;;:::o;5253:210::-;5340:4;5378:2;5367:9;5363:18;5355:26;;5391:65;5453:1;5442:9;5438:17;5429:6;5391:65;:::i;:::-;5253:210;;;;:::o;5469:118::-;5556:24;5574:5;5556:24;:::i;:::-;5551:3;5544:37;5469:118;;:::o;5593:222::-;5686:4;5724:2;5713:9;5709:18;5701:26;;5737:71;5805:1;5794:9;5790:17;5781:6;5737:71;:::i;:::-;5593:222;;;;:::o;5821:329::-;5880:6;5929:2;5917:9;5908:7;5904:23;5900:32;5897:119;;;5935:79;;:::i;:::-;5897:119;6055:1;6080:53;6125:7;6116:6;6105:9;6101:22;6080:53;:::i;:::-;6070:63;;6026:117;5821:329;;;;:::o;6156:169::-;6240:11;6274:6;6269:3;6262:19;6314:4;6309:3;6305:14;6290:29;;6156:169;;;;:::o;6331:179::-;6471:31;6467:1;6459:6;6455:14;6448:55;6331:179;:::o;6516:366::-;6658:3;6679:67;6743:2;6738:3;6679:67;:::i;:::-;6672:74;;6755:93;6844:3;6755:93;:::i;:::-;6873:2;6868:3;6864:12;6857:19;;6516:366;;;:::o;6888:419::-;7054:4;7092:2;7081:9;7077:18;7069:26;;7141:9;7135:4;7131:20;7127:1;7116:9;7112:17;7105:47;7169:131;7295:4;7169:131;:::i;:::-;7161:139;;6888:419;;;:::o;7313:224::-;7453:34;7449:1;7441:6;7437:14;7430:58;7522:7;7517:2;7509:6;7505:15;7498:32;7313:224;:::o;7543:366::-;7685:3;7706:67;7770:2;7765:3;7706:67;:::i;:::-;7699:74;;7782:93;7871:3;7782:93;:::i;:::-;7900:2;7895:3;7891:12;7884:19;;7543:366;;;:::o;7915:419::-;8081:4;8119:2;8108:9;8104:18;8096:26;;8168:9;8162:4;8158:20;8154:1;8143:9;8139:17;8132:47;8196:131;8322:4;8196:131;:::i;:::-;8188:139;;7915:419;;;:::o;8340:94::-;8373:8;8421:5;8417:2;8413:14;8392:35;;8340:94;;;:::o;8440:::-;8479:7;8508:20;8522:5;8508:20;:::i;:::-;8497:31;;8440:94;;;:::o;8540:100::-;8579:7;8608:26;8628:5;8608:26;:::i;:::-;8597:37;;8540:100;;;:::o;8646:157::-;8751:45;8771:24;8789:5;8771:24;:::i;:::-;8751:45;:::i;:::-;8746:3;8739:58;8646:157;;:::o;8809:79::-;8848:7;8877:5;8866:16;;8809:79;;;:::o;8894:157::-;8999:45;9019:24;9037:5;9019:24;:::i;:::-;8999:45;:::i;:::-;8994:3;8987:58;8894:157;;:::o;9057:397::-;9197:3;9212:75;9283:3;9274:6;9212:75;:::i;:::-;9312:2;9307:3;9303:12;9296:19;;9325:75;9396:3;9387:6;9325:75;:::i;:::-;9425:2;9420:3;9416:12;9409:19;;9445:3;9438:10;;9057:397;;;;;:::o;9460:179::-;9600:31;9596:1;9588:6;9584:14;9577:55;9460:179;:::o;9645:366::-;9787:3;9808:67;9872:2;9867:3;9808:67;:::i;:::-;9801:74;;9884:93;9973:3;9884:93;:::i;:::-;10002:2;9997:3;9993:12;9986:19;;9645:366;;;:::o;10017:419::-;10183:4;10221:2;10210:9;10206:18;10198:26;;10270:9;10264:4;10260:20;10256:1;10245:9;10241:17;10234:47;10298:131;10424:4;10298:131;:::i;:::-;10290:139;;10017:419;;;:::o;10442:230::-;10582:34;10578:1;10570:6;10566:14;10559:58;10651:13;10646:2;10638:6;10634:15;10627:38;10442:230;:::o;10678:366::-;10820:3;10841:67;10905:2;10900:3;10841:67;:::i;:::-;10834:74;;10917:93;11006:3;10917:93;:::i;:::-;11035:2;11030:3;11026:12;11019:19;;10678:366;;;:::o;11050:419::-;11216:4;11254:2;11243:9;11239:18;11231:26;;11303:9;11297:4;11293:20;11289:1;11278:9;11274:17;11267:47;11331:131;11457:4;11331:131;:::i;:::-;11323:139;;11050:419;;;:::o;11475:221::-;11615:34;11611:1;11603:6;11599:14;11592:58;11684:4;11679:2;11671:6;11667:15;11660:29;11475:221;:::o;11702:366::-;11844:3;11865:67;11929:2;11924:3;11865:67;:::i;:::-;11858:74;;11941:93;12030:3;11941:93;:::i;:::-;12059:2;12054:3;12050:12;12043:19;;11702:366;;;:::o;12074:419::-;12240:4;12278:2;12267:9;12263:18;12255:26;;12327:9;12321:4;12317:20;12313:1;12302:9;12298:17;12291:47;12355:131;12481:4;12355:131;:::i;:::-;12347:139;;12074:419;;;:::o;12499:143::-;12556:5;12587:6;12581:13;12572:22;;12603:33;12630:5;12603:33;:::i;:::-;12499:143;;;;:::o;12648:351::-;12718:6;12767:2;12755:9;12746:7;12742:23;12738:32;12735:119;;;12773:79;;:::i;:::-;12735:119;12893:1;12918:64;12974:7;12965:6;12954:9;12950:22;12918:64;:::i;:::-;12908:74;;12864:128;12648:351;;;;:::o;13005:332::-;13126:4;13164:2;13153:9;13149:18;13141:26;;13177:71;13245:1;13234:9;13230:17;13221:6;13177:71;:::i;:::-;13258:72;13326:2;13315:9;13311:18;13302:6;13258:72;:::i;:::-;13005:332;;;;;:::o;13343:442::-;13492:4;13530:2;13519:9;13515:18;13507:26;;13543:71;13611:1;13600:9;13596:17;13587:6;13543:71;:::i;:::-;13624:72;13692:2;13681:9;13677:18;13668:6;13624:72;:::i;:::-;13706;13774:2;13763:9;13759:18;13750:6;13706:72;:::i;:::-;13343:442;;;;;;:::o;13791:180::-;13839:77;13836:1;13829:88;13936:4;13933:1;13926:15;13960:4;13957:1;13950:15;13977:180;14025:77;14022:1;14015:88;14122:4;14119:1;14112:15;14146:4;14143:1;14136:15;14163:233;14202:3;14225:24;14243:5;14225:24;:::i;:::-;14216:33;;14271:66;14264:5;14261:77;14258:103;;14341:18;;:::i;:::-;14258:103;14388:1;14381:5;14377:13;14370:20;;14163:233;;;:::o;14402:116::-;14472:21;14487:5;14472:21;:::i;:::-;14465:5;14462:32;14452:60;;14508:1;14505;14498:12;14452:60;14402:116;:::o;14524:137::-;14578:5;14609:6;14603:13;14594:22;;14625:30;14649:5;14625:30;:::i;:::-;14524:137;;;;:::o;14667:345::-;14734:6;14783:2;14771:9;14762:7;14758:23;14754:32;14751:119;;;14789:79;;:::i;:::-;14751:119;14909:1;14934:61;14987:7;14978:6;14967:9;14963:22;14934:61;:::i;:::-;14924:71;;14880:125;14667:345;;;;:::o;15018:229::-;15158:34;15154:1;15146:6;15142:14;15135:58;15227:12;15222:2;15214:6;15210:15;15203:37;15018:229;:::o;15253:366::-;15395:3;15416:67;15480:2;15475:3;15416:67;:::i;:::-;15409:74;;15492:93;15581:3;15492:93;:::i;:::-;15610:2;15605:3;15601:12;15594:19;;15253:366;;;:::o;15625:419::-;15791:4;15829:2;15818:9;15814:18;15806:26;;15878:9;15872:4;15868:20;15864:1;15853:9;15849:17;15842:47;15906:131;16032:4;15906:131;:::i;:::-;15898:139;;15625:419;;;:::o;16050:225::-;16190:34;16186:1;16178:6;16174:14;16167:58;16259:8;16254:2;16246:6;16242:15;16235:33;16050:225;:::o;16281:366::-;16423:3;16444:67;16508:2;16503:3;16444:67;:::i;:::-;16437:74;;16520:93;16609:3;16520:93;:::i;:::-;16638:2;16633:3;16629:12;16622:19;;16281:366;;;:::o;16653:419::-;16819:4;16857:2;16846:9;16842:18;16834:26;;16906:9;16900:4;16896:20;16892:1;16881:9;16877:17;16870:47;16934:131;17060:4;16934:131;:::i;:::-;16926:139;;16653:419;;;:::o;17078:98::-;17129:6;17163:5;17157:12;17147:22;;17078:98;;;:::o;17182:147::-;17283:11;17320:3;17305:18;;17182:147;;;;:::o;17335:246::-;17416:1;17426:113;17440:6;17437:1;17434:13;17426:113;;;17525:1;17520:3;17516:11;17510:18;17506:1;17501:3;17497:11;17490:39;17462:2;17459:1;17455:10;17450:15;;17426:113;;;17573:1;17564:6;17559:3;17555:16;17548:27;17397:184;17335:246;;;:::o;17587:386::-;17691:3;17719:38;17751:5;17719:38;:::i;:::-;17773:88;17854:6;17849:3;17773:88;:::i;:::-;17766:95;;17870:65;17928:6;17923:3;17916:4;17909:5;17905:16;17870:65;:::i;:::-;17960:6;17955:3;17951:16;17944:23;;17695:278;17587:386;;;;:::o;17979:271::-;18109:3;18131:93;18220:3;18211:6;18131:93;:::i;:::-;18124:100;;18241:3;18234:10;;17979:271;;;;:::o;18256:179::-;18396:31;18392:1;18384:6;18380:14;18373:55;18256:179;:::o;18441:366::-;18583:3;18604:67;18668:2;18663:3;18604:67;:::i;:::-;18597:74;;18680:93;18769:3;18680:93;:::i;:::-;18798:2;18793:3;18789:12;18782:19;;18441:366;;;:::o;18813:419::-;18979:4;19017:2;19006:9;19002:18;18994:26;;19066:9;19060:4;19056:20;19052:1;19041:9;19037:17;19030:47;19094:131;19220:4;19094:131;:::i;:::-;19086:139;;18813:419;;;:::o;19238:99::-;19290:6;19324:5;19318:12;19308:22;;19238:99;;;:::o;19343:102::-;19384:6;19435:2;19431:7;19426:2;19419:5;19415:14;19411:28;19401:38;;19343:102;;;:::o;19451:377::-;19539:3;19567:39;19600:5;19567:39;:::i;:::-;19622:71;19686:6;19681:3;19622:71;:::i;:::-;19615:78;;19702:65;19760:6;19755:3;19748:4;19741:5;19737:16;19702:65;:::i;:::-;19792:29;19814:6;19792:29;:::i;:::-;19787:3;19783:39;19776:46;;19543:285;19451:377;;;;:::o;19834:313::-;19947:4;19985:2;19974:9;19970:18;19962:26;;20034:9;20028:4;20024:20;20020:1;20009:9;20005:17;19998:47;20062:78;20135:4;20126:6;20062:78;:::i;:::-;20054:86;;19834:313;;;;:::o"},"methodIdentifiers":{"airdropToken()":"4d06068a","claim(address,uint256,bytes32[])":"3d13f874","deadline()":"29dcb0cf","depositERC20(uint256)":"b79092fd","hasClaimed(address)":"73b2e80e","merkleRoot()":"2eb4a7ab","owner()":"8da5cb5b","recoverERC20()":"7c0f1ee7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"airdropToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_proof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claim(address,uint256,bytes32[])\":{\"details\":\"A valid claim should revert if contract has insufficient funds\",\"params\":{\"_amount\":\"of tokens owed to claimee\",\"_proof\":\"merkle proof to prove address and amount are in tree\",\"_to\":\"address of claimee\"}},\"depositERC20(uint256)\":{\"details\":\"Airdrop contract must be funded prior to claiming\",\"params\":{\"_amount\":\"is the number of tokens to be deposited\"}}},\"title\":\"AirdropClaim\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(address,uint256,bytes32[])\":{\"notice\":\"Allows user to claim token if address is part of merkle tree\"},\"constructor\":{\"notice\":\"notice Creates a new AirdropClaim contract param _merkleRoot of claimees param _tokenAddress address of token to be airdropped param _deadline number of blocks airdrop will be active\"},\"depositERC20(uint256)\":{\"notice\":\"Allows token deployer to deposit ERC20 token to be airdropped\"},\"recoverERC20()\":{\"notice\":\"Allows owner to recover unclaimed ERC20 tokens deposited to contract  after airdrop deadline\"}},\"notice\":\"Allows user to claim ERC20 token if part of Merkle Tree within owner-specified deadline.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AirdropClaim.sol\":\"AirdropClaim\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xd466e8b07f4c6220eac16da5127f3ff142e65f0c15c03c7d38f257b02c8585e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6b3cab69f655e40117bbdd8e68d7423f26d1b24248fb189c295f08de8940616\",\"dweb:/ipfs/QmWoyRthsBDMa7gJpH5UCjpa8uNUQfyaGbSgY3uvhBH9F3\"]},\"contracts/AirdropClaim.sol\":{\"keccak256\":\"0xf30ca605de530ee29c9590aeca0eb8cc9603b0eaad460dd777b0757324b24ec4\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://6903a05d106be009d7f3f36a9ae260db262d0d3ce05f1fa1ed1616b77cd8df4c\",\"dweb:/ipfs/QmZ3PQFQQx8x7wJvGo5uxzkwBgyT59n32p6MjEkHvjMswy\"]}},\"version\":1}"}}}}}